apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: init-deploy-
spec:
  params:
    - name: git_url
      type: string
      description: Git clone URL
    - name: git_user
      type: string
      description: Git user
    - name: git_user_email
      type: string
      description: Git user
    - name: project_name
      type: string
      description: Name of the project
    - name: project_namespace
      type: string
      description: Name of the project namespace
    - name: environment_namespace
      type: string
      description: Name of the dev environment namespace
    - name: service_port
      type: string
      description: Port of the service
    - name: route_host
      type: string
      description: The route host for ingress
    - name: git_repository
      type: string
      description: The git repository

  tasks:
    - name: helm-create
      taskRef:
        kind: Task
        name: helm-create
      params:
        - name: chart_name
          value: $(params.project_name)
        - name: path
          value: apps
      workspaces:
        - name: source
          workspace: src
    - name: add-argo-application
      params:
        - name: PROJECT
          value: $(params.project_name)
        - name: PROJECT_NAMESPACE
          value: $(params.project_namespace)
        - name: ENVIRONMENT_NAMESPACE
          value: $(params.environment_namespace)
        - name: SERVICE_PORT
          value: $(params.service_port)
        - name: GIT_REPOSITORY
          value: $(params.git_repository)
        - name: TARGET_FOLDER
          value: bootstrap
        - name: FILE
          value: argo-application.yaml
      taskRef:
        kind: Task
        name: additional-resources
      workspaces:
        - name: target
          workspace: src
        - name: source
          workspace: additional-resources
    - name: add-helm-value-yaml
      params:
        - name: PROJECT
          value: $(params.project_name)
        - name: PROJECT_NAMESPACE
          value: $(params.project_namespace)
        - name: ENVIRONMENT_NAMESPACE
          value: $(params.environment_namespace)
        - name: SERVICE_PORT
          value: $(params.service_port)
        - name: GIT_REPOSITORY
          value: $(params.git_repository)
        - name: ROUTE_HOST
          value: $(params.route_host)
        - name: TARGET_FOLDER
          value: environments/test
        - name: FILE
          value: values.yaml
      taskRef:
        kind: Task
        name: additional-resources
      workspaces:
        - name: target
          workspace: src
        - name: source
          workspace: additional-resources
    #- name: bootstrap
    #  runAfter:
    #    - add-argo-application
    #    - add-helm-value-yaml
    #  taskRef:
    #    kind: ClusterTask
    #    name: openshift-client
    #  params:
    #    - name: SCRIPT
    #      value: oc apply -f bootstrap
    #    - name: VERSION
    #      value: latest
    #  workspaces:
    #    - name: manifest-dir
    #      workspace: src
    - name: git-init
      params:
        - name: BASE_IMAGE
          value: >-
            docker.io/alpine/git:v2.26.2@sha256:23618034b0be9205d9cc0846eb711b12ba4c9b468efdd8a59aac1d7b1a23363f
        - name: GIT_SCRIPT
          value: |
            git init && git config http.sslVerify false && git checkout -b main
        - name: USER_HOME
          value: /root
        - name: VERBOSE
          value: 'true'
        - name: GIT_USER_NAME
          value: "$(params.git_user)"
        - name: GIT_USER_EMAIL
          value: "$(params.git_user_email)"
      taskRef:
        kind: ClusterTask
        name: git-cli
      runAfter:
        - helm-create
        - add-argo-application
        - add-helm-value-yaml
      workspaces:
        - name: source
          workspace: src
    - name: git-commit
      params:
        - name: BASE_IMAGE
          value: >-
            docker.io/alpine/git:v2.26.2@sha256:23618034b0be9205d9cc0846eb711b12ba4c9b468efdd8a59aac1d7b1a23363f
        - name: GIT_SCRIPT
          value: |
            git add . && git commit -m "deployment artifacts generated"
        - name: USER_HOME
          value: /root
        - name: VERBOSE
          value: 'true'
        - name: GIT_USER_NAME
          value: "$(params.git_user)"
        - name: GIT_USER_EMAIL
          value: "$(params.git_user_email)"
      runAfter:
        - git-init
      taskRef:
        kind: ClusterTask
        name: git-cli
      workspaces:
        - name: source
          workspace: src
    - name: git-push
      params:
        - name: BASE_IMAGE
          value: >-
            docker.io/alpine/git:v2.26.2@sha256:23618034b0be9205d9cc0846eb711b12ba4c9b468efdd8a59aac1d7b1a23363f
        - name: GIT_SCRIPT
          value: |
            git remote add origin $(params.git_url) && git push -u origin main
        - name: USER_HOME
          value: /root
        - name: VERBOSE
          value: 'true'
        - name: GIT_USER_NAME
          value: "$(params.git_user)"
        - name: GIT_USER_EMAIL
          value: "$(params.git_user_email)"
      runAfter:
        - git-commit
      taskRef:
        kind: ClusterTask
        name: git-cli
      workspaces:
        - name: source
          workspace: src
        - name: basic-auth
          workspace: auth
  workspaces:
    - name: src
    - name: auth
    - name: additional-resources
    - name: mvn-settings
  