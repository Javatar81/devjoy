openapi: 3.0.0
info:
  title: KeycloakClient OpenAPI schema
  version: 0.0.1
paths: {}
components:
  schemas:
    Keycloak:
      description: Keycloak is the Schema for the keycloaks API.
      type: object
      properties:
        apiVersion:
          description: >-
            APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the
            latest internal value, and may reject unrecognized values. More
            info:
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: >-
            Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the
            client submits requests to. Cannot be updated. In CamelCase.
            More info:
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          type: object
        spec:
          description: KeycloakSpec defines the desired state of Keycloak.
          type: object
          properties:
            disableReplicasSyncing:
              description: >-
                Specify whether disabling the syncing of instances from the
                Keycloak CR to the statefulset replicas should be enabled or
                disabled. This option could be used when enabling
                HPA(horizontal pod autoscaler). Defaults to false.
              type: boolean
            externalDatabase:
              description: >-
                Controls external database settings. Using an external
                database requires providing a secret containing credentials
                as well as connection details. Here's an example of such
                secret: 
                     apiVersion: v1     kind: Secret     metadata:         name: keycloak-db-secret         namespace: keycloak     stringData:         POSTGRES_DATABASE: <Database Name>         POSTGRES_EXTERNAL_ADDRESS: <External Database IP or URL (resolvable by K8s)>         POSTGRES_EXTERNAL_PORT: <External Database Port>         # Strongly recommended to use <'Keycloak CR Name'-postgresql>         POSTGRES_HOST: <Database Service Name>         POSTGRES_PASSWORD: <Database Password>         # Required for AWS Backup functionality         POSTGRES_SUPERUSER: true         POSTGRES_USERNAME: <Database Username>      type: Opaque 
                 Both POSTGRES_EXTERNAL_ADDRESS and POSTGRES_EXTERNAL_PORT are specifically required for creating connection to the external database. The secret name is created using the following convention:       <Custom Resource Name>-db-secret 
                 For more information, please refer to the Operator documentation.
              type: object
              properties:
                enabled:
                  description: >-
                    If set to true, the Operator will use an external
                    database pointing to Keycloak. The embedded database
                    (externalDatabase.enabled = false) is deprecated.
                  type: boolean
            unmanaged:
              description: >-
                When set to true, this Keycloak will be marked as unmanaged
                and will not be managed by this operator. It can then be
                used for targeting purposes.
              type: boolean
            storageClassName:
              description: >-
                Name of the StorageClass for Postgresql Persistent Volume
                Claim
              type: string
            profile:
              description: >-
                Profile used for controlling Operator behavior. Default is
                empty.
              type: string
            external:
              description: >-
                Contains configuration for external Keycloak instances.
                Unmanaged needs to be set to true to use this.
              type: object
              properties:
                enabled:
                  description: >-
                    If set to true, this Keycloak will be treated as an
                    external instance. The unmanaged field also needs to be
                    set to true if this field is true.
                  type: boolean
                url:
                  description: >-
                    The URL to use for the keycloak admin API. Needs to be
                    set if external is true.
                  type: string
            multiAvailablityZones:
              description: >-
                Specify PodAntiAffinity settings for Keycloak deployment in
                Multi AZ
              type: object
              properties:
                enabled:
                  description: >-
                    If set to true, the operator will create a
                    podAntiAffinity settings for the Keycloak deployment.
                  type: boolean
            migration:
              description: Specify Migration configuration
              type: object
              properties:
                backups:
                  description: Set it to config backup policy for migration
                  type: object
                  properties:
                    enabled:
                      description: >-
                        If set to true, the operator will do database backup
                        before doing migration
                      type: boolean
                strategy:
                  description: Specify migration strategy
                  type: string
            externalAccess:
              description: Controls external Ingress/Route settings.
              type: object
              properties:
                enabled:
                  description: >-
                    If set to true, the Operator will create an Ingress or a
                    Route pointing to Keycloak.
                  type: boolean
                host:
                  description: >-
                    If set, the Operator will use value of host for Ingress
                    host instead of default value keycloak.local. Using this
                    setting in OpenShift environment will result an error.
                    Only users with special permissions are allowed to
                    modify the hostname.
                  type: string
                tlsTermination:
                  description: >-
                    TLS Termination type for the external access. Setting
                    this field to "reencrypt" will terminate TLS on the
                    Ingress/Route level. Setting this field to "passthrough"
                    will send encrypted traffic to the Pod. If unspecified,
                    defaults to "reencrypt". Note, that this setting has no
                    effect on Ingress as Ingress TLS settings are not
                    reconciled by this operator. In other words, Ingress TLS
                    configuration is the same in both cases and it is up to
                    the user to configure TLS section of the Ingress.
                  type: string
            keycloakDeploymentSpec:
              description: >-
                Resources (Requests and Limits) and ImagePullPolicy for
                KeycloakDeployment.
              type: object
              properties:
                experimental:
                  description: >-
                    Experimental section NOTE: This section might change or
                    get removed without any notice. It may also cause the
                    deployment to behave in an unpredictable fashion. Please
                    use with care.
                  type: object
                  properties:
                    affinity:
                      description: Affinity settings
                      type: object
                      properties:
                        nodeAffinity:
                          description: >-
                            Describes node affinity scheduling rules for the
                            pod.
                          type: object
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: >-
                                The scheduler will prefer to schedule pods
                                to nodes that satisfy the affinity
                                expressions specified by this field, but it
                                may choose a node that violates one or more
                                of the expressions. The node that is most
                                preferred is the one with the greatest sum
                                of weights, i.e. for each node that meets
                                all of the scheduling requirements (resource
                                request, requiredDuringScheduling affinity
                                expressions, etc.), compute a sum by
                                iterating through the elements of this field
                                and adding "weight" to the sum if the node
                                matches the corresponding matchExpressions;
                                the node(s) with the highest sum are the
                                most preferred.
                              type: array
                              items:
                                description: >-
                                  An empty preferred scheduling term matches
                                  all objects with implicit weight 0 (i.e.
                                  it's a no-op). A null preferred scheduling
                                  term matches no objects (i.e. is also a
                                  no-op).
                                type: object
                                required:
                                  - preference
                                  - weight
                                properties:
                                  preference:
                                    description: >-
                                      A node selector term, associated with
                                      the corresponding weight.
                                    type: object
                                    properties:
                                      matchExpressions:
                                        description: >-
                                          A list of node selector requirements by
                                          node's labels.
                                        type: array
                                        items:
                                          description: >-
                                            A node selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              description: >-
                                                The label key that the selector applies
                                                to.
                                              type: string
                                            operator:
                                              description: >-
                                                Represents a key's relationship to a set
                                                of values. Valid operators are In,
                                                NotIn, Exists, DoesNotExist. Gt, and Lt.
                                              type: string
                                            values:
                                              description: >-
                                                An array of string values. If the
                                                operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. If the operator is
                                                Gt or Lt, the values array must have a
                                                single element, which will be
                                                interpreted as an integer. This array is
                                                replaced during a strategic merge patch.
                                              type: array
                                              items:
                                                type: string
                                      matchFields:
                                        description: >-
                                          A list of node selector requirements by
                                          node's fields.
                                        type: array
                                        items:
                                          description: >-
                                            A node selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              description: >-
                                                The label key that the selector applies
                                                to.
                                              type: string
                                            operator:
                                              description: >-
                                                Represents a key's relationship to a set
                                                of values. Valid operators are In,
                                                NotIn, Exists, DoesNotExist. Gt, and Lt.
                                              type: string
                                            values:
                                              description: >-
                                                An array of string values. If the
                                                operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. If the operator is
                                                Gt or Lt, the values array must have a
                                                single element, which will be
                                                interpreted as an integer. This array is
                                                replaced during a strategic merge patch.
                                              type: array
                                              items:
                                                type: string
                                  weight:
                                    description: >-
                                      Weight associated with matching the
                                      corresponding nodeSelectorTerm, in the
                                      range 1-100.
                                    type: integer
                                    format: int32
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: >-
                                If the affinity requirements specified by
                                this field are not met at scheduling time,
                                the pod will not be scheduled onto the node.
                                If the affinity requirements specified by
                                this field cease to be met at some point
                                during pod execution (e.g. due to an
                                update), the system may or may not try to
                                eventually evict the pod from its node.
                              type: object
                              required:
                                - nodeSelectorTerms
                              properties:
                                nodeSelectorTerms:
                                  description: >-
                                    Required. A list of node selector terms.
                                    The terms are ORed.
                                  type: array
                                  items:
                                    description: >-
                                      A null or empty node selector term
                                      matches no objects. The requirements of
                                      them are ANDed. The TopologySelectorTerm
                                      type implements a subset of the
                                      NodeSelectorTerm.
                                    type: object
                                    properties:
                                      matchExpressions:
                                        description: >-
                                          A list of node selector requirements by
                                          node's labels.
                                        type: array
                                        items:
                                          description: >-
                                            A node selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              description: >-
                                                The label key that the selector applies
                                                to.
                                              type: string
                                            operator:
                                              description: >-
                                                Represents a key's relationship to a set
                                                of values. Valid operators are In,
                                                NotIn, Exists, DoesNotExist. Gt, and Lt.
                                              type: string
                                            values:
                                              description: >-
                                                An array of string values. If the
                                                operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. If the operator is
                                                Gt or Lt, the values array must have a
                                                single element, which will be
                                                interpreted as an integer. This array is
                                                replaced during a strategic merge patch.
                                              type: array
                                              items:
                                                type: string
                                      matchFields:
                                        description: >-
                                          A list of node selector requirements by
                                          node's fields.
                                        type: array
                                        items:
                                          description: >-
                                            A node selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              description: >-
                                                The label key that the selector applies
                                                to.
                                              type: string
                                            operator:
                                              description: >-
                                                Represents a key's relationship to a set
                                                of values. Valid operators are In,
                                                NotIn, Exists, DoesNotExist. Gt, and Lt.
                                              type: string
                                            values:
                                              description: >-
                                                An array of string values. If the
                                                operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. If the operator is
                                                Gt or Lt, the values array must have a
                                                single element, which will be
                                                interpreted as an integer. This array is
                                                replaced during a strategic merge patch.
                                              type: array
                                              items:
                                                type: string
                        podAffinity:
                          description: >-
                            Describes pod affinity scheduling rules (e.g.
                            co-locate this pod in the same node, zone, etc.
                            as some other pod(s)).
                          type: object
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: >-
                                The scheduler will prefer to schedule pods
                                to nodes that satisfy the affinity
                                expressions specified by this field, but it
                                may choose a node that violates one or more
                                of the expressions. The node that is most
                                preferred is the one with the greatest sum
                                of weights, i.e. for each node that meets
                                all of the scheduling requirements (resource
                                request, requiredDuringScheduling affinity
                                expressions, etc.), compute a sum by
                                iterating through the elements of this field
                                and adding "weight" to the sum if the node
                                has pods which matches the corresponding
                                podAffinityTerm; the node(s) with the
                                highest sum are the most preferred.
                              type: array
                              items:
                                description: >-
                                  The weights of all of the matched
                                  WeightedPodAffinityTerm fields are added
                                  per-node to find the most preferred
                                  node(s)
                                type: object
                                required:
                                  - podAffinityTerm
                                  - weight
                                properties:
                                  podAffinityTerm:
                                    description: >-
                                      Required. A pod affinity term,
                                      associated with the corresponding
                                      weight.
                                    type: object
                                    required:
                                      - topologyKey
                                    properties:
                                      labelSelector:
                                        description: >-
                                          A label query over a set of resources,
                                          in this case pods.
                                        type: object
                                        properties:
                                          matchExpressions:
                                            description: >-
                                              matchExpressions is a list of label
                                              selector requirements. The requirements
                                              are ANDed.
                                            type: array
                                            items:
                                              description: >-
                                                A label selector requirement is a
                                                selector that contains values, a key,
                                                and an operator that relates the key and
                                                values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: >-
                                                    key is the label key that the selector
                                                    applies to.
                                                  type: string
                                                operator:
                                                  description: >-
                                                    operator represents a key's relationship
                                                    to a set of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: >-
                                                    values is an array of string values. If
                                                    the operator is In or NotIn, the values
                                                    array must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the values
                                                    array must be empty. This array is
                                                    replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                          matchLabels:
                                            description: >-
                                              matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the
                                              matchLabels map is equivalent to an
                                              element of matchExpressions, whose key
                                              field is "key", the operator is "In",
                                              and the values array contains only
                                              "value". The requirements are ANDed.
                                            type: object
                                            additionalProperties:
                                              type: string
                                      namespaces:
                                        description: >-
                                          namespaces specifies which namespaces
                                          the labelSelector applies to (matches
                                          against); null or empty list means "this
                                          pod's namespace"
                                        type: array
                                        items:
                                          type: string
                                      topologyKey:
                                        description: >-
                                          This pod should be co-located (affinity)
                                          or not co-located (anti-affinity) with
                                          the pods matching the labelSelector in
                                          the specified namespaces, where
                                          co-located is defined as running on a
                                          node whose value of the label with key
                                          topologyKey matches that of any node on
                                          which any of the selected pods is
                                          running. Empty topologyKey is not
                                          allowed.
                                        type: string
                                  weight:
                                    description: >-
                                      weight associated with matching the
                                      corresponding podAffinityTerm, in the
                                      range 1-100.
                                    type: integer
                                    format: int32
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: >-
                                If the affinity requirements specified by
                                this field are not met at scheduling time,
                                the pod will not be scheduled onto the node.
                                If the affinity requirements specified by
                                this field cease to be met at some point
                                during pod execution (e.g. due to a pod
                                label update), the system may or may not try
                                to eventually evict the pod from its node.
                                When there are multiple elements, the lists
                                of nodes corresponding to each
                                podAffinityTerm are intersected, i.e. all
                                terms must be satisfied.
                              type: array
                              items:
                                description: >-
                                  Defines a set of pods (namely those
                                  matching the labelSelector relative to the
                                  given namespace(s)) that this pod should
                                  be co-located (affinity) or not co-located
                                  (anti-affinity) with, where co-located is
                                  defined as running on a node whose value
                                  of the label with key <topologyKey>
                                  matches that of any node on which a pod of
                                  the set of pods is running
                                type: object
                                required:
                                  - topologyKey
                                properties:
                                  labelSelector:
                                    description: >-
                                      A label query over a set of resources,
                                      in this case pods.
                                    type: object
                                    properties:
                                      matchExpressions:
                                        description: >-
                                          matchExpressions is a list of label
                                          selector requirements. The requirements
                                          are ANDed.
                                        type: array
                                        items:
                                          description: >-
                                            A label selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              description: >-
                                                key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: >-
                                                operator represents a key's relationship
                                                to a set of values. Valid operators are
                                                In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: >-
                                                values is an array of string values. If
                                                the operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. This array is
                                                replaced during a strategic merge patch.
                                              type: array
                                              items:
                                                type: string
                                      matchLabels:
                                        description: >-
                                          matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the
                                          matchLabels map is equivalent to an
                                          element of matchExpressions, whose key
                                          field is "key", the operator is "In",
                                          and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                        additionalProperties:
                                          type: string
                                  namespaces:
                                    description: >-
                                      namespaces specifies which namespaces
                                      the labelSelector applies to (matches
                                      against); null or empty list means "this
                                      pod's namespace"
                                    type: array
                                    items:
                                      type: string
                                  topologyKey:
                                    description: >-
                                      This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with
                                      the pods matching the labelSelector in
                                      the specified namespaces, where
                                      co-located is defined as running on a
                                      node whose value of the label with key
                                      topologyKey matches that of any node on
                                      which any of the selected pods is
                                      running. Empty topologyKey is not
                                      allowed.
                                    type: string
                        podAntiAffinity:
                          description: >-
                            Describes pod anti-affinity scheduling rules
                            (e.g. avoid putting this pod in the same node,
                            zone, etc. as some other pod(s)).
                          type: object
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: >-
                                The scheduler will prefer to schedule pods
                                to nodes that satisfy the anti-affinity
                                expressions specified by this field, but it
                                may choose a node that violates one or more
                                of the expressions. The node that is most
                                preferred is the one with the greatest sum
                                of weights, i.e. for each node that meets
                                all of the scheduling requirements (resource
                                request, requiredDuringScheduling
                                anti-affinity expressions, etc.), compute a
                                sum by iterating through the elements of
                                this field and adding "weight" to the sum if
                                the node has pods which matches the
                                corresponding podAffinityTerm; the node(s)
                                with the highest sum are the most preferred.
                              type: array
                              items:
                                description: >-
                                  The weights of all of the matched
                                  WeightedPodAffinityTerm fields are added
                                  per-node to find the most preferred
                                  node(s)
                                type: object
                                required:
                                  - podAffinityTerm
                                  - weight
                                properties:
                                  podAffinityTerm:
                                    description: >-
                                      Required. A pod affinity term,
                                      associated with the corresponding
                                      weight.
                                    type: object
                                    required:
                                      - topologyKey
                                    properties:
                                      labelSelector:
                                        description: >-
                                          A label query over a set of resources,
                                          in this case pods.
                                        type: object
                                        properties:
                                          matchExpressions:
                                            description: >-
                                              matchExpressions is a list of label
                                              selector requirements. The requirements
                                              are ANDed.
                                            type: array
                                            items:
                                              description: >-
                                                A label selector requirement is a
                                                selector that contains values, a key,
                                                and an operator that relates the key and
                                                values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: >-
                                                    key is the label key that the selector
                                                    applies to.
                                                  type: string
                                                operator:
                                                  description: >-
                                                    operator represents a key's relationship
                                                    to a set of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: >-
                                                    values is an array of string values. If
                                                    the operator is In or NotIn, the values
                                                    array must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the values
                                                    array must be empty. This array is
                                                    replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                          matchLabels:
                                            description: >-
                                              matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the
                                              matchLabels map is equivalent to an
                                              element of matchExpressions, whose key
                                              field is "key", the operator is "In",
                                              and the values array contains only
                                              "value". The requirements are ANDed.
                                            type: object
                                            additionalProperties:
                                              type: string
                                      namespaces:
                                        description: >-
                                          namespaces specifies which namespaces
                                          the labelSelector applies to (matches
                                          against); null or empty list means "this
                                          pod's namespace"
                                        type: array
                                        items:
                                          type: string
                                      topologyKey:
                                        description: >-
                                          This pod should be co-located (affinity)
                                          or not co-located (anti-affinity) with
                                          the pods matching the labelSelector in
                                          the specified namespaces, where
                                          co-located is defined as running on a
                                          node whose value of the label with key
                                          topologyKey matches that of any node on
                                          which any of the selected pods is
                                          running. Empty topologyKey is not
                                          allowed.
                                        type: string
                                  weight:
                                    description: >-
                                      weight associated with matching the
                                      corresponding podAffinityTerm, in the
                                      range 1-100.
                                    type: integer
                                    format: int32
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: >-
                                If the anti-affinity requirements specified
                                by this field are not met at scheduling
                                time, the pod will not be scheduled onto the
                                node. If the anti-affinity requirements
                                specified by this field cease to be met at
                                some point during pod execution (e.g. due to
                                a pod label update), the system may or may
                                not try to eventually evict the pod from its
                                node. When there are multiple elements, the
                                lists of nodes corresponding to each
                                podAffinityTerm are intersected, i.e. all
                                terms must be satisfied.
                              type: array
                              items:
                                description: >-
                                  Defines a set of pods (namely those
                                  matching the labelSelector relative to the
                                  given namespace(s)) that this pod should
                                  be co-located (affinity) or not co-located
                                  (anti-affinity) with, where co-located is
                                  defined as running on a node whose value
                                  of the label with key <topologyKey>
                                  matches that of any node on which a pod of
                                  the set of pods is running
                                type: object
                                required:
                                  - topologyKey
                                properties:
                                  labelSelector:
                                    description: >-
                                      A label query over a set of resources,
                                      in this case pods.
                                    type: object
                                    properties:
                                      matchExpressions:
                                        description: >-
                                          matchExpressions is a list of label
                                          selector requirements. The requirements
                                          are ANDed.
                                        type: array
                                        items:
                                          description: >-
                                            A label selector requirement is a
                                            selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              description: >-
                                                key is the label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: >-
                                                operator represents a key's relationship
                                                to a set of values. Valid operators are
                                                In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: >-
                                                values is an array of string values. If
                                                the operator is In or NotIn, the values
                                                array must be non-empty. If the operator
                                                is Exists or DoesNotExist, the values
                                                array must be empty. This array is
                                                replaced during a strategic merge patch.
                                              type: array
                                              items:
                                                type: string
                                      matchLabels:
                                        description: >-
                                          matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the
                                          matchLabels map is equivalent to an
                                          element of matchExpressions, whose key
                                          field is "key", the operator is "In",
                                          and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                        additionalProperties:
                                          type: string
                                  namespaces:
                                    description: >-
                                      namespaces specifies which namespaces
                                      the labelSelector applies to (matches
                                      against); null or empty list means "this
                                      pod's namespace"
                                    type: array
                                    items:
                                      type: string
                                  topologyKey:
                                    description: >-
                                      This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with
                                      the pods matching the labelSelector in
                                      the specified namespaces, where
                                      co-located is defined as running on a
                                      node whose value of the label with key
                                      topologyKey matches that of any node on
                                      which any of the selected pods is
                                      running. Empty topologyKey is not
                                      allowed.
                                    type: string
                    args:
                      description: >-
                        Arguments to the entrypoint. Translates into
                        Container CMD.
                      type: array
                      items:
                        type: string
                    command:
                      description: >-
                        Container command. Translates into Container
                        ENTRYPOINT.
                      type: array
                      items:
                        type: string
                    env:
                      description: >-
                        List of environment variables to set in the
                        container.
                      type: array
                      items:
                        description: >-
                          EnvVar represents an environment variable present
                          in a Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: >-
                              Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: >-
                              Variable references $(VAR_NAME) are expanded
                              using the previous defined environment
                              variables in the container and any service
                              environment variables. If a variable cannot be
                              resolved, the reference in the input string
                              will be unchanged. The $(VAR_NAME) syntax can
                              be escaped with a double $$, ie: $$(VAR_NAME).
                              Escaped references will never be expanded,
                              regardless of whether the variable exists or
                              not. Defaults to "".
                            type: string
                          valueFrom:
                            description: >-
                              Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields.
                                      apiVersion, kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the ConfigMap or its key
                                      must be defined
                                    type: boolean
                              fieldRef:
                                description: >-
                                  Selects a field of the pod: supports
                                  metadata.name, metadata.namespace,
                                  `metadata.labels['<KEY>']`,
                                  `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP,
                                  status.podIPs.
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: >-
                                      Version of the schema the FieldPath is
                                      written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: >-
                                      Path of the field to select in the
                                      specified API version.
                                    type: string
                              resourceFieldRef:
                                description: >-
                                  Selects a resource of the container: only
                                  resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage,
                                  requests.cpu, requests.memory and
                                  requests.ephemeral-storage) are currently
                                  supported.
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: >-
                                      Container name: required for volumes,
                                      optional for env vars
                                    type: string
                                  divisor:
                                    description: >-
                                      Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: >-
                                  Selects a key of a secret in the pod's
                                  namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: >-
                                      The key of the secret to select from. 
                                      Must be a valid secret key.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields.
                                      apiVersion, kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the Secret or its key
                                      must be defined
                                    type: boolean
                    serviceAccountName:
                      description: ServiceAccountName settings
                      type: string
                    volumes:
                      description: Additional volume mounts
                      type: object
                      properties:
                        defaultMode:
                          description: Permissions mode.
                          type: integer
                          format: int32
                        items:
                          type: array
                          items:
                            type: object
                            required:
                              - mountPath
                            properties:
                              configMaps:
                                description: >-
                                  Allow multiple configmaps to mount to the
                                  same directory
                                type: array
                                items:
                                  type: string
                              items:
                                description: Mount details
                                type: array
                                items:
                                  description: >-
                                    Maps a string key to a path within a
                                    volume.
                                  type: object
                                  required:
                                    - key
                                    - path
                                  properties:
                                    key:
                                      description: The key to project.
                                      type: string
                                    mode:
                                      description: >-
                                        Optional: mode bits used to set
                                        permissions on this file. Must be an
                                        octal value between 0000 and 0777 or a
                                        decimal value between 0 and 511. YAML
                                        accepts both octal and decimal values,
                                        JSON requires decimal values for mode
                                        bits. If not specified, the volume
                                        defaultMode will be used. This might be
                                        in conflict with other options that
                                        affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      type: integer
                                      format: int32
                                    path:
                                      description: >-
                                        The relative path of the file to map the
                                        key to. May not be an absolute path. May
                                        not contain the path element '..'. May
                                        not start with the string '..'.
                                      type: string
                              mountPath:
                                description: An absolute path where to mount it
                                type: string
                              name:
                                description: Volume name
                                type: string
                              secrets:
                                description: Secret mount
                                type: array
                                items:
                                  type: string
                imagePullPolicy:
                  description: ImagePullPolicy for the Containers.
                  type: string
                  default: Always
                  enum:
                    - Always
                    - Never
                    - IfNotPresent
                podannotations:
                  description: List of annotations to set in the keycloak pods
                  type: object
                  additionalProperties:
                    type: string
                podlabels:
                  description: List of labels to set in the keycloak pods
                  type: object
                  additionalProperties:
                    type: string
                resources:
                  description: Resources (Requests and Limits) for the Pods.
                  type: object
                  properties:
                    limits:
                      description: >-
                        Limits describes the maximum amount of compute
                        resources allowed. More info:
                        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                      type: object
                      additionalProperties:
                        pattern: >-
                          ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        anyOf:
                          - type: integer
                          - type: string
                        x-kubernetes-int-or-string: true
                    requests:
                      description: >-
                        Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a
                        container, it defaults to Limits if that is
                        explicitly specified, otherwise to an
                        implementation-defined value. More info:
                        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                      type: object
                      additionalProperties:
                        pattern: >-
                          ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        anyOf:
                          - type: integer
                          - type: string
                        x-kubernetes-int-or-string: true
            extensions:
              description: >-
                A list of extensions, where each one is a URL to a JAR files
                that will be deployed in Keycloak.
              type: array
              items:
                type: string
              x-kubernetes-list-type: set
            postgresDeploymentSpec:
              description: >-
                Resources (Requests and Limits) and ImagePullPolicy for
                PostgresDeployment.
              type: object
              properties:
                imagePullPolicy:
                  description: ImagePullPolicy for the Containers.
                  type: string
                  default: Always
                  enum:
                    - Always
                    - Never
                    - IfNotPresent
                resources:
                  description: Resources (Requests and Limits) for the Pods.
                  type: object
                  properties:
                    limits:
                      description: >-
                        Limits describes the maximum amount of compute
                        resources allowed. More info:
                        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                      type: object
                      additionalProperties:
                        pattern: >-
                          ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        anyOf:
                          - type: integer
                          - type: string
                        x-kubernetes-int-or-string: true
                    requests:
                      description: >-
                        Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a
                        container, it defaults to Limits if that is
                        explicitly specified, otherwise to an
                        implementation-defined value. More info:
                        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                      type: object
                      additionalProperties:
                        pattern: >-
                          ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        anyOf:
                          - type: integer
                          - type: string
                        x-kubernetes-int-or-string: true
            podDisruptionBudget:
              description: >-
                Specify PodDisruptionBudget configuration. This field is
                deprecated and will be ignored on K8s >=1.25
              type: object
              properties:
                enabled:
                  description: >-
                    If set to true, the operator will create a
                    PodDistruptionBudget for the Keycloak deployment and set
                    its `maxUnavailable` value to 1.
                  type: boolean
            instances:
              description: Number of Keycloak instances in HA mode. Default is 1.
              type: integer
            DisableDefaultServiceMonitor:
              description: >-
                Disables the integration with Application Monitoring
                Operator. When set to true, the operator doesn't create
                default PrometheusRule, ServiceMonitor and GrafanaDashboard
                objects and users will have to create them manually, if
                needed.
              type: boolean
        status:
          description: KeycloakStatus defines the observed state of Keycloak.
          type: object
          required:
            - credentialSecret
            - internalURL
            - message
            - phase
            - ready
            - version
          properties:
            credentialSecret:
              description: The secret where the admin credentials are to be found.
              type: string
            externalURL:
              description: >-
                External URL for accessing Keycloak instance from outside
                the cluster. Is identical to external.URL if it's specified,
                otherwise is computed (e.g. from Ingress).
              type: string
            internalURL:
              description: >-
                An internal URL (service name) to be used by the admin
                client.
              type: string
            message:
              description: >-
                Human-readable message indicating details about current
                operator phase or error.
              type: string
            phase:
              description: Current phase of the operator.
              type: string
            ready:
              description: >-
                True if all resources are in a ready state and all work is
                done.
              type: boolean
            secondaryResources:
              description: >-
                A map of all the secondary resources types and names created
                for this CR. e.g "Deployment": [ "DeploymentName1",
                "DeploymentName2" ].
              type: object
              additionalProperties:
                type: array
                items:
                  type: string
            version:
              description: Version of Keycloak or RHSSO running on the cluster.
              type: string
    KeycloakRealm:
      description: KeycloakRealm is the Schema for the keycloakrealms API
      type: object
      properties:
        apiVersion:
          description: >-
            APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the
            latest internal value, and may reject unrecognized values. More
            info:
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: >-
            Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the
            client submits requests to. Cannot be updated. In CamelCase.
            More info:
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          type: object
        spec:
          description: KeycloakRealmSpec defines the desired state of KeycloakRealm.
          type: object
          required:
            - realm
          properties:
            instanceSelector:
              description: Selector for looking up Keycloak Custom Resources.
              type: object
              properties:
                matchExpressions:
                  description: >-
                    matchExpressions is a list of label selector
                    requirements. The requirements are ANDed.
                  type: array
                  items:
                    description: >-
                      A label selector requirement is a selector that
                      contains values, a key, and an operator that relates
                      the key and values.
                    type: object
                    required:
                      - key
                      - operator
                    properties:
                      key:
                        description: key is the label key that the selector applies to.
                        type: string
                      operator:
                        description: >-
                          operator represents a key's relationship to a set
                          of values. Valid operators are In, NotIn, Exists
                          and DoesNotExist.
                        type: string
                      values:
                        description: >-
                          values is an array of string values. If the
                          operator is In or NotIn, the values array must be
                          non-empty. If the operator is Exists or
                          DoesNotExist, the values array must be empty. This
                          array is replaced during a strategic merge patch.
                        type: array
                        items:
                          type: string
                matchLabels:
                  description: >-
                    matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an
                    element of matchExpressions, whose key field is "key",
                    the operator is "In", and the values array contains only
                    "value". The requirements are ANDed.
                  type: object
                  additionalProperties:
                    type: string
            realm:
              description: Keycloak Realm REST object.
              type: object
              required:
                - realm
              properties:
                enabledEventTypes:
                  description: Enabled event types
                  type: array
                  items:
                    type: string
                minimumQuickLoginWaitSeconds:
                  description: Minimum Quick Login Wait
                  type: integer
                  format: int32
                loginTheme:
                  description: Login Theme
                  type: string
                accessTokenLifespanForImplicitFlow:
                  description: Access Token Lifespan For Implicit Flow
                  type: integer
                  format: int32
                enabled:
                  description: Realm enabled flag.
                  type: boolean
                verifyEmail:
                  description: Verify email
                  type: boolean
                otpPolicyDigits:
                  description: OTP Policy Digits
                  type: integer
                  format: int32
                userFederationMappers:
                  description: >-
                    User federation mappers are extension points triggered
                    by the user federation at various points.
                  type: array
                  items:
                    description: >-
                      https://www.keycloak.org/docs/11.0/server_admin/#_ldap_mappers
                      https://www.keycloak.org/docs-api/11.0/rest-api/index.html#_userfederationmapperrepresentation
                    type: object
                    properties:
                      config:
                        description: User federation mapper config.
                        type: object
                        additionalProperties:
                          type: string
                      federationMapperType:
                        type: string
                      federationProviderDisplayName:
                        description: >-
                          The displayName for the user federation provider
                          this mapper applies to.
                        type: string
                      id:
                        type: string
                      name:
                        type: string
                identityProviders:
                  description: A set of Identity Providers.
                  type: array
                  items:
                    type: object
                    properties:
                      enabled:
                        description: Identity Provider enabled flag.
                        type: boolean
                      config:
                        description: Identity Provider config.
                        type: object
                        additionalProperties:
                          type: string
                      firstBrokerLoginFlowAlias:
                        description: Identity Provider First Broker Login Flow Alias.
                        type: string
                      trustEmail:
                        description: Identity Provider Trust Email.
                        type: boolean
                      linkOnly:
                        description: Identity Provider Link Only setting.
                        type: boolean
                      providerId:
                        description: Identity Provider ID.
                        type: string
                      displayName:
                        description: Identity Provider Display Name.
                        type: string
                      alias:
                        description: Identity Provider Alias.
                        type: string
                      postBrokerLoginFlowAlias:
                        description: Identity Provider Post Broker Login Flow Alias.
                        type: string
                      addReadTokenRoleOnCreate:
                        description: >-
                          Adds Read Token role when creating this Identity
                          Provider.
                        type: boolean
                      internalId:
                        description: Identity Provider Internal ID.
                        type: string
                      storeToken:
                        description: Identity Provider Store to Token.
                        type: boolean
                maxFailureWaitSeconds:
                  description: Max Wait
                  type: integer
                  format: int32
                rememberMe:
                  description: Remember me
                  type: boolean
                waitIncrementSeconds:
                  description: Wait Increment
                  type: integer
                  format: int32
                eventsListeners:
                  description: A set of Event Listeners.
                  type: array
                  items:
                    type: string
                duplicateEmailsAllowed:
                  description: Duplicate emails
                  type: boolean
                otpSupportedApplications:
                  description: OTP Supported Applications
                  type: array
                  items:
                    type: string
                adminEventsDetailsEnabled:
                  description: >-
                    Enable admin events details TODO: change to values and
                    use kubebuilder default annotation once supported
                  type: boolean
                editUsernameAllowed:
                  description: Edit username
                  type: boolean
                clients:
                  description: A set of Keycloak Clients.
                  type: array
                  items:
                    type: object
                    required:
                      - clientId
                    properties:
                      adminUrl:
                        description: Application Admin URL.
                        type: string
                      enabled:
                        description: Client enabled flag.
                        type: boolean
                      clientAuthenticatorType:
                        description: What Client authentication type to use.
                        type: string
                      fullScopeAllowed:
                        description: True if Full Scope is allowed.
                        type: boolean
                      useTemplateConfig:
                        description: True to use a Template Config.
                        type: boolean
                      redirectUris:
                        description: A list of valid Redirection URLs.
                        type: array
                        items:
                          type: string
                      frontchannelLogout:
                        description: True if this client supports Front Channel logout.
                        type: boolean
                      access:
                        description: Access options.
                        type: object
                        additionalProperties:
                          type: boolean
                      serviceAccountsEnabled:
                        description: True if Service Accounts are enabled.
                        type: boolean
                      clientId:
                        description: Client ID.
                        type: string
                      authenticationFlowBindingOverrides:
                        description: Authentication Flow Binding Overrides.
                        type: object
                        additionalProperties:
                          type: string
                      authorizationServicesEnabled:
                        description: >-
                          True if fine-grained authorization support is
                          enabled for this client.
                        type: boolean
                      optionalClientScopes:
                        description: >-
                          A list of optional client scopes. Optional client
                          scopes are applied when issuing tokens for this
                          client, but only when they are requested by the
                          scope parameter in the OpenID Connect
                          authorization request.
                        type: array
                        items:
                          type: string
                      defaultClientScopes:
                        description: >-
                          A list of default client scopes. Default client
                          scopes are always applied when issuing OpenID
                          Connect tokens or SAML assertions for this client.
                        type: array
                        items:
                          type: string
                      name:
                        description: Client name.
                        type: string
                      rootUrl:
                        description: Application root URL.
                        type: string
                      bearerOnly:
                        description: True if a client supports only Bearer Tokens.
                        type: boolean
                      implicitFlowEnabled:
                        description: True if Implicit flow is enabled.
                        type: boolean
                      secret:
                        description: >-
                          Client Secret. The Operator will automatically
                          create a Secret based on this value.
                        type: string
                      useTemplateMappers:
                        description: True to use Template Mappers.
                        type: boolean
                      notBefore:
                        description: Not Before setting.
                        type: integer
                      nodeReRegistrationTimeout:
                        description: Node registration timeout.
                        type: integer
                      useTemplateScope:
                        description: True to use Template Scope.
                        type: boolean
                      publicClient:
                        description: True if this is a public Client.
                        type: boolean
                      standardFlowEnabled:
                        description: True if Standard flow is enabled.
                        type: boolean
                      attributes:
                        description: Client Attributes.
                        type: object
                        additionalProperties:
                          type: string
                      protocol:
                        description: Protocol used for this Client.
                        type: string
                      webOrigins:
                        description: A list of valid Web Origins.
                        type: array
                        items:
                          type: string
                      consentRequired:
                        description: True if Consent Screen is required.
                        type: boolean
                      protocolMappers:
                        description: Protocol Mappers.
                        type: array
                        items:
                          type: object
                          properties:
                            config:
                              description: Config options.
                              type: object
                              additionalProperties:
                                type: string
                            consentRequired:
                              description: True if Consent Screen is required.
                              type: boolean
                            consentText:
                              description: Text to use for displaying Consent Screen.
                              type: string
                            id:
                              description: Protocol Mapper ID.
                              type: string
                            name:
                              description: Protocol Mapper Name.
                              type: string
                            protocol:
                              description: Protocol to use.
                              type: string
                            protocolMapper:
                              description: Protocol Mapper to use
                              type: string
                      id:
                        description: >-
                          Client ID. If not specified, automatically
                          generated.
                        type: string
                      defaultRoles:
                        description: Default Client roles.
                        type: array
                        items:
                          type: string
                      authorizationSettings:
                        description: Authorization settings for this resource server.
                        type: object
                        properties:
                          allowRemoteResourceManagement:
                            description: >-
                              True if resources should be managed remotely
                              by the resource server.
                            type: boolean
                          resources:
                            description: Resources.
                            type: array
                            items:
                              description: >-
                                https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_resourcerepresentation
                              type: object
                              properties:
                                icon_uri:
                                  description: An URI pointing to an icon.
                                  type: string
                                uris:
                                  description: >-
                                    Set of URIs which are protected by
                                    resource.
                                  type: array
                                  items:
                                    type: string
                                name:
                                  description: >-
                                    A unique name for this resource. The
                                    name can be used to uniquely identify a
                                    resource, useful when querying for a
                                    specific resource.
                                  type: string
                                displayName:
                                  description: >-
                                    A unique name for this resource. The
                                    name can be used to uniquely identify a
                                    resource, useful when querying for a
                                    specific resource.
                                  type: string
                                ownerManagedAccess:
                                  description: >-
                                    True if the access to this resource can
                                    be managed by the resource owner.
                                  type: boolean
                                attributes:
                                  description: >-
                                    The attributes associated with the
                                    resource.
                                  type: object
                                  additionalProperties:
                                    type: string
                                _id:
                                  description: ID.
                                  type: string
                                type:
                                  description: >-
                                    The type of this resource. It can be
                                    used to group different resource
                                    instances with the same type.
                                  type: string
                                scopes:
                                  description: >-
                                    The scopes associated with this
                                    resource.
                                  type: array
                                  items:
                                    x-kubernetes-preserve-unknown-fields: true
                          clientId:
                            description: Client ID.
                            type: string
                          name:
                            description: Name.
                            type: string
                          decisionStrategy:
                            description: >-
                              The decision strategy dictates how permissions
                              are evaluated and how a final decision is
                              obtained. 'Affirmative' means that at least
                              one permission must evaluate to a positive
                              decision in order to grant access to a
                              resource and its scopes. 'Unanimous' means
                              that all permissions must evaluate to a
                              positive decision in order for the final
                              decision to be also positive.
                            type: string
                          policies:
                            description: Policies.
                            type: array
                            items:
                              description: >-
                                https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_policyrepresentation
                              type: object
                              properties:
                                config:
                                  description: Config.
                                  type: object
                                  additionalProperties:
                                    type: string
                                resources:
                                  description: Resources.
                                  type: array
                                  items:
                                    type: string
                                scopesData:
                                  description: Scopes Data.
                                  type: array
                                  items:
                                    x-kubernetes-preserve-unknown-fields: true
                                name:
                                  description: The name of this policy.
                                  type: string
                                resourcesData:
                                  description: Resources Data.
                                  type: array
                                  items:
                                    description: >-
                                      https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_resourcerepresentation
                                    type: object
                                    properties:
                                      icon_uri:
                                        description: An URI pointing to an icon.
                                        type: string
                                      uris:
                                        description: >-
                                          Set of URIs which are protected by
                                          resource.
                                        type: array
                                        items:
                                          type: string
                                      name:
                                        description: >-
                                          A unique name for this resource. The
                                          name can be used to uniquely identify a
                                          resource, useful when querying for a
                                          specific resource.
                                        type: string
                                      displayName:
                                        description: >-
                                          A unique name for this resource. The
                                          name can be used to uniquely identify a
                                          resource, useful when querying for a
                                          specific resource.
                                        type: string
                                      ownerManagedAccess:
                                        description: >-
                                          True if the access to this resource can
                                          be managed by the resource owner.
                                        type: boolean
                                      attributes:
                                        description: >-
                                          The attributes associated with the
                                          resource.
                                        type: object
                                        additionalProperties:
                                          type: string
                                      _id:
                                        description: ID.
                                        type: string
                                      type:
                                        description: >-
                                          The type of this resource. It can be
                                          used to group different resource
                                          instances with the same type.
                                        type: string
                                      scopes:
                                        description: >-
                                          The scopes associated with this
                                          resource.
                                        type: array
                                        items:
                                          x-kubernetes-preserve-unknown-fields: true
                                decisionStrategy:
                                  description: >-
                                    The decision strategy dictates how the
                                    policies associated with a given
                                    permission are evaluated and how a final
                                    decision is obtained. 'Affirmative'
                                    means that at least one policy must
                                    evaluate to a positive decision in order
                                    for the final decision to be also
                                    positive. 'Unanimous' means that all
                                    policies must evaluate to a positive
                                    decision in order for the final decision
                                    to be also positive. 'Consensus' means
                                    that the number of positive decisions
                                    must be greater than the number of
                                    negative decisions. If the number of
                                    positive and negative is the same, the
                                    final decision will be negative.
                                  type: string
                                policies:
                                  description: Policies.
                                  type: array
                                  items:
                                    type: string
                                owner:
                                  description: Owner.
                                  type: string
                                type:
                                  description: Type.
                                  type: string
                                id:
                                  description: ID.
                                  type: string
                                description:
                                  description: A description for this policy.
                                  type: string
                                logic:
                                  description: >-
                                    The logic dictates how the policy
                                    decision should be made. If 'Positive',
                                    the resulting effect (permit or deny)
                                    obtained during the evaluation of this
                                    policy will be used to perform a
                                    decision. If 'Negative', the resulting
                                    effect will be negated, in other words,
                                    a permit becomes a deny and vice-versa.
                                  type: string
                                scopes:
                                  description: Scopes.
                                  type: array
                                  items:
                                    type: string
                          policyEnforcementMode:
                            description: >-
                              The policy enforcement mode dictates how
                              policies are enforced when evaluating
                              authorization requests. 'Enforcing' means
                              requests are denied by default even when there
                              is no policy associated with a given resource.
                              'Permissive' means requests are allowed even
                              when there is no policy associated with a
                              given resource. 'Disabled' completely disables
                              the evaluation of policies and allows access
                              to any resource.
                            type: string
                          id:
                            description: ID.
                            type: string
                          scopes:
                            description: Authorization Scopes.
                            type: array
                            items:
                              description: >-
                                https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_scoperepresentation
                              type: object
                              properties:
                                displayName:
                                  description: >-
                                    A unique name for this scope. The name
                                    can be used to uniquely identify a
                                    scope, useful when querying for a
                                    specific scope.
                                  type: string
                                iconUri:
                                  description: An URI pointing to an icon.
                                  type: string
                                id:
                                  description: ID.
                                  type: string
                                name:
                                  description: >-
                                    A unique name for this scope. The name
                                    can be used to uniquely identify a
                                    scope, useful when querying for a
                                    specific scope.
                                  type: string
                                policies:
                                  description: Policies.
                                  type: array
                                  items:
                                    description: >-
                                      https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_policyrepresentation
                                    type: object
                                    properties:
                                      config:
                                        description: Config.
                                        type: object
                                        additionalProperties:
                                          type: string
                                      resources:
                                        description: Resources.
                                        type: array
                                        items:
                                          type: string
                                      scopesData:
                                        description: Scopes Data.
                                        type: array
                                        items:
                                          x-kubernetes-preserve-unknown-fields: true
                                      name:
                                        description: The name of this policy.
                                        type: string
                                      resourcesData:
                                        description: Resources Data.
                                        type: array
                                        items:
                                          description: >-
                                            https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_resourcerepresentation
                                          type: object
                                          properties:
                                            icon_uri:
                                              description: An URI pointing to an icon.
                                              type: string
                                            uris:
                                              description: >-
                                                Set of URIs which are protected by
                                                resource.
                                              type: array
                                              items:
                                                type: string
                                            name:
                                              description: >-
                                                A unique name for this resource. The
                                                name can be used to uniquely identify a
                                                resource, useful when querying for a
                                                specific resource.
                                              type: string
                                            displayName:
                                              description: >-
                                                A unique name for this resource. The
                                                name can be used to uniquely identify a
                                                resource, useful when querying for a
                                                specific resource.
                                              type: string
                                            ownerManagedAccess:
                                              description: >-
                                                True if the access to this resource can
                                                be managed by the resource owner.
                                              type: boolean
                                            attributes:
                                              description: >-
                                                The attributes associated with the
                                                resource.
                                              type: object
                                              additionalProperties:
                                                type: string
                                            _id:
                                              description: ID.
                                              type: string
                                            type:
                                              description: >-
                                                The type of this resource. It can be
                                                used to group different resource
                                                instances with the same type.
                                              type: string
                                            scopes:
                                              description: >-
                                                The scopes associated with this
                                                resource.
                                              type: array
                                              items:
                                                x-kubernetes-preserve-unknown-fields: true
                                      decisionStrategy:
                                        description: >-
                                          The decision strategy dictates how the
                                          policies associated with a given
                                          permission are evaluated and how a final
                                          decision is obtained. 'Affirmative'
                                          means that at least one policy must
                                          evaluate to a positive decision in order
                                          for the final decision to be also
                                          positive. 'Unanimous' means that all
                                          policies must evaluate to a positive
                                          decision in order for the final decision
                                          to be also positive. 'Consensus' means
                                          that the number of positive decisions
                                          must be greater than the number of
                                          negative decisions. If the number of
                                          positive and negative is the same, the
                                          final decision will be negative.
                                        type: string
                                      policies:
                                        description: Policies.
                                        type: array
                                        items:
                                          type: string
                                      owner:
                                        description: Owner.
                                        type: string
                                      type:
                                        description: Type.
                                        type: string
                                      id:
                                        description: ID.
                                        type: string
                                      description:
                                        description: A description for this policy.
                                        type: string
                                      logic:
                                        description: >-
                                          The logic dictates how the policy
                                          decision should be made. If 'Positive',
                                          the resulting effect (permit or deny)
                                          obtained during the evaluation of this
                                          policy will be used to perform a
                                          decision. If 'Negative', the resulting
                                          effect will be negated, in other words,
                                          a permit becomes a deny and vice-versa.
                                        type: string
                                      scopes:
                                        description: Scopes.
                                        type: array
                                        items:
                                          type: string
                                resources:
                                  description: Resources.
                                  type: array
                                  items:
                                    description: >-
                                      https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_resourcerepresentation
                                    type: object
                                    properties:
                                      icon_uri:
                                        description: An URI pointing to an icon.
                                        type: string
                                      uris:
                                        description: >-
                                          Set of URIs which are protected by
                                          resource.
                                        type: array
                                        items:
                                          type: string
                                      name:
                                        description: >-
                                          A unique name for this resource. The
                                          name can be used to uniquely identify a
                                          resource, useful when querying for a
                                          specific resource.
                                        type: string
                                      displayName:
                                        description: >-
                                          A unique name for this resource. The
                                          name can be used to uniquely identify a
                                          resource, useful when querying for a
                                          specific resource.
                                        type: string
                                      ownerManagedAccess:
                                        description: >-
                                          True if the access to this resource can
                                          be managed by the resource owner.
                                        type: boolean
                                      attributes:
                                        description: >-
                                          The attributes associated with the
                                          resource.
                                        type: object
                                        additionalProperties:
                                          type: string
                                      _id:
                                        description: ID.
                                        type: string
                                      type:
                                        description: >-
                                          The type of this resource. It can be
                                          used to group different resource
                                          instances with the same type.
                                        type: string
                                      scopes:
                                        description: >-
                                          The scopes associated with this
                                          resource.
                                        type: array
                                        items:
                                          x-kubernetes-preserve-unknown-fields: true
                      description:
                        description: Client description.
                        type: string
                      directAccessGrantsEnabled:
                        description: True if Direct Grant is enabled.
                        type: boolean
                      baseUrl:
                        description: Application base URL.
                        type: string
                      surrogateAuthRequired:
                        description: Surrogate Authentication Required option.
                        type: boolean
                users:
                  description: A set of Keycloak Users.
                  type: array
                  items:
                    type: object
                    properties:
                      federatedIdentities:
                        description: A set of Federated Identities.
                        type: array
                        items:
                          type: object
                          properties:
                            identityProvider:
                              description: Federated Identity Provider.
                              type: string
                            userId:
                              description: Federated Identity User ID.
                              type: string
                            userName:
                              description: Federated Identity User Name.
                              type: string
                      lastName:
                        description: Last Name.
                        type: string
                      enabled:
                        description: User enabled flag.
                        type: boolean
                      emailVerified:
                        description: True if email has already been verified.
                        type: boolean
                      realmRoles:
                        description: A set of Realm Roles.
                        type: array
                        items:
                          type: string
                      clientRoles:
                        description: A set of Client Roles.
                        type: object
                        additionalProperties:
                          type: array
                          items:
                            type: string
                      groups:
                        description: A set of Groups.
                        type: array
                        items:
                          type: string
                      username:
                        description: User Name.
                        type: string
                      attributes:
                        description: A set of Attributes.
                        type: object
                        additionalProperties:
                          type: array
                          items:
                            type: string
                      id:
                        description: User ID.
                        type: string
                      firstName:
                        description: First Name.
                        type: string
                      credentials:
                        description: A set of Credentials.
                        type: array
                        items:
                          type: object
                          properties:
                            temporary:
                              description: True if this credential object is temporary.
                              type: boolean
                            type:
                              description: Credential Type.
                              type: string
                            value:
                              description: Credential Value.
                              type: string
                      email:
                        description: Email.
                        type: string
                      requiredActions:
                        description: A set of Required Actions.
                        type: array
                        items:
                          type: string
                eventsEnabled:
                  description: >-
                    Enable events recording TODO: change to values and use
                    kubebuilder default annotation once supported
                  type: boolean
                clientScopes:
                  description: Client scopes
                  type: array
                  items:
                    type: object
                    properties:
                      attributes:
                        type: object
                        additionalProperties:
                          type: string
                      description:
                        type: string
                      id:
                        type: string
                      name:
                        type: string
                      protocol:
                        type: string
                      protocolMappers:
                        description: Protocol Mappers.
                        type: array
                        items:
                          type: object
                          properties:
                            config:
                              description: Config options.
                              type: object
                              additionalProperties:
                                type: string
                            consentRequired:
                              description: True if Consent Screen is required.
                              type: boolean
                            consentText:
                              description: Text to use for displaying Consent Screen.
                              type: string
                            id:
                              description: Protocol Mapper ID.
                              type: string
                            name:
                              description: Protocol Mapper Name.
                              type: string
                            protocol:
                              description: Protocol to use.
                              type: string
                            protocolMapper:
                              description: Protocol Mapper to use
                              type: string
                defaultDefaultClientScopes:
                  description: Default client scopes to add to all new clients
                  type: array
                  items:
                    type: string
                internationalizationEnabled:
                  description: Internationalization Enabled
                  type: boolean
                supportedLocales:
                  description: Supported Locales
                  type: array
                  items:
                    type: string
                sslRequired:
                  description: Require SSL
                  type: string
                registrationEmailAsUsername:
                  description: Email as username
                  type: boolean
                authenticationFlows:
                  description: Authentication flows
                  type: array
                  items:
                    type: object
                    required:
                      - alias
                      - authenticationExecutions
                    properties:
                      alias:
                        description: Alias
                        type: string
                      authenticationExecutions:
                        description: Authentication executions
                        type: array
                        items:
                          type: object
                          properties:
                            authenticator:
                              description: Authenticator
                              type: string
                            authenticatorConfig:
                              description: Authenticator Config
                              type: string
                            authenticatorFlow:
                              description: Authenticator flow
                              type: boolean
                            flowAlias:
                              description: Flow Alias
                              type: string
                            priority:
                              description: Priority
                              type: integer
                              format: int32
                            requirement:
                              description: >-
                                Requirement [REQUIRED, OPTIONAL,
                                ALTERNATIVE, DISABLED]
                              type: string
                            userSetupAllowed:
                              description: User setup allowed
                              type: boolean
                      builtIn:
                        description: Built in
                        type: boolean
                      description:
                        description: Description
                        type: string
                      id:
                        description: ID
                        type: string
                      providerId:
                        description: Provider ID
                        type: string
                      topLevel:
                        description: Top level
                        type: boolean
                displayName:
                  description: Realm display name.
                  type: string
                emailTheme:
                  description: Email Theme
                  type: string
                passwordPolicy:
                  description: Realm Password Policy
                  type: string
                clientScopeMappings:
                  description: Client Scope Mappings
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      description: >-
                        https://www.keycloak.org/docs-api/11.0/rest-api/index.html#_scopemappingrepresentation
                      type: object
                      properties:
                        client:
                          description: Client
                          type: string
                        clientScope:
                          description: Client Scope
                          type: string
                        roles:
                          description: Roles
                          type: array
                          items:
                            type: string
                        self:
                          description: Self
                          type: string
                realm:
                  description: Realm name.
                  type: string
                registrationAllowed:
                  description: User registration
                  type: boolean
                userManagedAccessAllowed:
                  description: User Managed Access Allowed
                  type: boolean
                otpPolicyAlgorithm:
                  description: OTP Policy Algorithm
                  type: string
                userFederationProviders:
                  description: >-
                    Point keycloak to an external user provider to validate
                    credentials or pull in identity information.
                  type: array
                  items:
                    description: >-
                      https://www.keycloak.org/docs-api/10.0/rest-api/index.html#_userfederationproviderrepresentation
                    type: object
                    properties:
                      changedSyncPeriod:
                        type: integer
                        format: int32
                      config:
                        description: User federation provider config.
                        type: object
                        additionalProperties:
                          type: string
                      displayName:
                        description: The display name of this provider instance.
                        type: string
                      fullSyncPeriod:
                        type: integer
                        format: int32
                      id:
                        description: The ID of this provider
                        type: string
                      priority:
                        description: >-
                          The priority of this provider when looking up
                          users or adding a user.
                        type: integer
                        format: int32
                      providerName:
                        description: >-
                          The name of the user provider, such as "ldap",
                          "kerberos" or a custom SPI.
                        type: string
                permanentLockout:
                  description: Permanent Lockout
                  type: boolean
                authenticatorConfig:
                  description: Authenticator config
                  type: array
                  items:
                    type: object
                    required:
                      - alias
                    properties:
                      alias:
                        description: Alias
                        type: string
                      config:
                        description: Config
                        type: object
                        additionalProperties:
                          type: string
                      id:
                        description: ID
                        type: string
                otpPolicyLookAheadWindow:
                  description: OTP Policy Look Ahead Window
                  type: integer
                  format: int32
                otpPolicyInitialCounter:
                  description: OTP Policy Initial Counter
                  type: integer
                  format: int32
                otpPolicyType:
                  description: OTP Policy Type
                  type: string
                defaultRole:
                  description: Default role
                  type: object
                  required:
                    - name
                  properties:
                    attributes:
                      description: Role Attributes
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: string
                    clientRole:
                      description: Client Role
                      type: boolean
                    composite:
                      description: Composite
                      type: boolean
                    composites:
                      description: Composites
                      type: object
                      properties:
                        client:
                          description: 'Map client => []role'
                          type: object
                          additionalProperties:
                            type: array
                            items:
                              type: string
                        realm:
                          description: Realm roles
                          type: array
                          items:
                            type: string
                    containerId:
                      description: Container Id
                      type: string
                    description:
                      description: Description
                      type: string
                    id:
                      description: Id
                      type: string
                    name:
                      description: Name
                      type: string
                displayNameHtml:
                  description: Realm HTML display name.
                  type: string
                adminEventsEnabled:
                  description: >-
                    Enable events recording TODO: change to values and use
                    kubebuilder default annotation once supported
                  type: boolean
                smtpServer:
                  description: Email
                  type: object
                  additionalProperties:
                    type: string
                bruteForceProtected:
                  description: Brute Force Detection
                  type: boolean
                failureFactor:
                  description: Max Login Failures
                  type: integer
                  format: int32
                scopeMappings:
                  description: Scope Mappings
                  type: array
                  items:
                    description: >-
                      https://www.keycloak.org/docs-api/11.0/rest-api/index.html#_scopemappingrepresentation
                    type: object
                    properties:
                      client:
                        description: Client
                        type: string
                      clientScope:
                        description: Client Scope
                        type: string
                      roles:
                        description: Roles
                        type: array
                        items:
                          type: string
                      self:
                        description: Self
                        type: string
                adminTheme:
                  description: Admin Console Theme
                  type: string
                id:
                  type: string
                accessTokenLifespan:
                  description: Access Token Lifespan
                  type: integer
                  format: int32
                loginWithEmailAllowed:
                  description: Login with email
                  type: boolean
                defaultLocale:
                  description: Default Locale
                  type: string
                accountTheme:
                  description: Account Theme
                  type: string
                roles:
                  description: Roles
                  type: object
                  properties:
                    client:
                      description: Client Roles
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          description: >-
                            https://www.keycloak.org/docs-api/11.0/rest-api/index.html#_rolerepresentation
                          type: object
                          required:
                            - name
                          properties:
                            attributes:
                              description: Role Attributes
                              type: object
                              additionalProperties:
                                type: array
                                items:
                                  type: string
                            clientRole:
                              description: Client Role
                              type: boolean
                            composite:
                              description: Composite
                              type: boolean
                            composites:
                              description: Composites
                              type: object
                              properties:
                                client:
                                  description: 'Map client => []role'
                                  type: object
                                  additionalProperties:
                                    type: array
                                    items:
                                      type: string
                                realm:
                                  description: Realm roles
                                  type: array
                                  items:
                                    type: string
                            containerId:
                              description: Container Id
                              type: string
                            description:
                              description: Description
                              type: string
                            id:
                              description: Id
                              type: string
                            name:
                              description: Name
                              type: string
                    realm:
                      description: Realm Roles
                      type: array
                      items:
                        description: >-
                          https://www.keycloak.org/docs-api/11.0/rest-api/index.html#_rolerepresentation
                        type: object
                        required:
                          - name
                        properties:
                          attributes:
                            description: Role Attributes
                            type: object
                            additionalProperties:
                              type: array
                              items:
                                type: string
                          clientRole:
                            description: Client Role
                            type: boolean
                          composite:
                            description: Composite
                            type: boolean
                          composites:
                            description: Composites
                            type: object
                            properties:
                              client:
                                description: 'Map client => []role'
                                type: object
                                additionalProperties:
                                  type: array
                                  items:
                                    type: string
                              realm:
                                description: Realm roles
                                type: array
                                items:
                                  type: string
                          containerId:
                            description: Container Id
                            type: string
                          description:
                            description: Description
                            type: string
                          id:
                            description: Id
                            type: string
                          name:
                            description: Name
                            type: string
                otpPolicyPeriod:
                  description: OTP Policy Period
                  type: integer
                  format: int32
                quickLoginCheckMilliSeconds:
                  description: Quick Login Check Milli Seconds
                  type: integer
                  format: int64
                resetPasswordAllowed:
                  description: Forgot password
                  type: boolean
                maxDeltaTimeSeconds:
                  description: Failure Reset Time
                  type: integer
                  format: int32
            realmOverrides:
              description: A list of overrides to the default Realm behavior.
              type: array
              items:
                type: object
                required:
                  - identityProvider
                properties:
                  forFlow:
                    description: Flow to be overridden.
                    type: string
                  identityProvider:
                    description: Identity Provider to be overridden.
                    type: string
              x-kubernetes-list-type: atomic
            unmanaged:
              description: >-
                When set to true, this KeycloakRealm will be marked as
                unmanaged and not be managed by this operator. It can then
                be used for targeting purposes.
              type: boolean
        status:
          description: KeycloakRealmStatus defines the observed state of KeycloakRealm
          type: object
          required:
            - loginURL
            - message
            - phase
            - ready
          properties:
            loginURL:
              description: TODO
              type: string
            message:
              description: >-
                Human-readable message indicating details about current
                operator phase or error.
              type: string
            phase:
              description: Current phase of the operator.
              type: string
            ready:
              description: >-
                True if all resources are in a ready state and all work is
                done.
              type: boolean
            secondaryResources:
              description: >-
                A map of all the secondary resources types and names created
                for this CR. e.g "Deployment": [ "DeploymentName1",
                "DeploymentName2" ]
              type: object
              additionalProperties:
                type: array
                items:
                  type: string
    KeycloakClient:
      description: KeycloakClient is the Schema for the keycloakclients API.
      type: object
      properties:
        apiVersion:
          description: >-
            APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the
            latest internal value, and may reject unrecognized values. More
            info:
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: >-
            Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the
            client submits requests to. Cannot be updated. In CamelCase.
            More info:
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          type: object
        spec:
          description: KeycloakClientSpec defines the desired state of KeycloakClient.
          type: object
          required:
            - client
            - realmSelector
          properties:
            client:
              description: Keycloak Client REST object.
              type: object
              required:
                - clientId
              properties:
                adminUrl:
                  description: Application Admin URL.
                  type: string
                enabled:
                  description: Client enabled flag.
                  type: boolean
                clientAuthenticatorType:
                  description: What Client authentication type to use.
                  type: string
                fullScopeAllowed:
                  description: True if Full Scope is allowed.
                  type: boolean
                useTemplateConfig:
                  description: True to use a Template Config.
                  type: boolean
                redirectUris:
                  description: A list of valid Redirection URLs.
                  type: array
                  items:
                    type: string
                frontchannelLogout:
                  description: True if this client supports Front Channel logout.
                  type: boolean
                access:
                  description: Access options.
                  type: object
                  additionalProperties:
                    type: boolean
                serviceAccountsEnabled:
                  description: True if Service Accounts are enabled.
                  type: boolean
                clientId:
                  description: Client ID.
                  type: string
                authenticationFlowBindingOverrides:
                  description: Authentication Flow Binding Overrides.
                  type: object
                  additionalProperties:
                    type: string
                authorizationServicesEnabled:
                  description: >-
                    True if fine-grained authorization support is enabled
                    for this client.
                  type: boolean
                optionalClientScopes:
                  description: >-
                    A list of optional client scopes. Optional client scopes
                    are applied when issuing tokens for this client, but
                    only when they are requested by the scope parameter in
                    the OpenID Connect authorization request.
                  type: array
                  items:
                    type: string
                defaultClientScopes:
                  description: >-
                    A list of default client scopes. Default client scopes
                    are always applied when issuing OpenID Connect tokens or
                    SAML assertions for this client.
                  type: array
                  items:
                    type: string
                name:
                  description: Client name.
                  type: string
                rootUrl:
                  description: Application root URL.
                  type: string
                bearerOnly:
                  description: True if a client supports only Bearer Tokens.
                  type: boolean
                implicitFlowEnabled:
                  description: True if Implicit flow is enabled.
                  type: boolean
                secret:
                  description: >-
                    Client Secret. The Operator will automatically create a
                    Secret based on this value.
                  type: string
                useTemplateMappers:
                  description: True to use Template Mappers.
                  type: boolean
                notBefore:
                  description: Not Before setting.
                  type: integer
                nodeReRegistrationTimeout:
                  description: Node registration timeout.
                  type: integer
                useTemplateScope:
                  description: True to use Template Scope.
                  type: boolean
                publicClient:
                  description: True if this is a public Client.
                  type: boolean
                standardFlowEnabled:
                  description: True if Standard flow is enabled.
                  type: boolean
                attributes:
                  description: Client Attributes.
                  type: object
                  additionalProperties:
                    type: string
                protocol:
                  description: Protocol used for this Client.
                  type: string
                webOrigins:
                  description: A list of valid Web Origins.
                  type: array
                  items:
                    type: string
                consentRequired:
                  description: True if Consent Screen is required.
                  type: boolean
                protocolMappers:
                  description: Protocol Mappers.
                  type: array
                  items:
                    type: object
                    properties:
                      config:
                        description: Config options.
                        type: object
                        additionalProperties:
                          type: string
                      consentRequired:
                        description: True if Consent Screen is required.
                        type: boolean
                      consentText:
                        description: Text to use for displaying Consent Screen.
                        type: string
                      id:
                        description: Protocol Mapper ID.
                        type: string
                      name:
                        description: Protocol Mapper Name.
                        type: string
                      protocol:
                        description: Protocol to use.
                        type: string
                      protocolMapper:
                        description: Protocol Mapper to use
                        type: string
                id:
                  description: 'Client ID. If not specified, automatically generated.'
                  type: string
                defaultRoles:
                  description: Default Client roles.
                  type: array
                  items:
                    type: string
                authorizationSettings:
                  description: Authorization settings for this resource server.
                  type: object
                  properties:
                    allowRemoteResourceManagement:
                      description: >-
                        True if resources should be managed remotely by the
                        resource server.
                      type: boolean
                    resources:
                      description: Resources.
                      type: array
                      items:
                        description: >-
                          https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_resourcerepresentation
                        type: object
                        properties:
                          icon_uri:
                            description: An URI pointing to an icon.
                            type: string
                          uris:
                            description: Set of URIs which are protected by resource.
                            type: array
                            items:
                              type: string
                          name:
                            description: >-
                              A unique name for this resource. The name can
                              be used to uniquely identify a resource,
                              useful when querying for a specific resource.
                            type: string
                          displayName:
                            description: >-
                              A unique name for this resource. The name can
                              be used to uniquely identify a resource,
                              useful when querying for a specific resource.
                            type: string
                          ownerManagedAccess:
                            description: >-
                              True if the access to this resource can be
                              managed by the resource owner.
                            type: boolean
                          attributes:
                            description: The attributes associated with the resource.
                            type: object
                            additionalProperties:
                              type: string
                          _id:
                            description: ID.
                            type: string
                          type:
                            description: >-
                              The type of this resource. It can be used to
                              group different resource instances with the
                              same type.
                            type: string
                          scopes:
                            description: The scopes associated with this resource.
                            type: array
                            items:
                              x-kubernetes-preserve-unknown-fields: true
                    clientId:
                      description: Client ID.
                      type: string
                    name:
                      description: Name.
                      type: string
                    decisionStrategy:
                      description: >-
                        The decision strategy dictates how permissions are
                        evaluated and how a final decision is obtained.
                        'Affirmative' means that at least one permission
                        must evaluate to a positive decision in order to
                        grant access to a resource and its scopes.
                        'Unanimous' means that all permissions must evaluate
                        to a positive decision in order for the final
                        decision to be also positive.
                      type: string
                    policies:
                      description: Policies.
                      type: array
                      items:
                        description: >-
                          https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_policyrepresentation
                        type: object
                        properties:
                          config:
                            description: Config.
                            type: object
                            additionalProperties:
                              type: string
                          resources:
                            description: Resources.
                            type: array
                            items:
                              type: string
                          scopesData:
                            description: Scopes Data.
                            type: array
                            items:
                              x-kubernetes-preserve-unknown-fields: true
                          name:
                            description: The name of this policy.
                            type: string
                          resourcesData:
                            description: Resources Data.
                            type: array
                            items:
                              description: >-
                                https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_resourcerepresentation
                              type: object
                              properties:
                                icon_uri:
                                  description: An URI pointing to an icon.
                                  type: string
                                uris:
                                  description: >-
                                    Set of URIs which are protected by
                                    resource.
                                  type: array
                                  items:
                                    type: string
                                name:
                                  description: >-
                                    A unique name for this resource. The
                                    name can be used to uniquely identify a
                                    resource, useful when querying for a
                                    specific resource.
                                  type: string
                                displayName:
                                  description: >-
                                    A unique name for this resource. The
                                    name can be used to uniquely identify a
                                    resource, useful when querying for a
                                    specific resource.
                                  type: string
                                ownerManagedAccess:
                                  description: >-
                                    True if the access to this resource can
                                    be managed by the resource owner.
                                  type: boolean
                                attributes:
                                  description: >-
                                    The attributes associated with the
                                    resource.
                                  type: object
                                  additionalProperties:
                                    type: string
                                _id:
                                  description: ID.
                                  type: string
                                type:
                                  description: >-
                                    The type of this resource. It can be
                                    used to group different resource
                                    instances with the same type.
                                  type: string
                                scopes:
                                  description: >-
                                    The scopes associated with this
                                    resource.
                                  type: array
                                  items:
                                    x-kubernetes-preserve-unknown-fields: true
                          decisionStrategy:
                            description: >-
                              The decision strategy dictates how the
                              policies associated with a given permission
                              are evaluated and how a final decision is
                              obtained. 'Affirmative' means that at least
                              one policy must evaluate to a positive
                              decision in order for the final decision to be
                              also positive. 'Unanimous' means that all
                              policies must evaluate to a positive decision
                              in order for the final decision to be also
                              positive. 'Consensus' means that the number of
                              positive decisions must be greater than the
                              number of negative decisions. If the number of
                              positive and negative is the same, the final
                              decision will be negative.
                            type: string
                          policies:
                            description: Policies.
                            type: array
                            items:
                              type: string
                          owner:
                            description: Owner.
                            type: string
                          type:
                            description: Type.
                            type: string
                          id:
                            description: ID.
                            type: string
                          description:
                            description: A description for this policy.
                            type: string
                          logic:
                            description: >-
                              The logic dictates how the policy decision
                              should be made. If 'Positive', the resulting
                              effect (permit or deny) obtained during the
                              evaluation of this policy will be used to
                              perform a decision. If 'Negative', the
                              resulting effect will be negated, in other
                              words, a permit becomes a deny and vice-versa.
                            type: string
                          scopes:
                            description: Scopes.
                            type: array
                            items:
                              type: string
                    policyEnforcementMode:
                      description: >-
                        The policy enforcement mode dictates how policies
                        are enforced when evaluating authorization requests.
                        'Enforcing' means requests are denied by default
                        even when there is no policy associated with a given
                        resource. 'Permissive' means requests are allowed
                        even when there is no policy associated with a given
                        resource. 'Disabled' completely disables the
                        evaluation of policies and allows access to any
                        resource.
                      type: string
                    id:
                      description: ID.
                      type: string
                    scopes:
                      description: Authorization Scopes.
                      type: array
                      items:
                        description: >-
                          https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_scoperepresentation
                        type: object
                        properties:
                          displayName:
                            description: >-
                              A unique name for this scope. The name can be
                              used to uniquely identify a scope, useful when
                              querying for a specific scope.
                            type: string
                          iconUri:
                            description: An URI pointing to an icon.
                            type: string
                          id:
                            description: ID.
                            type: string
                          name:
                            description: >-
                              A unique name for this scope. The name can be
                              used to uniquely identify a scope, useful when
                              querying for a specific scope.
                            type: string
                          policies:
                            description: Policies.
                            type: array
                            items:
                              description: >-
                                https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_policyrepresentation
                              type: object
                              properties:
                                config:
                                  description: Config.
                                  type: object
                                  additionalProperties:
                                    type: string
                                resources:
                                  description: Resources.
                                  type: array
                                  items:
                                    type: string
                                scopesData:
                                  description: Scopes Data.
                                  type: array
                                  items:
                                    x-kubernetes-preserve-unknown-fields: true
                                name:
                                  description: The name of this policy.
                                  type: string
                                resourcesData:
                                  description: Resources Data.
                                  type: array
                                  items:
                                    description: >-
                                      https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_resourcerepresentation
                                    type: object
                                    properties:
                                      icon_uri:
                                        description: An URI pointing to an icon.
                                        type: string
                                      uris:
                                        description: >-
                                          Set of URIs which are protected by
                                          resource.
                                        type: array
                                        items:
                                          type: string
                                      name:
                                        description: >-
                                          A unique name for this resource. The
                                          name can be used to uniquely identify a
                                          resource, useful when querying for a
                                          specific resource.
                                        type: string
                                      displayName:
                                        description: >-
                                          A unique name for this resource. The
                                          name can be used to uniquely identify a
                                          resource, useful when querying for a
                                          specific resource.
                                        type: string
                                      ownerManagedAccess:
                                        description: >-
                                          True if the access to this resource can
                                          be managed by the resource owner.
                                        type: boolean
                                      attributes:
                                        description: >-
                                          The attributes associated with the
                                          resource.
                                        type: object
                                        additionalProperties:
                                          type: string
                                      _id:
                                        description: ID.
                                        type: string
                                      type:
                                        description: >-
                                          The type of this resource. It can be
                                          used to group different resource
                                          instances with the same type.
                                        type: string
                                      scopes:
                                        description: >-
                                          The scopes associated with this
                                          resource.
                                        type: array
                                        items:
                                          x-kubernetes-preserve-unknown-fields: true
                                decisionStrategy:
                                  description: >-
                                    The decision strategy dictates how the
                                    policies associated with a given
                                    permission are evaluated and how a final
                                    decision is obtained. 'Affirmative'
                                    means that at least one policy must
                                    evaluate to a positive decision in order
                                    for the final decision to be also
                                    positive. 'Unanimous' means that all
                                    policies must evaluate to a positive
                                    decision in order for the final decision
                                    to be also positive. 'Consensus' means
                                    that the number of positive decisions
                                    must be greater than the number of
                                    negative decisions. If the number of
                                    positive and negative is the same, the
                                    final decision will be negative.
                                  type: string
                                policies:
                                  description: Policies.
                                  type: array
                                  items:
                                    type: string
                                owner:
                                  description: Owner.
                                  type: string
                                type:
                                  description: Type.
                                  type: string
                                id:
                                  description: ID.
                                  type: string
                                description:
                                  description: A description for this policy.
                                  type: string
                                logic:
                                  description: >-
                                    The logic dictates how the policy
                                    decision should be made. If 'Positive',
                                    the resulting effect (permit or deny)
                                    obtained during the evaluation of this
                                    policy will be used to perform a
                                    decision. If 'Negative', the resulting
                                    effect will be negated, in other words,
                                    a permit becomes a deny and vice-versa.
                                  type: string
                                scopes:
                                  description: Scopes.
                                  type: array
                                  items:
                                    type: string
                          resources:
                            description: Resources.
                            type: array
                            items:
                              description: >-
                                https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_resourcerepresentation
                              type: object
                              properties:
                                icon_uri:
                                  description: An URI pointing to an icon.
                                  type: string
                                uris:
                                  description: >-
                                    Set of URIs which are protected by
                                    resource.
                                  type: array
                                  items:
                                    type: string
                                name:
                                  description: >-
                                    A unique name for this resource. The
                                    name can be used to uniquely identify a
                                    resource, useful when querying for a
                                    specific resource.
                                  type: string
                                displayName:
                                  description: >-
                                    A unique name for this resource. The
                                    name can be used to uniquely identify a
                                    resource, useful when querying for a
                                    specific resource.
                                  type: string
                                ownerManagedAccess:
                                  description: >-
                                    True if the access to this resource can
                                    be managed by the resource owner.
                                  type: boolean
                                attributes:
                                  description: >-
                                    The attributes associated with the
                                    resource.
                                  type: object
                                  additionalProperties:
                                    type: string
                                _id:
                                  description: ID.
                                  type: string
                                type:
                                  description: >-
                                    The type of this resource. It can be
                                    used to group different resource
                                    instances with the same type.
                                  type: string
                                scopes:
                                  description: >-
                                    The scopes associated with this
                                    resource.
                                  type: array
                                  items:
                                    x-kubernetes-preserve-unknown-fields: true
                description:
                  description: Client description.
                  type: string
                directAccessGrantsEnabled:
                  description: True if Direct Grant is enabled.
                  type: boolean
                baseUrl:
                  description: Application base URL.
                  type: string
                surrogateAuthRequired:
                  description: Surrogate Authentication Required option.
                  type: boolean
            realmSelector:
              description: Selector for looking up KeycloakRealm Custom Resources.
              type: object
              properties:
                matchExpressions:
                  description: >-
                    matchExpressions is a list of label selector
                    requirements. The requirements are ANDed.
                  type: array
                  items:
                    description: >-
                      A label selector requirement is a selector that
                      contains values, a key, and an operator that relates
                      the key and values.
                    type: object
                    required:
                      - key
                      - operator
                    properties:
                      key:
                        description: key is the label key that the selector applies to.
                        type: string
                      operator:
                        description: >-
                          operator represents a key's relationship to a set
                          of values. Valid operators are In, NotIn, Exists
                          and DoesNotExist.
                        type: string
                      values:
                        description: >-
                          values is an array of string values. If the
                          operator is In or NotIn, the values array must be
                          non-empty. If the operator is Exists or
                          DoesNotExist, the values array must be empty. This
                          array is replaced during a strategic merge patch.
                        type: array
                        items:
                          type: string
                matchLabels:
                  description: >-
                    matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an
                    element of matchExpressions, whose key field is "key",
                    the operator is "In", and the values array contains only
                    "value". The requirements are ANDed.
                  type: object
                  additionalProperties:
                    type: string
            roles:
              description: Client Roles
              type: array
              items:
                description: >-
                  https://www.keycloak.org/docs-api/11.0/rest-api/index.html#_rolerepresentation
                type: object
                required:
                  - name
                properties:
                  attributes:
                    description: Role Attributes
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  clientRole:
                    description: Client Role
                    type: boolean
                  composite:
                    description: Composite
                    type: boolean
                  composites:
                    description: Composites
                    type: object
                    properties:
                      client:
                        description: 'Map client => []role'
                        type: object
                        additionalProperties:
                          type: array
                          items:
                            type: string
                      realm:
                        description: Realm roles
                        type: array
                        items:
                          type: string
                  containerId:
                    description: Container Id
                    type: string
                  description:
                    description: Description
                    type: string
                  id:
                    description: Id
                    type: string
                  name:
                    description: Name
                    type: string
              x-kubernetes-list-map-keys:
                - name
              x-kubernetes-list-type: map
            scopeMappings:
              description: Scope Mappings
              type: object
              properties:
                clientMappings:
                  description: Client Mappings
                  type: object
                  additionalProperties:
                    description: >-
                      https://www.keycloak.org/docs-api/11.0/rest-api/index.html#_clientmappingsrepresentation
                    type: object
                    properties:
                      client:
                        description: Client
                        type: string
                      id:
                        description: ID
                        type: string
                      mappings:
                        description: Mappings
                        type: array
                        items:
                          description: >-
                            https://www.keycloak.org/docs-api/11.0/rest-api/index.html#_rolerepresentation
                          type: object
                          required:
                            - name
                          properties:
                            attributes:
                              description: Role Attributes
                              type: object
                              additionalProperties:
                                type: array
                                items:
                                  type: string
                            clientRole:
                              description: Client Role
                              type: boolean
                            composite:
                              description: Composite
                              type: boolean
                            composites:
                              description: Composites
                              type: object
                              properties:
                                client:
                                  description: 'Map client => []role'
                                  type: object
                                  additionalProperties:
                                    type: array
                                    items:
                                      type: string
                                realm:
                                  description: Realm roles
                                  type: array
                                  items:
                                    type: string
                            containerId:
                              description: Container Id
                              type: string
                            description:
                              description: Description
                              type: string
                            id:
                              description: Id
                              type: string
                            name:
                              description: Name
                              type: string
                realmMappings:
                  description: Realm Mappings
                  type: array
                  items:
                    description: >-
                      https://www.keycloak.org/docs-api/11.0/rest-api/index.html#_rolerepresentation
                    type: object
                    required:
                      - name
                    properties:
                      attributes:
                        description: Role Attributes
                        type: object
                        additionalProperties:
                          type: array
                          items:
                            type: string
                      clientRole:
                        description: Client Role
                        type: boolean
                      composite:
                        description: Composite
                        type: boolean
                      composites:
                        description: Composites
                        type: object
                        properties:
                          client:
                            description: 'Map client => []role'
                            type: object
                            additionalProperties:
                              type: array
                              items:
                                type: string
                          realm:
                            description: Realm roles
                            type: array
                            items:
                              type: string
                      containerId:
                        description: Container Id
                        type: string
                      description:
                        description: Description
                        type: string
                      id:
                        description: Id
                        type: string
                      name:
                        description: Name
                        type: string
            serviceAccountClientRoles:
              description: Service account client roles for this client.
              type: object
              additionalProperties:
                type: array
                items:
                  type: string
            serviceAccountRealmRoles:
              description: Service account realm roles for this client.
              type: array
              items:
                type: string
        status:
          description: >-
            KeycloakClientStatus defines the observed state of
            KeycloakClient
          type: object
          required:
            - message
            - phase
            - ready
          properties:
            message:
              description: >-
                Human-readable message indicating details about current
                operator phase or error.
              type: string
            phase:
              description: Current phase of the operator.
              type: string
            ready:
              description: >-
                True if all resources are in a ready state and all work is
                done.
              type: boolean
            secondaryResources:
              description: >-
                A map of all the secondary resources types and names created
                for this CR. e.g "Deployment": [ "DeploymentName1",
                "DeploymentName2" ]
              type: object
              additionalProperties:
                type: array
                items:
                  type: string 