apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: init-deploy-
spec:
  params:
    - name: git_url
      type: string
      description: Git URL to push the target deploy repo 
    - name: git_src_url
      type: string
      description: Git clone URL for the project sources
    - name: git_user
      type: string
      description: Git user
    - name: git_user_email
      type: string
      description: Git user
    - name: project_name
      type: string
      description: Name of the project
    - name: project_namespace
      type: string
      description: Name of the project namespace
    - name: project_type
      type: string
      default: generic
    - name: environment_namespace
      type: string
      description: Name of the dev environment namespace
    - name: service_port
      type: string
      description: Port of the service
    - name: route_host
      type: string
      description: The route host for ingress
    - name: git_repository
      type: string
      description: The git repository
    - name: maven_repo
      type: string
      description: Path to the maven repo
      default: $HOME/.m2/repository/
  tasks:
    - name: git-clone-src
      when:
      - input: "$(params.project_type)"
        operator: in
        values: ["quarkus"]
      params:
        - name: URL
          value: >-
            $(params.git_src_url)
        - name: SUBMODULES
          value: 'true'
        - name: DEPTH
          value: '1'
        - name: SSL_VERIFY
          value: 'false'
        - name: CRT_FILENAME
          value: ca-bundle.crt
        - name: DELETE_EXISTING
          value: 'true'
        - name: VERBOSE
          value: 'true'
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: namespace
            value: openshift-pipelines
      workspaces:
        - name: output
          workspace: src-project
        - name: basic-auth
          workspace: auth
    - name: add-required-extensions
      when:
        - input: "$(params.project_type)"
          operator: in
          values: ["quarkus"]
      params:
        - name: GOALS
          value:
            - quarkus:add-extension 
            - -Dextensions=helm,openshift
            - -Dmaven.repo.local=$(params.maven_repo)
        - name: MAVEN_MIRROR_URL
          value: ''
        - name: SERVER_USER
          value: ''
        - name: SERVER_PASSWORD
          value: ''
        - name: PROXY_USER
          value: ''
        - name: PROXY_PASSWORD
          value: ''
        - name: PROXY_PORT
          value: ''
        - name: PROXY_HOST
          value: ''
        - name: PROXY_NON_PROXY_HOSTS
          value: ''
        - name: PROXY_PROTOCOL
          value: http
        - name: CONTEXT_DIR
          value: .
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: maven
          - name: namespace
            value: openshift-pipelines
      runAfter:
        - git-clone-src
      workspaces:
        - name: source
          workspace: src-project
        - name: maven_settings
          workspace: mvn-settings
    - name: quarkus-create-helm
      when:
      - input: "$(params.project_type)"
        operator: in
        values: ["quarkus"]
      params:
        - name: GOALS
          value:
            - clean
            - package
            - -Dmaven.repo.local=$(params.maven_repo)
            - -DskipTests
            - -Dquarkus.openshift.route.expose=true
            - -Dquarkus.helm.repository.deployment-target=openshift
            - -Dquarkus.helm.values.image.value=image-registry.openshift-image-registry.svc:5000/$(params.project_namespace)/$(params.project_name)
        - name: MAVEN_MIRROR_URL
          value: ''
        - name: SERVER_USER
          value: ''
        - name: SERVER_PASSWORD
          value: ''
        - name: PROXY_USER
          value: ''
        - name: PROXY_PASSWORD
          value: ''
        - name: PROXY_PORT
          value: ''
        - name: PROXY_HOST
          value: ''
        - name: PROXY_NON_PROXY_HOSTS
          value: ''
        - name: PROXY_PROTOCOL
          value: http
        - name: CONTEXT_DIR
          value: .
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: maven
          - name: namespace
            value: openshift-pipelines
      runAfter:
        - add-required-extensions
      workspaces:
        - name: source
          workspace: src-project
        - name: maven_settings
          workspace: mvn-settings
    - name: copy-chart
      when:
      - input: "$(params.project_type)"
        operator: in
        values: ["quarkus"]
      params:
        - name: SOURCE_FOLDER
          value: target/helm/openshift/$(params.project_name)
        - name: TARGET_FOLDER
          value: apps
      runAfter:
        - quarkus-create-helm
      taskRef:
        kind: Task
        name: copy
      workspaces:
        - name: target
          workspace: src
        - name: source
          workspace: src-project
    - name: helm-create
      when:
      - input: "$(params.project_type)"
        operator: in
        values: ["generic"]
      taskRef:
        kind: Task
        name: helm-create
      params:
        - name: chart_name
          value: $(params.project_name)
        - name: path
          value: apps
      workspaces:
        - name: source
          workspace: src
    - name: add-argo-application
      params:
        - name: PROJECT
          value: $(params.project_name)
        - name: PROJECT_NAMESPACE
          value: $(params.project_namespace)
        - name: ENVIRONMENT_NAMESPACE
          value: $(params.environment_namespace)
        - name: SERVICE_PORT
          value: $(params.service_port)
        - name: GIT_REPOSITORY
          value: $(params.git_repository)
        - name: TARGET_FOLDER
          value: bootstrap
        - name: FILE
          value: argo-application.yaml
      taskRef:
        kind: Task
        name: additional-resources
      workspaces:
        - name: target
          workspace: src
        - name: source
          workspace: additional-resources
    - name: add-helm-value-yaml
      params:
        - name: PROJECT
          value: $(params.project_name)
        - name: PROJECT_NAMESPACE
          value: $(params.project_namespace)
        - name: ENVIRONMENT_NAMESPACE
          value: $(params.environment_namespace)
        - name: SERVICE_PORT
          value: $(params.service_port)
        - name: GIT_REPOSITORY
          value: $(params.git_repository)
        - name: ROUTE_HOST
          value: $(params.route_host)
        - name: TARGET_FOLDER
          value: environments/test
        - name: FILE
          value: values.yaml
      taskRef:
        kind: Task
        name: additional-resources
      workspaces:
        - name: target
          workspace: src
        - name: source
          workspace: additional-resources
    - name: git-init
      params:
        - name: BASE_IMAGE
          value: >-
            docker.io/alpine/git:v2.26.2@sha256:23618034b0be9205d9cc0846eb711b12ba4c9b468efdd8a59aac1d7b1a23363f
        - name: GIT_SCRIPT
          value: |
            git init && git config http.sslVerify false && git checkout -b main
        - name: VERBOSE
          value: 'true'
        - name: GIT_USER_NAME
          value: "$(params.git_user)"
        - name: GIT_USER_EMAIL
          value: "$(params.git_user_email)"
        - name: DELETE_EXISTING
          value: false
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: git-cli
          - name: namespace
            value: openshift-pipelines
      runAfter:
        - helm-create
        - add-argo-application
        - add-helm-value-yaml
        - copy-chart
      workspaces:
        - name: source
          workspace: src
    - name: git-commit
      params:
        - name: BASE_IMAGE
          value: >-
            docker.io/alpine/git:v2.26.2@sha256:23618034b0be9205d9cc0846eb711b12ba4c9b468efdd8a59aac1d7b1a23363f
        - name: GIT_SCRIPT
          value: |
            git add . && git commit -m "deployment artifacts generated"
        - name: VERBOSE
          value: 'true'
        - name: GIT_USER_NAME
          value: "$(params.git_user)"
        - name: GIT_USER_EMAIL
          value: "$(params.git_user_email)"
        - name: DELETE_EXISTING
          value: false
      runAfter:
        - git-init
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: git-cli
          - name: namespace
            value: openshift-pipelines
      workspaces:
        - name: source
          workspace: src
    - name: git-push
      params:
        - name: BASE_IMAGE
          value: >-
            docker.io/alpine/git:v2.26.2@sha256:23618034b0be9205d9cc0846eb711b12ba4c9b468efdd8a59aac1d7b1a23363f
        - name: GIT_SCRIPT
          value: |
            git remote add origin $(params.git_url) && git push -u origin main
        - name: VERBOSE
          value: 'true'
        - name: GIT_USER_NAME
          value: "$(params.git_user)"
        - name: GIT_USER_EMAIL
          value: "$(params.git_user_email)"
        - name: DELETE_EXISTING
          value: false
      runAfter:
        - git-commit
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: git-cli
          - name: namespace
            value: openshift-pipelines
      workspaces:
        - name: source
          workspace: src
        - name: basic-auth
          workspace: auth
  workspaces:
    - name: src
    - name: src-project
      description: Stores the source file repo
    - name: auth
    - name: additional-resources
    - name: mvn-settings
  