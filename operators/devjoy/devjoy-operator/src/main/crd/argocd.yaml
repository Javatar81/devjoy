kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1
metadata:
  name: argocds.argoproj.io
  uid: e3ad9249-d3d3-4af6-a77d-212d3fa2c32a
  resourceVersion: '5050851049'
  generation: 33
  creationTimestamp: '2020-04-03T21:05:28Z'
  labels:
    operators.coreos.com/openshift-gitops-operator.openshift-operators: ''
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
    operatorframework.io/installed-alongside-27ff3f11b7652ca2: openshift-operators/openshift-gitops-operator.v1.11.1
    operatorframework.io/installed-alongside-27ff4011b7652e55: openshift-operators/openshift-gitops-operator.v1.11.0
spec:
  group: argoproj.io
  names:
    plural: argocds
    singular: argocd
    kind: ArgoCD
    listKind: ArgoCDList
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: false
      deprecated: true
      deprecationWarning: >-
        ArgoCD v1alpha1 version is deprecated and will be converted to v1beta1
        automatically. Moving forward, please use v1beta1 as the ArgoCD API
        version.
      schema:
        openAPIV3Schema:
          description: ArgoCD is the Schema for the argocds API
          type: object
          properties:
            apiVersion:
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ArgoCDSpec defines the desired state of ArgoCD
              type: object
              properties:
                nodePlacement:
                  description: >-
                    NodePlacement defines NodeSelectors and Taints for Argo CD
                    workloads
                  type: object
                  properties:
                    nodeSelector:
                      description: >-
                        NodeSelector is a field of PodSpec, it is a map of key
                        value pairs used for node selection
                      type: object
                      additionalProperties:
                        type: string
                    tolerations:
                      description: >-
                        Tolerations allow the pods to schedule onto nodes with
                        matching taints
                      type: array
                      items:
                        description: >-
                          The pod this Toleration is attached to tolerates any
                          taint that matches the triple <key,value,effect> using
                          the matching operator <operator>.
                        type: object
                        properties:
                          effect:
                            description: >-
                              Effect indicates the taint effect to match. Empty
                              means match all taint effects. When specified,
                              allowed values are NoSchedule, PreferNoSchedule
                              and NoExecute.
                            type: string
                          key:
                            description: >-
                              Key is the taint key that the toleration applies
                              to. Empty means match all taint keys. If the key
                              is empty, operator must be Exists; this
                              combination means to match all values and all
                              keys.
                            type: string
                          operator:
                            description: >-
                              Operator represents a key's relationship to the
                              value. Valid operators are Exists and Equal.
                              Defaults to Equal. Exists is equivalent to
                              wildcard for value, so that a pod can tolerate all
                              taints of a particular category.
                            type: string
                          tolerationSeconds:
                            description: >-
                              TolerationSeconds represents the period of time
                              the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the
                              taint. By default, it is not set, which means
                              tolerate the taint forever (do not evict). Zero
                              and negative values will be treated as 0 (evict
                              immediately) by the system.
                            type: integer
                            format: int64
                          value:
                            description: >-
                              Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be
                              empty, otherwise just a regular string.
                            type: string
                server:
                  description: Server defines the options for the ArgoCD Server component.
                  type: object
                  properties:
                    logLevel:
                      description: >-
                        LogLevel refers to the log level to be used by the
                        ArgoCD Server component. Defaults to
                        ArgoCDDefaultLogLevel if not set.  Valid options are
                        debug, info, error, and warn.
                      type: string
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for the Argo CD server component.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    host:
                      description: Host is the hostname to use for Ingress/Route resources.
                      type: string
                    route:
                      description: >-
                        Route defines the desired state for an OpenShift Route
                        for the Argo CD Server component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: >-
                            Annotations is the map of annotations to use for the
                            Route resource.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: >-
                            Enabled will toggle the creation of the OpenShift
                            Route.
                          type: boolean
                        labels:
                          description: >-
                            Labels is the map of labels to use for the Route
                            resource
                          type: object
                          additionalProperties:
                            type: string
                        path:
                          description: >-
                            Path the router watches for, to route traffic for to
                            the service.
                          type: string
                        tls:
                          description: >-
                            TLS provides the ability to configure certificates
                            and termination for the Route.
                          type: object
                          required:
                            - termination
                          properties:
                            caCertificate:
                              description: >-
                                caCertificate provides the cert authority
                                certificate contents
                              type: string
                            certificate:
                              description: certificate provides certificate contents
                              type: string
                            destinationCACertificate:
                              description: >-
                                destinationCACertificate provides the contents
                                of the ca certificate of the final destination. 
                                When using reencrypt termination this file
                                should be provided in order to have routers use
                                it for health checks on the secure connection.
                                If this field is not specified, the router may
                                provide its own destination CA and perform
                                hostname validation using the short service name
                                (service.namespace.svc), which allows
                                infrastructure generated certificates to
                                automatically verify.
                              type: string
                            insecureEdgeTerminationPolicy:
                              description: >-
                                insecureEdgeTerminationPolicy indicates the
                                desired behavior for insecure connections to a
                                route. While each router may make its own
                                decisions on which ports to expose, this is
                                normally port 80. 
                                 * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port.
                              type: string
                            key:
                              description: key provides key file contents
                              type: string
                            termination:
                              description: termination indicates termination type.
                              type: string
                        wildcardPolicy:
                          description: >-
                            WildcardPolicy if any for the route. Currently only
                            'Subdomain' or 'None' is allowed.
                          type: string
                    env:
                      description: Env lets you specify environment for API server pods
                      type: array
                      items:
                        description: >-
                          EnvVar represents an environment variable present in a
                          Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: >-
                              Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: >-
                              Variable references $(VAR_NAME) are expanded using
                              the previously defined environment variables in
                              the container and any service environment
                              variables. If a variable cannot be resolved, the
                              reference in the input string will be unchanged.
                              Double $$ are reduced to a single $, which allows
                              for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal
                              "$(VAR_NAME)". Escaped references will never be
                              expanded, regardless of whether the variable
                              exists or not. Defaults to "".
                            type: string
                          valueFrom:
                            description: >-
                              Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the ConfigMap or its key
                                      must be defined
                                    type: boolean
                              fieldRef:
                                description: >-
                                  Selects a field of the pod: supports
                                  metadata.name, metadata.namespace,
                                  `metadata.labels['<KEY>']`,
                                  `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP, status.podIPs.
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: >-
                                      Version of the schema the FieldPath is
                                      written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: >-
                                      Path of the field to select in the
                                      specified API version.
                                    type: string
                              resourceFieldRef:
                                description: >-
                                  Selects a resource of the container: only
                                  resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage,
                                  requests.cpu, requests.memory and
                                  requests.ephemeral-storage) are currently
                                  supported.
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: >-
                                      Container name: required for volumes,
                                      optional for env vars
                                    type: string
                                  divisor:
                                    description: >-
                                      Specifies the output format of the exposed
                                      resources, defaults to "1"
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: >-
                                  Selects a key of a secret in the pod's
                                  namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: >-
                                      The key of the secret to select from. 
                                      Must be a valid secret key.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the Secret or its key must
                                      be defined
                                    type: boolean
                    ingress:
                      description: >-
                        Ingress defines the desired state for an Ingress for the
                        Argo CD Server component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: >-
                            Annotations is the map of annotations to apply to
                            the Ingress.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: Enabled will toggle the creation of the Ingress.
                          type: boolean
                        ingressClassName:
                          description: IngressClassName for the Ingress resource.
                          type: string
                        path:
                          description: Path used for the Ingress resource.
                          type: string
                        tls:
                          description: >-
                            TLS configuration. Currently the Ingress only
                            supports a single TLS port, 443. If multiple members
                            of this list specify different hosts, they will be
                            multiplexed on the same port according to the
                            hostname specified through the SNI TLS extension, if
                            the ingress controller fulfilling the ingress
                            supports SNI.
                          type: array
                          items:
                            description: >-
                              IngressTLS describes the transport layer security
                              associated with an ingress.
                            type: object
                            properties:
                              hosts:
                                description: >-
                                  hosts is a list of hosts included in the TLS
                                  certificate. The values in this list must
                                  match the name/s used in the tlsSecret.
                                  Defaults to the wildcard host setting for the
                                  loadbalancer controller fulfilling this
                                  Ingress, if left unspecified.
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                              secretName:
                                description: >-
                                  secretName is the name of the secret used to
                                  terminate TLS traffic on port 443. Field is
                                  left optional to allow TLS routing based on
                                  SNI hostname alone. If the SNI host in a
                                  listener conflicts with the "Host" header
                                  field used by an IngressRule, the SNI host is
                                  used for termination and value of the "Host"
                                  header is used for routing.
                                type: string
                    service:
                      description: >-
                        Service defines the options for the Service backing the
                        ArgoCD Server component.
                      type: object
                      required:
                        - type
                      properties:
                        type:
                          description: >-
                            Type is the ServiceType to use for the Service
                            resource.
                          type: string
                    extraCommandArgs:
                      description: >-
                        Extra Command arguments that would append to the Argo CD
                        server command. ExtraCommandArgs will not be added, if
                        one of these commands is already part of the server
                        command with same or different value.
                      type: array
                      items:
                        type: string
                    logFormat:
                      description: >-
                        LogFormat refers to the log level to be used by the
                        ArgoCD Server component. Defaults to
                        ArgoCDDefaultLogFormat if not configured. Valid options
                        are text or json.
                      type: string
                    autoscale:
                      description: >-
                        Autoscale defines the autoscale options for the Argo CD
                        Server component.
                      type: object
                      required:
                        - enabled
                      properties:
                        enabled:
                          description: >-
                            Enabled will toggle autoscaling support for the Argo
                            CD Server component.
                          type: boolean
                        hpa:
                          description: >-
                            HPA defines the HorizontalPodAutoscaler options for
                            the Argo CD Server component.
                          type: object
                          required:
                            - maxReplicas
                            - scaleTargetRef
                          properties:
                            maxReplicas:
                              description: >-
                                maxReplicas is the upper limit for the number of
                                pods that can be set by the autoscaler; cannot
                                be smaller than MinReplicas.
                              type: integer
                              format: int32
                            minReplicas:
                              description: >-
                                minReplicas is the lower limit for the number of
                                replicas to which the autoscaler can scale
                                down.  It defaults to 1 pod.  minReplicas is
                                allowed to be 0 if the alpha feature gate
                                HPAScaleToZero is enabled and at least one
                                Object or External metric is configured. 
                                Scaling is active as long as at least one metric
                                value is available.
                              type: integer
                              format: int32
                            scaleTargetRef:
                              description: >-
                                reference to scaled resource; horizontal pod
                                autoscaler will learn the current resource
                                consumption and will set the desired number of
                                pods by using its Scale subresource.
                              type: object
                              required:
                                - kind
                                - name
                              properties:
                                apiVersion:
                                  description: >-
                                    apiVersion is the API version of the
                                    referent
                                  type: string
                                kind:
                                  description: >-
                                    kind is the kind of the referent; More info:
                                    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                  type: string
                                name:
                                  description: >-
                                    name is the name of the referent; More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                            targetCPUUtilizationPercentage:
                              description: >-
                                targetCPUUtilizationPercentage is the target
                                average CPU utilization (represented as a
                                percentage of requested CPU) over all the pods;
                                if not specified the default autoscaling policy
                                will be used.
                              type: integer
                              format: int32
                    replicas:
                      description: >-
                        Replicas defines the number of replicas for
                        argocd-server. Default is nil. Value should be greater
                        than or equal to 0. Value will be ignored if Autoscaler
                        is enabled.
                      type: integer
                      format: int32
                    insecure:
                      description: Insecure toggles the insecure flag.
                      type: boolean
                    grpc:
                      description: >-
                        GRPC defines the state for the Argo CD Server GRPC
                        options.
                      type: object
                      properties:
                        host:
                          description: >-
                            Host is the hostname to use for Ingress/Route
                            resources.
                          type: string
                        ingress:
                          description: >-
                            Ingress defines the desired state for the Argo CD
                            Server GRPC Ingress.
                          type: object
                          required:
                            - enabled
                          properties:
                            annotations:
                              description: >-
                                Annotations is the map of annotations to apply
                                to the Ingress.
                              type: object
                              additionalProperties:
                                type: string
                            enabled:
                              description: Enabled will toggle the creation of the Ingress.
                              type: boolean
                            ingressClassName:
                              description: IngressClassName for the Ingress resource.
                              type: string
                            path:
                              description: Path used for the Ingress resource.
                              type: string
                            tls:
                              description: >-
                                TLS configuration. Currently the Ingress only
                                supports a single TLS port, 443. If multiple
                                members of this list specify different hosts,
                                they will be multiplexed on the same port
                                according to the hostname specified through the
                                SNI TLS extension, if the ingress controller
                                fulfilling the ingress supports SNI.
                              type: array
                              items:
                                description: >-
                                  IngressTLS describes the transport layer
                                  security associated with an ingress.
                                type: object
                                properties:
                                  hosts:
                                    description: >-
                                      hosts is a list of hosts included in the
                                      TLS certificate. The values in this list
                                      must match the name/s used in the
                                      tlsSecret. Defaults to the wildcard host
                                      setting for the loadbalancer controller
                                      fulfilling this Ingress, if left
                                      unspecified.
                                    type: array
                                    items:
                                      type: string
                                    x-kubernetes-list-type: atomic
                                  secretName:
                                    description: >-
                                      secretName is the name of the secret used
                                      to terminate TLS traffic on port 443.
                                      Field is left optional to allow TLS
                                      routing based on SNI hostname alone. If
                                      the SNI host in a listener conflicts with
                                      the "Host" header field used by an
                                      IngressRule, the SNI host is used for
                                      termination and value of the "Host" header
                                      is used for routing.
                                    type: string
                grafana:
                  description: Grafana defines the Grafana server options for ArgoCD.
                  type: object
                  required:
                    - enabled
                  properties:
                    enabled:
                      description: Enabled will toggle Grafana support globally for ArgoCD.
                      type: boolean
                    host:
                      description: Host is the hostname to use for Ingress/Route resources.
                      type: string
                    image:
                      description: Image is the Grafana container image.
                      type: string
                    ingress:
                      description: >-
                        Ingress defines the desired state for an Ingress for the
                        Grafana component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: >-
                            Annotations is the map of annotations to apply to
                            the Ingress.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: Enabled will toggle the creation of the Ingress.
                          type: boolean
                        ingressClassName:
                          description: IngressClassName for the Ingress resource.
                          type: string
                        path:
                          description: Path used for the Ingress resource.
                          type: string
                        tls:
                          description: >-
                            TLS configuration. Currently the Ingress only
                            supports a single TLS port, 443. If multiple members
                            of this list specify different hosts, they will be
                            multiplexed on the same port according to the
                            hostname specified through the SNI TLS extension, if
                            the ingress controller fulfilling the ingress
                            supports SNI.
                          type: array
                          items:
                            description: >-
                              IngressTLS describes the transport layer security
                              associated with an ingress.
                            type: object
                            properties:
                              hosts:
                                description: >-
                                  hosts is a list of hosts included in the TLS
                                  certificate. The values in this list must
                                  match the name/s used in the tlsSecret.
                                  Defaults to the wildcard host setting for the
                                  loadbalancer controller fulfilling this
                                  Ingress, if left unspecified.
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                              secretName:
                                description: >-
                                  secretName is the name of the secret used to
                                  terminate TLS traffic on port 443. Field is
                                  left optional to allow TLS routing based on
                                  SNI hostname alone. If the SNI host in a
                                  listener conflicts with the "Host" header
                                  field used by an IngressRule, the SNI host is
                                  used for termination and value of the "Host"
                                  header is used for routing.
                                type: string
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for Grafana.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    route:
                      description: >-
                        Route defines the desired state for an OpenShift Route
                        for the Grafana component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: >-
                            Annotations is the map of annotations to use for the
                            Route resource.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: >-
                            Enabled will toggle the creation of the OpenShift
                            Route.
                          type: boolean
                        labels:
                          description: >-
                            Labels is the map of labels to use for the Route
                            resource
                          type: object
                          additionalProperties:
                            type: string
                        path:
                          description: >-
                            Path the router watches for, to route traffic for to
                            the service.
                          type: string
                        tls:
                          description: >-
                            TLS provides the ability to configure certificates
                            and termination for the Route.
                          type: object
                          required:
                            - termination
                          properties:
                            caCertificate:
                              description: >-
                                caCertificate provides the cert authority
                                certificate contents
                              type: string
                            certificate:
                              description: certificate provides certificate contents
                              type: string
                            destinationCACertificate:
                              description: >-
                                destinationCACertificate provides the contents
                                of the ca certificate of the final destination. 
                                When using reencrypt termination this file
                                should be provided in order to have routers use
                                it for health checks on the secure connection.
                                If this field is not specified, the router may
                                provide its own destination CA and perform
                                hostname validation using the short service name
                                (service.namespace.svc), which allows
                                infrastructure generated certificates to
                                automatically verify.
                              type: string
                            insecureEdgeTerminationPolicy:
                              description: >-
                                insecureEdgeTerminationPolicy indicates the
                                desired behavior for insecure connections to a
                                route. While each router may make its own
                                decisions on which ports to expose, this is
                                normally port 80. 
                                 * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port.
                              type: string
                            key:
                              description: key provides key file contents
                              type: string
                            termination:
                              description: termination indicates termination type.
                              type: string
                        wildcardPolicy:
                          description: >-
                            WildcardPolicy if any for the route. Currently only
                            'Subdomain' or 'None' is allowed.
                          type: string
                    size:
                      description: Size is the replica count for the Grafana Deployment.
                      type: integer
                      format: int32
                    version:
                      description: Version is the Grafana container image tag.
                      type: string
                resourceInclusions:
                  description: >-
                    ResourceInclusions is used to only include specific
                    group/kinds in the reconciliation process.
                  type: string
                import:
                  description: Import is the import/restore options for ArgoCD.
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      description: Name of an ArgoCDExport from which to import data.
                      type: string
                    namespace:
                      description: >-
                        Namespace for the ArgoCDExport, defaults to the same
                        namespace as the ArgoCD.
                      type: string
                kustomizeVersions:
                  description: >-
                    KustomizeVersions is a listing of configured versions of
                    Kustomize to be made available within ArgoCD.
                  type: array
                  items:
                    description: >-
                      KustomizeVersionSpec is used to specify information about
                      a kustomize version to be used within ArgoCD.
                    type: object
                    properties:
                      path:
                        description: >-
                          Path is the path to a configured kustomize version on
                          the filesystem of your repo server.
                        type: string
                      version:
                        description: >-
                          Version is a configured kustomize version in the
                          format of vX.Y.Z
                        type: string
                resourceTrackingMethod:
                  description: >-
                    ResourceTrackingMethod defines how Argo CD should track
                    resources that it manages
                  type: string
                helpChatText:
                  description: >-
                    HelpChatText is the text for getting chat help, defaults to
                    "Chat now!"
                  type: string
                disableAdmin:
                  description: DisableAdmin will disable the admin user.
                  type: boolean
                monitoring:
                  description: >-
                    Monitoring defines whether workload status monitoring
                    configuration for this instance.
                  type: object
                  required:
                    - enabled
                  properties:
                    enabled:
                      description: >-
                        Enabled defines whether workload status monitoring is
                        enabled for this instance or not
                      type: boolean
                notifications:
                  description: >-
                    Notifications defines whether the Argo CD Notifications
                    controller should be installed.
                  type: object
                  required:
                    - enabled
                  properties:
                    enabled:
                      description: >-
                        Enabled defines whether argocd-notifications controller
                        should be deployed or not
                      type: boolean
                    env:
                      description: >-
                        Env let you specify environment variables for
                        Notifications pods
                      type: array
                      items:
                        description: >-
                          EnvVar represents an environment variable present in a
                          Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: >-
                              Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: >-
                              Variable references $(VAR_NAME) are expanded using
                              the previously defined environment variables in
                              the container and any service environment
                              variables. If a variable cannot be resolved, the
                              reference in the input string will be unchanged.
                              Double $$ are reduced to a single $, which allows
                              for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal
                              "$(VAR_NAME)". Escaped references will never be
                              expanded, regardless of whether the variable
                              exists or not. Defaults to "".
                            type: string
                          valueFrom:
                            description: >-
                              Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the ConfigMap or its key
                                      must be defined
                                    type: boolean
                              fieldRef:
                                description: >-
                                  Selects a field of the pod: supports
                                  metadata.name, metadata.namespace,
                                  `metadata.labels['<KEY>']`,
                                  `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP, status.podIPs.
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: >-
                                      Version of the schema the FieldPath is
                                      written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: >-
                                      Path of the field to select in the
                                      specified API version.
                                    type: string
                              resourceFieldRef:
                                description: >-
                                  Selects a resource of the container: only
                                  resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage,
                                  requests.cpu, requests.memory and
                                  requests.ephemeral-storage) are currently
                                  supported.
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: >-
                                      Container name: required for volumes,
                                      optional for env vars
                                    type: string
                                  divisor:
                                    description: >-
                                      Specifies the output format of the exposed
                                      resources, defaults to "1"
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: >-
                                  Selects a key of a secret in the pod's
                                  namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: >-
                                      The key of the secret to select from. 
                                      Must be a valid secret key.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the Secret or its key must
                                      be defined
                                    type: boolean
                    image:
                      description: Image is the Argo CD Notifications image (optional)
                      type: string
                    logLevel:
                      description: >-
                        LogLevel describes the log level that should be used by
                        the argocd-notifications. Defaults to
                        ArgoCDDefaultLogLevel if not set.  Valid options are
                        debug,info, error, and warn.
                      type: string
                    replicas:
                      description: >-
                        Replicas defines the number of replicas to run for
                        notifications-controller
                      type: integer
                      format: int32
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for Argo CD Notifications.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    version:
                      description: >-
                        Version is the Argo CD Notifications image tag.
                        (optional)
                      type: string
                prometheus:
                  description: Prometheus defines the Prometheus server options for ArgoCD.
                  type: object
                  required:
                    - enabled
                  properties:
                    enabled:
                      description: >-
                        Enabled will toggle Prometheus support globally for
                        ArgoCD.
                      type: boolean
                    host:
                      description: Host is the hostname to use for Ingress/Route resources.
                      type: string
                    ingress:
                      description: >-
                        Ingress defines the desired state for an Ingress for the
                        Prometheus component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: >-
                            Annotations is the map of annotations to apply to
                            the Ingress.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: Enabled will toggle the creation of the Ingress.
                          type: boolean
                        ingressClassName:
                          description: IngressClassName for the Ingress resource.
                          type: string
                        path:
                          description: Path used for the Ingress resource.
                          type: string
                        tls:
                          description: >-
                            TLS configuration. Currently the Ingress only
                            supports a single TLS port, 443. If multiple members
                            of this list specify different hosts, they will be
                            multiplexed on the same port according to the
                            hostname specified through the SNI TLS extension, if
                            the ingress controller fulfilling the ingress
                            supports SNI.
                          type: array
                          items:
                            description: >-
                              IngressTLS describes the transport layer security
                              associated with an ingress.
                            type: object
                            properties:
                              hosts:
                                description: >-
                                  hosts is a list of hosts included in the TLS
                                  certificate. The values in this list must
                                  match the name/s used in the tlsSecret.
                                  Defaults to the wildcard host setting for the
                                  loadbalancer controller fulfilling this
                                  Ingress, if left unspecified.
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                              secretName:
                                description: >-
                                  secretName is the name of the secret used to
                                  terminate TLS traffic on port 443. Field is
                                  left optional to allow TLS routing based on
                                  SNI hostname alone. If the SNI host in a
                                  listener conflicts with the "Host" header
                                  field used by an IngressRule, the SNI host is
                                  used for termination and value of the "Host"
                                  header is used for routing.
                                type: string
                    route:
                      description: >-
                        Route defines the desired state for an OpenShift Route
                        for the Prometheus component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: >-
                            Annotations is the map of annotations to use for the
                            Route resource.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: >-
                            Enabled will toggle the creation of the OpenShift
                            Route.
                          type: boolean
                        labels:
                          description: >-
                            Labels is the map of labels to use for the Route
                            resource
                          type: object
                          additionalProperties:
                            type: string
                        path:
                          description: >-
                            Path the router watches for, to route traffic for to
                            the service.
                          type: string
                        tls:
                          description: >-
                            TLS provides the ability to configure certificates
                            and termination for the Route.
                          type: object
                          required:
                            - termination
                          properties:
                            caCertificate:
                              description: >-
                                caCertificate provides the cert authority
                                certificate contents
                              type: string
                            certificate:
                              description: certificate provides certificate contents
                              type: string
                            destinationCACertificate:
                              description: >-
                                destinationCACertificate provides the contents
                                of the ca certificate of the final destination. 
                                When using reencrypt termination this file
                                should be provided in order to have routers use
                                it for health checks on the secure connection.
                                If this field is not specified, the router may
                                provide its own destination CA and perform
                                hostname validation using the short service name
                                (service.namespace.svc), which allows
                                infrastructure generated certificates to
                                automatically verify.
                              type: string
                            insecureEdgeTerminationPolicy:
                              description: >-
                                insecureEdgeTerminationPolicy indicates the
                                desired behavior for insecure connections to a
                                route. While each router may make its own
                                decisions on which ports to expose, this is
                                normally port 80. 
                                 * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port.
                              type: string
                            key:
                              description: key provides key file contents
                              type: string
                            termination:
                              description: termination indicates termination type.
                              type: string
                        wildcardPolicy:
                          description: >-
                            WildcardPolicy if any for the route. Currently only
                            'Subdomain' or 'None' is allowed.
                          type: string
                    size:
                      description: >-
                        Size is the replica count for the Prometheus
                        StatefulSet.
                      type: integer
                      format: int32
                initialSSHKnownHosts:
                  description: >-
                    InitialSSHKnownHosts defines the SSH known hosts data upon
                    creation of the cluster for connecting Git repositories via
                    SSH.
                  type: object
                  properties:
                    excludedefaulthosts:
                      description: >-
                        ExcludeDefaultHosts describes whether you would like to
                        include the default list of SSH Known Hosts provided by
                        ArgoCD.
                      type: boolean
                    keys:
                      description: >-
                        Keys describes a custom set of SSH Known Hosts that you
                        would like to have included in your ArgoCD server.
                      type: string
                gaTrackingID:
                  description: GATrackingID is the google analytics tracking ID to use.
                  type: string
                initialRepositories:
                  description: >-
                    InitialRepositories to configure Argo CD with upon creation
                    of the cluster.
                  type: string
                banner:
                  description: >-
                    Banner defines an additional banner to be displayed in Argo
                    CD UI
                  type: object
                  required:
                    - content
                  properties:
                    content:
                      description: Content defines the banner message content to display
                      type: string
                    url:
                      description: >-
                        URL defines an optional URL to be used as banner message
                        link
                      type: string
                resourceCustomizations:
                  description: >-
                    Deprecated field. Support dropped in v1beta1 version.
                    ResourceCustomizations customizes resource behavior. Keys
                    are in the form: group/Kind. Please note that this is being
                    deprecated in favor of ResourceHealthChecks,
                    ResourceIgnoreDifferences, and ResourceActions.
                  type: string
                gaAnonymizeUsers:
                  description: >-
                    GAAnonymizeUsers toggles user IDs being hashed before
                    sending to google analytics.
                  type: boolean
                resourceActions:
                  description: ResourceActions customizes resource action behavior.
                  type: array
                  items:
                    description: Resource Customization for custom action
                    type: object
                    properties:
                      action:
                        type: string
                      group:
                        type: string
                      kind:
                        type: string
                sso:
                  description: SSO defines the Single Sign-on configuration for Argo CD
                  type: object
                  properties:
                    dex:
                      description: >-
                        Dex contains the configuration for Argo CD dex
                        authentication
                      type: object
                      properties:
                        config:
                          description: Config is the dex connector configuration.
                          type: string
                        groups:
                          description: >-
                            Optional list of required groups a user must be a
                            member of
                          type: array
                          items:
                            type: string
                        image:
                          description: Image is the Dex container image.
                          type: string
                        openShiftOAuth:
                          description: >-
                            OpenShiftOAuth enables OpenShift OAuth
                            authentication for the Dex server.
                          type: boolean
                        resources:
                          description: >-
                            Resources defines the Compute Resources required by
                            the container for Dex.
                          type: object
                          properties:
                            claims:
                              description: >-
                                Claims lists the names of resources, defined in
                                spec.resourceClaims, that are used by this
                                container. 
                                 This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                                 This field is immutable. It can only be set for containers.
                              type: array
                              items:
                                description: >-
                                  ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                type: object
                                required:
                                  - name
                                properties:
                                  name:
                                    description: >-
                                      Name must match the name of one entry in
                                      pod.spec.resourceClaims of the Pod where
                                      this field is used. It makes that resource
                                      available inside a container.
                                    type: string
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              description: >-
                                Limits describes the maximum amount of compute
                                resources allowed. More info:
                                https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                              additionalProperties:
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                anyOf:
                                  - type: integer
                                  - type: string
                                x-kubernetes-int-or-string: true
                            requests:
                              description: >-
                                Requests describes the minimum amount of compute
                                resources required. If Requests is omitted for a
                                container, it defaults to Limits if that is
                                explicitly specified, otherwise to an
                                implementation-defined value. Requests cannot
                                exceed Limits. More info:
                                https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                              additionalProperties:
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                anyOf:
                                  - type: integer
                                  - type: string
                                x-kubernetes-int-or-string: true
                        version:
                          description: Version is the Dex container image tag.
                          type: string
                    image:
                      description: >-
                        Deprecated field. Support dropped in v1beta1 version.
                        Image is the SSO container image.
                      type: string
                    keycloak:
                      description: >-
                        Keycloak contains the configuration for Argo CD keycloak
                        authentication
                      type: object
                      properties:
                        image:
                          description: Image is the Keycloak container image.
                          type: string
                        resources:
                          description: >-
                            Resources defines the Compute Resources required by
                            the container for Keycloak.
                          type: object
                          properties:
                            claims:
                              description: >-
                                Claims lists the names of resources, defined in
                                spec.resourceClaims, that are used by this
                                container. 
                                 This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                                 This field is immutable. It can only be set for containers.
                              type: array
                              items:
                                description: >-
                                  ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                type: object
                                required:
                                  - name
                                properties:
                                  name:
                                    description: >-
                                      Name must match the name of one entry in
                                      pod.spec.resourceClaims of the Pod where
                                      this field is used. It makes that resource
                                      available inside a container.
                                    type: string
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              description: >-
                                Limits describes the maximum amount of compute
                                resources allowed. More info:
                                https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                              additionalProperties:
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                anyOf:
                                  - type: integer
                                  - type: string
                                x-kubernetes-int-or-string: true
                            requests:
                              description: >-
                                Requests describes the minimum amount of compute
                                resources required. If Requests is omitted for a
                                container, it defaults to Limits if that is
                                explicitly specified, otherwise to an
                                implementation-defined value. Requests cannot
                                exceed Limits. More info:
                                https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                              additionalProperties:
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                anyOf:
                                  - type: integer
                                  - type: string
                                x-kubernetes-int-or-string: true
                        rootCA:
                          description: >-
                            Custom root CA certificate for communicating with
                            the Keycloak OIDC provider
                          type: string
                        verifyTLS:
                          description: >-
                            VerifyTLS set to false disables strict TLS
                            validation.
                          type: boolean
                        version:
                          description: Version is the Keycloak container image tag.
                          type: string
                    provider:
                      description: >-
                        Provider installs and configures the given SSO Provider
                        with Argo CD.
                      type: string
                    resources:
                      description: >-
                        Deprecated field. Support dropped in v1beta1 version.
                        Resources defines the Compute Resources required by the
                        container for SSO.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    verifyTLS:
                      description: >-
                        Deprecated field. Support dropped in v1beta1 version.
                        VerifyTLS set to false disables strict TLS validation.
                      type: boolean
                    version:
                      description: >-
                        Deprecated field. Support dropped in v1beta1 version.
                        Version is the SSO container image tag.
                      type: string
                statusBadgeEnabled:
                  description: StatusBadgeEnabled toggles application status badge feature.
                  type: boolean
                applicationInstanceLabelKey:
                  description: >-
                    ApplicationInstanceLabelKey is the key name where Argo CD
                    injects the app name as a tracking label.
                  type: string
                applicationSet:
                  description: >-
                    ArgoCDApplicationSet defines whether the Argo CD
                    ApplicationSet controller should be installed.
                  type: object
                  properties:
                    env:
                      description: >-
                        Env lets you specify environment for applicationSet
                        controller pods
                      type: array
                      items:
                        description: >-
                          EnvVar represents an environment variable present in a
                          Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: >-
                              Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: >-
                              Variable references $(VAR_NAME) are expanded using
                              the previously defined environment variables in
                              the container and any service environment
                              variables. If a variable cannot be resolved, the
                              reference in the input string will be unchanged.
                              Double $$ are reduced to a single $, which allows
                              for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal
                              "$(VAR_NAME)". Escaped references will never be
                              expanded, regardless of whether the variable
                              exists or not. Defaults to "".
                            type: string
                          valueFrom:
                            description: >-
                              Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the ConfigMap or its key
                                      must be defined
                                    type: boolean
                              fieldRef:
                                description: >-
                                  Selects a field of the pod: supports
                                  metadata.name, metadata.namespace,
                                  `metadata.labels['<KEY>']`,
                                  `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP, status.podIPs.
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: >-
                                      Version of the schema the FieldPath is
                                      written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: >-
                                      Path of the field to select in the
                                      specified API version.
                                    type: string
                              resourceFieldRef:
                                description: >-
                                  Selects a resource of the container: only
                                  resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage,
                                  requests.cpu, requests.memory and
                                  requests.ephemeral-storage) are currently
                                  supported.
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: >-
                                      Container name: required for volumes,
                                      optional for env vars
                                    type: string
                                  divisor:
                                    description: >-
                                      Specifies the output format of the exposed
                                      resources, defaults to "1"
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: >-
                                  Selects a key of a secret in the pod's
                                  namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: >-
                                      The key of the secret to select from. 
                                      Must be a valid secret key.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the Secret or its key must
                                      be defined
                                    type: boolean
                    extraCommandArgs:
                      description: >-
                        ExtraCommandArgs allows users to pass command line
                        arguments to ApplicationSet controller. They get added
                        to default command line arguments provided by the
                        operator. Please note that the command line arguments
                        provided as part of ExtraCommandArgs will not overwrite
                        the default command line arguments.
                      type: array
                      items:
                        type: string
                    image:
                      description: Image is the Argo CD ApplicationSet image (optional)
                      type: string
                    logLevel:
                      description: >-
                        LogLevel describes the log level that should be used by
                        the ApplicationSet controller. Defaults to
                        ArgoCDDefaultLogLevel if not set.  Valid options are
                        debug,info, error, and warn.
                      type: string
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for ApplicationSet.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    version:
                      description: >-
                        Version is the Argo CD ApplicationSet image tag.
                        (optional)
                      type: string
                    webhookServer:
                      description: >-
                        WebhookServerSpec defines the options for the
                        ApplicationSet Webhook Server component.
                      type: object
                      properties:
                        host:
                          description: >-
                            Host is the hostname to use for Ingress/Route
                            resources.
                          type: string
                        ingress:
                          description: >-
                            Ingress defines the desired state for an Ingress for
                            the Application set webhook component.
                          type: object
                          required:
                            - enabled
                          properties:
                            annotations:
                              description: >-
                                Annotations is the map of annotations to apply
                                to the Ingress.
                              type: object
                              additionalProperties:
                                type: string
                            enabled:
                              description: Enabled will toggle the creation of the Ingress.
                              type: boolean
                            ingressClassName:
                              description: IngressClassName for the Ingress resource.
                              type: string
                            path:
                              description: Path used for the Ingress resource.
                              type: string
                            tls:
                              description: >-
                                TLS configuration. Currently the Ingress only
                                supports a single TLS port, 443. If multiple
                                members of this list specify different hosts,
                                they will be multiplexed on the same port
                                according to the hostname specified through the
                                SNI TLS extension, if the ingress controller
                                fulfilling the ingress supports SNI.
                              type: array
                              items:
                                description: >-
                                  IngressTLS describes the transport layer
                                  security associated with an ingress.
                                type: object
                                properties:
                                  hosts:
                                    description: >-
                                      hosts is a list of hosts included in the
                                      TLS certificate. The values in this list
                                      must match the name/s used in the
                                      tlsSecret. Defaults to the wildcard host
                                      setting for the loadbalancer controller
                                      fulfilling this Ingress, if left
                                      unspecified.
                                    type: array
                                    items:
                                      type: string
                                    x-kubernetes-list-type: atomic
                                  secretName:
                                    description: >-
                                      secretName is the name of the secret used
                                      to terminate TLS traffic on port 443.
                                      Field is left optional to allow TLS
                                      routing based on SNI hostname alone. If
                                      the SNI host in a listener conflicts with
                                      the "Host" header field used by an
                                      IngressRule, the SNI host is used for
                                      termination and value of the "Host" header
                                      is used for routing.
                                    type: string
                        route:
                          description: >-
                            Route defines the desired state for an OpenShift
                            Route for the Application set webhook component.
                          type: object
                          required:
                            - enabled
                          properties:
                            annotations:
                              description: >-
                                Annotations is the map of annotations to use for
                                the Route resource.
                              type: object
                              additionalProperties:
                                type: string
                            enabled:
                              description: >-
                                Enabled will toggle the creation of the
                                OpenShift Route.
                              type: boolean
                            labels:
                              description: >-
                                Labels is the map of labels to use for the Route
                                resource
                              type: object
                              additionalProperties:
                                type: string
                            path:
                              description: >-
                                Path the router watches for, to route traffic
                                for to the service.
                              type: string
                            tls:
                              description: >-
                                TLS provides the ability to configure
                                certificates and termination for the Route.
                              type: object
                              required:
                                - termination
                              properties:
                                caCertificate:
                                  description: >-
                                    caCertificate provides the cert authority
                                    certificate contents
                                  type: string
                                certificate:
                                  description: certificate provides certificate contents
                                  type: string
                                destinationCACertificate:
                                  description: >-
                                    destinationCACertificate provides the
                                    contents of the ca certificate of the final
                                    destination.  When using reencrypt
                                    termination this file should be provided in
                                    order to have routers use it for health
                                    checks on the secure connection. If this
                                    field is not specified, the router may
                                    provide its own destination CA and perform
                                    hostname validation using the short service
                                    name (service.namespace.svc), which allows
                                    infrastructure generated certificates to
                                    automatically verify.
                                  type: string
                                insecureEdgeTerminationPolicy:
                                  description: >-
                                    insecureEdgeTerminationPolicy indicates the
                                    desired behavior for insecure connections to
                                    a route. While each router may make its own
                                    decisions on which ports to expose, this is
                                    normally port 80. 
                                     * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port.
                                  type: string
                                key:
                                  description: key provides key file contents
                                  type: string
                                termination:
                                  description: termination indicates termination type.
                                  type: string
                            wildcardPolicy:
                              description: >-
                                WildcardPolicy if any for the route. Currently
                                only 'Subdomain' or 'None' is allowed.
                              type: string
                repositoryCredentials:
                  description: >-
                    RepositoryCredentials are the Git pull credentials to
                    configure Argo CD with upon creation of the cluster.
                  type: string
                rbac:
                  description: RBAC defines the RBAC configuration for Argo CD.
                  type: object
                  properties:
                    defaultPolicy:
                      description: >-
                        DefaultPolicy is the name of the default role which Argo
                        CD will falls back to, when authorizing API requests
                        (optional). If omitted or empty, users may be still be
                        able to login, but will see no apps, projects, etc...
                      type: string
                    policy:
                      description: >-
                        Policy is CSV containing user-defined RBAC policies and
                        role definitions. Policy rules are in the form:   p,
                        subject, resource, action, object, effect Role
                        definitions and bindings are in the form:   g, subject,
                        inherited-subject See
                        https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md
                        for additional information.
                      type: string
                    policyMatcherMode:
                      description: >-
                        PolicyMatcherMode configures the matchers function mode
                        for casbin. There are two options for this, 'glob' for
                        glob matcher or 'regex' for regex matcher.
                      type: string
                    scopes:
                      description: >-
                        Scopes controls which OIDC scopes to examine during rbac
                        enforcement (in addition to `sub` scope). If omitted,
                        defaults to: '[groups]'.
                      type: string
                extraConfig:
                  description: >-
                    ExtraConfig can be used to add fields to Argo CD configmap
                    that are not supported by Argo CD CRD. 
                     Note: ExtraConfig takes precedence over Argo CD CRD. For example, A user sets `argocd.Spec.DisableAdmin` = true and also `a.Spec.ExtraConfig["admin.enabled"]` = true. In this case, operator updates Argo CD Configmap as follows -> argocd-cm.Data["admin.enabled"] = true.
                  type: object
                  additionalProperties:
                    type: string
                repo:
                  description: Repo defines the repo server options for Argo CD.
                  type: object
                  properties:
                    logLevel:
                      description: >-
                        LogLevel describes the log level that should be used by
                        the Repo Server. Defaults to ArgoCDDefaultLogLevel if
                        not set.  Valid options are debug, info, error, and
                        warn.
                      type: string
                    initContainers:
                      description: >-
                        InitContainers defines the list of initialization
                        containers for the repo server deployment
                      type: array
                      items:
                        description: >-
                          A single application container that you want to run
                          within a pod.
                        type: object
                        required:
                          - name
                        properties:
                          restartPolicy:
                            description: >-
                              RestartPolicy defines the restart behavior of
                              individual containers in a pod. This field may
                              only be set for init containers, and the only
                              allowed value is "Always". For non-init containers
                              or when this field is not specified, the restart
                              behavior is defined by the Pod's restart policy
                              and the container type. Setting the RestartPolicy
                              as "Always" for the init container will have the
                              following effect: this init container will be
                              continually restarted on exit until all regular
                              containers have terminated. Once all regular
                              containers have completed, all init containers
                              with restartPolicy "Always" will be shut down.
                              This lifecycle differs from normal init containers
                              and is often referred to as a "sidecar" container.
                              Although this init container still starts in the
                              init container sequence, it does not wait for the
                              container to complete before proceeding to the
                              next init container. Instead, the next init
                              container starts immediately after this init
                              container is started, or after any startupProbe
                              has successfully completed.
                            type: string
                          volumeDevices:
                            description: >-
                              volumeDevices is the list of block devices to be
                              used by the container.
                            type: array
                            items:
                              description: >-
                                volumeDevice describes a mapping of a raw block
                                device within a container.
                              type: object
                              required:
                                - devicePath
                                - name
                              properties:
                                devicePath:
                                  description: >-
                                    devicePath is the path inside of the
                                    container that the device will be mapped to.
                                  type: string
                                name:
                                  description: >-
                                    name must match the name of a
                                    persistentVolumeClaim in the pod
                                  type: string
                          resources:
                            description: >-
                              Compute Resources required by this container.
                              Cannot be updated. More info:
                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                            properties:
                              claims:
                                description: >-
                                  Claims lists the names of resources, defined
                                  in spec.resourceClaims, that are used by this
                                  container. 
                                   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                                   This field is immutable. It can only be set for containers.
                                type: array
                                items:
                                  description: >-
                                    ResourceClaim references one entry in
                                    PodSpec.ResourceClaims.
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      description: >-
                                        Name must match the name of one entry in
                                        pod.spec.resourceClaims of the Pod where
                                        this field is used. It makes that
                                        resource available inside a container.
                                      type: string
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                              limits:
                                description: >-
                                  Limits describes the maximum amount of compute
                                  resources allowed. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                                additionalProperties:
                                  pattern: >-
                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  x-kubernetes-int-or-string: true
                              requests:
                                description: >-
                                  Requests describes the minimum amount of
                                  compute resources required. If Requests is
                                  omitted for a container, it defaults to Limits
                                  if that is explicitly specified, otherwise to
                                  an implementation-defined value. Requests
                                  cannot exceed Limits. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                                additionalProperties:
                                  pattern: >-
                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  x-kubernetes-int-or-string: true
                          resizePolicy:
                            description: Resources resize policy for the container.
                            type: array
                            items:
                              description: >-
                                ContainerResizePolicy represents resource resize
                                policy for the container.
                              type: object
                              required:
                                - resourceName
                                - restartPolicy
                              properties:
                                resourceName:
                                  description: >-
                                    Name of the resource to which this resource
                                    resize policy applies. Supported values:
                                    cpu, memory.
                                  type: string
                                restartPolicy:
                                  description: >-
                                    Restart policy to apply when specified
                                    resource is resized. If not specified, it
                                    defaults to NotRequired.
                                  type: string
                            x-kubernetes-list-type: atomic
                          readinessProbe:
                            description: >-
                              Periodic probe of container service readiness.
                              Container will be removed from service endpoints
                              if the probe fails. Cannot be updated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            type: object
                            properties:
                              initialDelaySeconds:
                                description: >-
                                  Number of seconds after the container has
                                  started before liveness probes are initiated.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                              failureThreshold:
                                description: >-
                                  Minimum consecutive failures for the probe to
                                  be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                type: integer
                                format: int32
                              successThreshold:
                                description: >-
                                  Minimum consecutive successes for the probe to
                                  be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and
                                  startup. Minimum value is 1.
                                type: integer
                                format: int32
                              terminationGracePeriodSeconds:
                                description: >-
                                  Optional duration in seconds the pod needs to
                                  terminate gracefully upon probe failure. The
                                  grace period is the duration in seconds after
                                  the processes running in the pod are sent a
                                  termination signal and the time when the
                                  processes are forcibly halted with a kill
                                  signal. Set this value longer than the
                                  expected cleanup time for your process. If
                                  this value is nil, the pod's
                                  terminationGracePeriodSeconds will be used.
                                  Otherwise, this value overrides the value
                                  provided by the pod spec. Value must be
                                  non-negative integer. The value zero indicates
                                  stop immediately via the kill signal (no
                                  opportunity to shut down). This is a beta
                                  field and requires enabling
                                  ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1.
                                  spec.terminationGracePeriodSeconds is used if
                                  unset.
                                type: integer
                                format: int64
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Host name to connect to, defaults to the
                                      pod IP. You probably want to set "Host" in
                                      httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: >-
                                      Custom headers to set in the request. HTTP
                                      allows repeated headers.
                                    type: array
                                    items:
                                      description: >-
                                        HTTPHeader describes a custom header to
                                        be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: >-
                                            The header field name. This will be
                                            canonicalized upon output, so
                                            case-variant names will be understood as
                                            the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: >-
                                      Name or number of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: >-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: >-
                                      Command is the command line to execute
                                      inside the container, the working
                                      directory for the command  is root ('/')
                                      in the container's filesystem. The command
                                      is simply exec'd, it is not run inside a
                                      shell, so traditional shell instructions
                                      ('|', etc) won't work. To use a shell, you
                                      need to explicitly call out to that shell.
                                      Exit status of 0 is treated as
                                      live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              tcpSocket:
                                description: >-
                                  TCPSocket specifies an action involving a TCP
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Optional: Host name to connect to,
                                      defaults to the pod IP.
                                    type: string
                                  port:
                                    description: >-
                                      Number or name of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                              grpc:
                                description: >-
                                  GRPC specifies an action involving a GRPC
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    description: >-
                                      Port number of the gRPC service. Number
                                      must be in the range 1 to 65535.
                                    type: integer
                                    format: int32
                                  service:
                                    description: >-
                                      Service is the name of the service to
                                      place in the gRPC HealthCheckRequest (see
                                      https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
                                       If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                              periodSeconds:
                                description: >-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                type: integer
                                format: int32
                              timeoutSeconds:
                                description: >-
                                  Number of seconds after which the probe times
                                  out. Defaults to 1 second. Minimum value is 1.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                          stdin:
                            description: >-
                              Whether this container should allocate a buffer
                              for stdin in the container runtime. If this is not
                              set, reads from stdin in the container will always
                              result in EOF. Default is false.
                            type: boolean
                          terminationMessagePath:
                            description: >-
                              Optional: Path at which the file to which the
                              container's termination message will be written is
                              mounted into the container's filesystem. Message
                              written is intended to be brief final status, such
                              as an assertion failure message. Will be truncated
                              by the node if greater than 4096 bytes. The total
                              message length across all containers will be
                              limited to 12kb. Defaults to /dev/termination-log.
                              Cannot be updated.
                            type: string
                          stdinOnce:
                            description: >-
                              Whether the container runtime should close the
                              stdin channel after it has been opened by a single
                              attach. When stdin is true the stdin stream will
                              remain open across multiple attach sessions. If
                              stdinOnce is set to true, stdin is opened on
                              container start, is empty until the first client
                              attaches to stdin, and then remains open and
                              accepts data until the client disconnects, at
                              which time stdin is closed and remains closed
                              until the container is restarted. If this flag is
                              false, a container processes that reads from stdin
                              will never receive an EOF. Default is false
                            type: boolean
                          lifecycle:
                            description: >-
                              Actions that the management system should take in
                              response to container lifecycle events. Cannot be
                              updated.
                            type: object
                            properties:
                              postStart:
                                description: >-
                                  PostStart is called immediately after a
                                  container is created. If the handler fails,
                                  the container is terminated and restarted
                                  according to its restart policy. Other
                                  management of the container blocks until the
                                  hook completes. More info:
                                  https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                type: object
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: >-
                                          Command is the command line to execute
                                          inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The
                                          command is simply exec'd, it is not run
                                          inside a shell, so traditional shell
                                          instructions ('|', etc) won't work. To
                                          use a shell, you need to explicitly call
                                          out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is
                                          unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    description: >-
                                      HTTPGet specifies the http request to
                                      perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Host name to connect to, defaults to the
                                          pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: >-
                                          Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: >-
                                            HTTPHeader describes a custom header to
                                            be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: >-
                                                The header field name. This will be
                                                canonicalized upon output, so
                                                case-variant names will be understood as
                                                the same header.
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: >-
                                          Name or number of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: >-
                                          Scheme to use for connecting to the
                                          host. Defaults to HTTP.
                                        type: string
                                  tcpSocket:
                                    description: >-
                                      Deprecated. TCPSocket is NOT supported as
                                      a LifecycleHandler and kept for the
                                      backward compatibility. There are no
                                      validation of this field and lifecycle
                                      hooks will fail in runtime when tcp
                                      handler is specified.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Optional: Host name to connect to,
                                          defaults to the pod IP.
                                        type: string
                                      port:
                                        description: >-
                                          Number or name of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                              preStop:
                                description: >-
                                  PreStop is called immediately before a
                                  container is terminated due to an API request
                                  or management event such as liveness/startup
                                  probe failure, preemption, resource
                                  contention, etc. The handler is not called if
                                  the container crashes or exits. The Pod's
                                  termination grace period countdown begins
                                  before the PreStop hook is executed.
                                  Regardless of the outcome of the handler, the
                                  container will eventually terminate within the
                                  Pod's termination grace period (unless delayed
                                  by finalizers). Other management of the
                                  container blocks until the hook completes or
                                  until the termination grace period is reached.
                                  More info:
                                  https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                type: object
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: >-
                                          Command is the command line to execute
                                          inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The
                                          command is simply exec'd, it is not run
                                          inside a shell, so traditional shell
                                          instructions ('|', etc) won't work. To
                                          use a shell, you need to explicitly call
                                          out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is
                                          unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    description: >-
                                      HTTPGet specifies the http request to
                                      perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Host name to connect to, defaults to the
                                          pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: >-
                                          Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: >-
                                            HTTPHeader describes a custom header to
                                            be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: >-
                                                The header field name. This will be
                                                canonicalized upon output, so
                                                case-variant names will be understood as
                                                the same header.
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: >-
                                          Name or number of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: >-
                                          Scheme to use for connecting to the
                                          host. Defaults to HTTP.
                                        type: string
                                  tcpSocket:
                                    description: >-
                                      Deprecated. TCPSocket is NOT supported as
                                      a LifecycleHandler and kept for the
                                      backward compatibility. There are no
                                      validation of this field and lifecycle
                                      hooks will fail in runtime when tcp
                                      handler is specified.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Optional: Host name to connect to,
                                          defaults to the pod IP.
                                        type: string
                                      port:
                                        description: >-
                                          Number or name of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                          name:
                            description: >-
                              Name of the container specified as a DNS_LABEL.
                              Each container in a pod must have a unique name
                              (DNS_LABEL). Cannot be updated.
                            type: string
                          command:
                            description: >-
                              Entrypoint array. Not executed within a shell. The
                              container image's ENTRYPOINT is used if this is
                              not provided. Variable references $(VAR_NAME) are
                              expanded using the container's environment. If a
                              variable cannot be resolved, the reference in the
                              input string will be unchanged. Double $$ are
                              reduced to a single $, which allows for escaping
                              the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                              produce the string literal "$(VAR_NAME)". Escaped
                              references will never be expanded, regardless of
                              whether the variable exists or not. Cannot be
                              updated. More info:
                              https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                            type: array
                            items:
                              type: string
                          livenessProbe:
                            description: >-
                              Periodic probe of container liveness. Container
                              will be restarted if the probe fails. Cannot be
                              updated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            type: object
                            properties:
                              initialDelaySeconds:
                                description: >-
                                  Number of seconds after the container has
                                  started before liveness probes are initiated.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                              failureThreshold:
                                description: >-
                                  Minimum consecutive failures for the probe to
                                  be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                type: integer
                                format: int32
                              successThreshold:
                                description: >-
                                  Minimum consecutive successes for the probe to
                                  be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and
                                  startup. Minimum value is 1.
                                type: integer
                                format: int32
                              terminationGracePeriodSeconds:
                                description: >-
                                  Optional duration in seconds the pod needs to
                                  terminate gracefully upon probe failure. The
                                  grace period is the duration in seconds after
                                  the processes running in the pod are sent a
                                  termination signal and the time when the
                                  processes are forcibly halted with a kill
                                  signal. Set this value longer than the
                                  expected cleanup time for your process. If
                                  this value is nil, the pod's
                                  terminationGracePeriodSeconds will be used.
                                  Otherwise, this value overrides the value
                                  provided by the pod spec. Value must be
                                  non-negative integer. The value zero indicates
                                  stop immediately via the kill signal (no
                                  opportunity to shut down). This is a beta
                                  field and requires enabling
                                  ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1.
                                  spec.terminationGracePeriodSeconds is used if
                                  unset.
                                type: integer
                                format: int64
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Host name to connect to, defaults to the
                                      pod IP. You probably want to set "Host" in
                                      httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: >-
                                      Custom headers to set in the request. HTTP
                                      allows repeated headers.
                                    type: array
                                    items:
                                      description: >-
                                        HTTPHeader describes a custom header to
                                        be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: >-
                                            The header field name. This will be
                                            canonicalized upon output, so
                                            case-variant names will be understood as
                                            the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: >-
                                      Name or number of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: >-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: >-
                                      Command is the command line to execute
                                      inside the container, the working
                                      directory for the command  is root ('/')
                                      in the container's filesystem. The command
                                      is simply exec'd, it is not run inside a
                                      shell, so traditional shell instructions
                                      ('|', etc) won't work. To use a shell, you
                                      need to explicitly call out to that shell.
                                      Exit status of 0 is treated as
                                      live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              tcpSocket:
                                description: >-
                                  TCPSocket specifies an action involving a TCP
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Optional: Host name to connect to,
                                      defaults to the pod IP.
                                    type: string
                                  port:
                                    description: >-
                                      Number or name of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                              grpc:
                                description: >-
                                  GRPC specifies an action involving a GRPC
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    description: >-
                                      Port number of the gRPC service. Number
                                      must be in the range 1 to 65535.
                                    type: integer
                                    format: int32
                                  service:
                                    description: >-
                                      Service is the name of the service to
                                      place in the gRPC HealthCheckRequest (see
                                      https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
                                       If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                              periodSeconds:
                                description: >-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                type: integer
                                format: int32
                              timeoutSeconds:
                                description: >-
                                  Number of seconds after which the probe times
                                  out. Defaults to 1 second. Minimum value is 1.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                          env:
                            description: >-
                              List of environment variables to set in the
                              container. Cannot be updated.
                            type: array
                            items:
                              description: >-
                                EnvVar represents an environment variable
                                present in a Container.
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  description: >-
                                    Name of the environment variable. Must be a
                                    C_IDENTIFIER.
                                  type: string
                                value:
                                  description: >-
                                    Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment
                                    variables in the container and any service
                                    environment variables. If a variable cannot
                                    be resolved, the reference in the input
                                    string will be unchanged. Double $$ are
                                    reduced to a single $, which allows for
                                    escaping the $(VAR_NAME) syntax: i.e.
                                    "$$(VAR_NAME)" will produce the string
                                    literal "$(VAR_NAME)". Escaped references
                                    will never be expanded, regardless of
                                    whether the variable exists or not. Defaults
                                    to "".
                                  type: string
                                valueFrom:
                                  description: >-
                                    Source for the environment variable's value.
                                    Cannot be used if value is not empty.
                                  type: object
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: >-
                                            Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields.
                                            apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: >-
                                            Specify whether the ConfigMap or its key
                                            must be defined
                                          type: boolean
                                    fieldRef:
                                      description: >-
                                        Selects a field of the pod: supports
                                        metadata.name, metadata.namespace,
                                        `metadata.labels['<KEY>']`,
                                        `metadata.annotations['<KEY>']`,
                                        spec.nodeName, spec.serviceAccountName,
                                        status.hostIP, status.podIP,
                                        status.podIPs.
                                      type: object
                                      required:
                                        - fieldPath
                                      properties:
                                        apiVersion:
                                          description: >-
                                            Version of the schema the FieldPath is
                                            written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: >-
                                            Path of the field to select in the
                                            specified API version.
                                          type: string
                                    resourceFieldRef:
                                      description: >-
                                        Selects a resource of the container:
                                        only resources limits and requests
                                        (limits.cpu, limits.memory,
                                        limits.ephemeral-storage, requests.cpu,
                                        requests.memory and
                                        requests.ephemeral-storage) are
                                        currently supported.
                                      type: object
                                      required:
                                        - resource
                                      properties:
                                        containerName:
                                          description: >-
                                            Container name: required for volumes,
                                            optional for env vars
                                          type: string
                                        divisor:
                                          description: >-
                                            Specifies the output format of the
                                            exposed resources, defaults to "1"
                                          pattern: >-
                                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                    secretKeyRef:
                                      description: >-
                                        Selects a key of a secret in the pod's
                                        namespace
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          description: >-
                                            The key of the secret to select from. 
                                            Must be a valid secret key.
                                          type: string
                                        name:
                                          description: >-
                                            Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields.
                                            apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: >-
                                            Specify whether the Secret or its key
                                            must be defined
                                          type: boolean
                          securityContext:
                            description: >-
                              SecurityContext defines the security options the
                              container should be run with. If set, the fields
                              of SecurityContext override the equivalent fields
                              of PodSecurityContext. More info:
                              https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                            type: object
                            properties:
                              runAsGroup:
                                description: >-
                                  The GID to run the entrypoint of the container
                                  process. Uses runtime default if unset. May
                                  also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is windows.
                                type: integer
                                format: int64
                              procMount:
                                description: >-
                                  procMount denotes the type of proc mount to
                                  use for the containers. The default is
                                  DefaultProcMount which uses the container
                                  runtime defaults for readonly paths and masked
                                  paths. This requires the ProcMountType feature
                                  flag to be enabled. Note that this field
                                  cannot be set when spec.os.name is windows.
                                type: string
                              runAsUser:
                                description: >-
                                  The UID to run the entrypoint of the container
                                  process. Defaults to user specified in image
                                  metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is windows.
                                type: integer
                                format: int64
                              seccompProfile:
                                description: >-
                                  The seccomp options to use by this container.
                                  If seccomp options are provided at both the
                                  pod & container level, the container options
                                  override the pod options. Note that this field
                                  cannot be set when spec.os.name is windows.
                                type: object
                                required:
                                  - type
                                properties:
                                  localhostProfile:
                                    description: >-
                                      localhostProfile indicates a profile
                                      defined in a file on the node should be
                                      used. The profile must be preconfigured on
                                      the node to work. Must be a descending
                                      path, relative to the kubelet's configured
                                      seccomp profile location. Must be set if
                                      type is "Localhost". Must NOT be set for
                                      any other type.
                                    type: string
                                  type:
                                    description: >-
                                      type indicates which kind of seccomp
                                      profile will be applied. Valid options
                                      are: 
                                       Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                                    type: string
                              readOnlyRootFilesystem:
                                description: >-
                                  Whether this container has a read-only root
                                  filesystem. Default is false. Note that this
                                  field cannot be set when spec.os.name is
                                  windows.
                                type: boolean
                              runAsNonRoot:
                                description: >-
                                  Indicates that the container must run as a
                                  non-root user. If true, the Kubelet will
                                  validate the image at runtime to ensure that
                                  it does not run as UID 0 (root) and fail to
                                  start the container if it does. If unset or
                                  false, no such validation will be performed.
                                  May also be set in PodSecurityContext.  If set
                                  in both SecurityContext and
                                  PodSecurityContext, the value specified in
                                  SecurityContext takes precedence.
                                type: boolean
                              privileged:
                                description: >-
                                  Run container in privileged mode. Processes in
                                  privileged containers are essentially
                                  equivalent to root on the host. Defaults to
                                  false. Note that this field cannot be set when
                                  spec.os.name is windows.
                                type: boolean
                              capabilities:
                                description: >-
                                  The capabilities to add/drop when running
                                  containers. Defaults to the default set of
                                  capabilities granted by the container runtime.
                                  Note that this field cannot be set when
                                  spec.os.name is windows.
                                type: object
                                properties:
                                  add:
                                    description: Added capabilities
                                    type: array
                                    items:
                                      description: >-
                                        Capability represent POSIX capabilities
                                        type
                                      type: string
                                  drop:
                                    description: Removed capabilities
                                    type: array
                                    items:
                                      description: >-
                                        Capability represent POSIX capabilities
                                        type
                                      type: string
                              windowsOptions:
                                description: >-
                                  The Windows specific settings applied to all
                                  containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in
                                  both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is linux.
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    description: >-
                                      GMSACredentialSpec is where the GMSA
                                      admission webhook
                                      (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA
                                      credential spec named by the
                                      GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: >-
                                      GMSACredentialSpecName is the name of the
                                      GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: >-
                                      HostProcess determines if a container
                                      should be run as a 'Host Process'
                                      container. All of a Pod's containers must
                                      have the same effective HostProcess value
                                      (it is not allowed to have a mix of
                                      HostProcess containers and non-HostProcess
                                      containers). In addition, if HostProcess
                                      is true then HostNetwork must also be set
                                      to true.
                                    type: boolean
                                  runAsUserName:
                                    description: >-
                                      The UserName in Windows to run the
                                      entrypoint of the container process.
                                      Defaults to the user specified in image
                                      metadata if unspecified. May also be set
                                      in PodSecurityContext. If set in both
                                      SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext
                                      takes precedence.
                                    type: string
                              seLinuxOptions:
                                description: >-
                                  The SELinux context to be applied to the
                                  container. If unspecified, the container
                                  runtime will allocate a random SELinux context
                                  for each container.  May also be set in
                                  PodSecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is windows.
                                type: object
                                properties:
                                  level:
                                    description: >-
                                      Level is SELinux level label that applies
                                      to the container.
                                    type: string
                                  role:
                                    description: >-
                                      Role is a SELinux role label that applies
                                      to the container.
                                    type: string
                                  type:
                                    description: >-
                                      Type is a SELinux type label that applies
                                      to the container.
                                    type: string
                                  user:
                                    description: >-
                                      User is a SELinux user label that applies
                                      to the container.
                                    type: string
                              allowPrivilegeEscalation:
                                description: >-
                                  AllowPrivilegeEscalation controls whether a
                                  process can gain more privileges than its
                                  parent process. This bool directly controls if
                                  the no_new_privs flag will be set on the
                                  container process. AllowPrivilegeEscalation is
                                  true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN Note that this
                                  field cannot be set when spec.os.name is
                                  windows.
                                type: boolean
                          ports:
                            description: >-
                              List of ports to expose from the container. Not
                              specifying a port here DOES NOT prevent that port
                              from being exposed. Any port which is listening on
                              the default "0.0.0.0" address inside a container
                              will be accessible from the network. Modifying
                              this array with strategic merge patch may corrupt
                              the data. For more information See
                              https://github.com/kubernetes/kubernetes/issues/108255.
                              Cannot be updated.
                            type: array
                            items:
                              description: >-
                                ContainerPort represents a network port in a
                                single container.
                              type: object
                              required:
                                - containerPort
                              properties:
                                containerPort:
                                  description: >-
                                    Number of port to expose on the pod's IP
                                    address. This must be a valid port number, 0
                                    < x < 65536.
                                  type: integer
                                  format: int32
                                hostIP:
                                  description: What host IP to bind the external port to.
                                  type: string
                                hostPort:
                                  description: >-
                                    Number of port to expose on the host. If
                                    specified, this must be a valid port number,
                                    0 < x < 65536. If HostNetwork is specified,
                                    this must match ContainerPort. Most
                                    containers do not need this.
                                  type: integer
                                  format: int32
                                name:
                                  description: >-
                                    If specified, this must be an IANA_SVC_NAME
                                    and unique within the pod. Each named port
                                    in a pod must have a unique name. Name for
                                    the port that can be referred to by
                                    services.
                                  type: string
                                protocol:
                                  description: >-
                                    Protocol for port. Must be UDP, TCP, or
                                    SCTP. Defaults to "TCP".
                                  type: string
                                  default: TCP
                            x-kubernetes-list-map-keys:
                              - containerPort
                              - protocol
                            x-kubernetes-list-type: map
                          imagePullPolicy:
                            description: >-
                              Image pull policy. One of Always, Never,
                              IfNotPresent. Defaults to Always if :latest tag is
                              specified, or IfNotPresent otherwise. Cannot be
                              updated. More info:
                              https://kubernetes.io/docs/concepts/containers/images#updating-images
                            type: string
                          startupProbe:
                            description: >-
                              StartupProbe indicates that the Pod has
                              successfully initialized. If specified, no other
                              probes are executed until this completes
                              successfully. If this probe fails, the Pod will be
                              restarted, just as if the livenessProbe failed.
                              This can be used to provide different probe
                              parameters at the beginning of a Pod's lifecycle,
                              when it might take a long time to load data or
                              warm a cache, than during steady-state operation.
                              This cannot be updated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            type: object
                            properties:
                              initialDelaySeconds:
                                description: >-
                                  Number of seconds after the container has
                                  started before liveness probes are initiated.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                              failureThreshold:
                                description: >-
                                  Minimum consecutive failures for the probe to
                                  be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                type: integer
                                format: int32
                              successThreshold:
                                description: >-
                                  Minimum consecutive successes for the probe to
                                  be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and
                                  startup. Minimum value is 1.
                                type: integer
                                format: int32
                              terminationGracePeriodSeconds:
                                description: >-
                                  Optional duration in seconds the pod needs to
                                  terminate gracefully upon probe failure. The
                                  grace period is the duration in seconds after
                                  the processes running in the pod are sent a
                                  termination signal and the time when the
                                  processes are forcibly halted with a kill
                                  signal. Set this value longer than the
                                  expected cleanup time for your process. If
                                  this value is nil, the pod's
                                  terminationGracePeriodSeconds will be used.
                                  Otherwise, this value overrides the value
                                  provided by the pod spec. Value must be
                                  non-negative integer. The value zero indicates
                                  stop immediately via the kill signal (no
                                  opportunity to shut down). This is a beta
                                  field and requires enabling
                                  ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1.
                                  spec.terminationGracePeriodSeconds is used if
                                  unset.
                                type: integer
                                format: int64
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Host name to connect to, defaults to the
                                      pod IP. You probably want to set "Host" in
                                      httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: >-
                                      Custom headers to set in the request. HTTP
                                      allows repeated headers.
                                    type: array
                                    items:
                                      description: >-
                                        HTTPHeader describes a custom header to
                                        be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: >-
                                            The header field name. This will be
                                            canonicalized upon output, so
                                            case-variant names will be understood as
                                            the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: >-
                                      Name or number of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: >-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: >-
                                      Command is the command line to execute
                                      inside the container, the working
                                      directory for the command  is root ('/')
                                      in the container's filesystem. The command
                                      is simply exec'd, it is not run inside a
                                      shell, so traditional shell instructions
                                      ('|', etc) won't work. To use a shell, you
                                      need to explicitly call out to that shell.
                                      Exit status of 0 is treated as
                                      live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              tcpSocket:
                                description: >-
                                  TCPSocket specifies an action involving a TCP
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Optional: Host name to connect to,
                                      defaults to the pod IP.
                                    type: string
                                  port:
                                    description: >-
                                      Number or name of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                              grpc:
                                description: >-
                                  GRPC specifies an action involving a GRPC
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    description: >-
                                      Port number of the gRPC service. Number
                                      must be in the range 1 to 65535.
                                    type: integer
                                    format: int32
                                  service:
                                    description: >-
                                      Service is the name of the service to
                                      place in the gRPC HealthCheckRequest (see
                                      https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
                                       If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                              periodSeconds:
                                description: >-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                type: integer
                                format: int32
                              timeoutSeconds:
                                description: >-
                                  Number of seconds after which the probe times
                                  out. Defaults to 1 second. Minimum value is 1.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                          volumeMounts:
                            description: >-
                              Pod volumes to mount into the container's
                              filesystem. Cannot be updated.
                            type: array
                            items:
                              description: >-
                                VolumeMount describes a mounting of a Volume
                                within a container.
                              type: object
                              required:
                                - mountPath
                                - name
                              properties:
                                mountPath:
                                  description: >-
                                    Path within the container at which the
                                    volume should be mounted.  Must not contain
                                    ':'.
                                  type: string
                                mountPropagation:
                                  description: >-
                                    mountPropagation determines how mounts are
                                    propagated from the host to container and
                                    the other way around. When not set,
                                    MountPropagationNone is used. This field is
                                    beta in 1.10.
                                  type: string
                                name:
                                  description: This must match the Name of a Volume.
                                  type: string
                                readOnly:
                                  description: >-
                                    Mounted read-only if true, read-write
                                    otherwise (false or unspecified). Defaults
                                    to false.
                                  type: boolean
                                subPath:
                                  description: >-
                                    Path within the volume from which the
                                    container's volume should be mounted.
                                    Defaults to "" (volume's root).
                                  type: string
                                subPathExpr:
                                  description: >-
                                    Expanded path within the volume from which
                                    the container's volume should be mounted.
                                    Behaves similarly to SubPath but environment
                                    variable references $(VAR_NAME) are expanded
                                    using the container's environment. Defaults
                                    to "" (volume's root). SubPathExpr and
                                    SubPath are mutually exclusive.
                                  type: string
                          terminationMessagePolicy:
                            description: >-
                              Indicate how the termination message should be
                              populated. File will use the contents of
                              terminationMessagePath to populate the container
                              status message on both success and failure.
                              FallbackToLogsOnError will use the last chunk of
                              container log output if the termination message
                              file is empty and the container exited with an
                              error. The log output is limited to 2048 bytes or
                              80 lines, whichever is smaller. Defaults to File.
                              Cannot be updated.
                            type: string
                          envFrom:
                            description: >-
                              List of sources to populate environment variables
                              in the container. The keys defined within a source
                              must be a C_IDENTIFIER. All invalid keys will be
                              reported as an event when the container is
                              starting. When a key exists in multiple sources,
                              the value associated with the last source will
                              take precedence. Values defined by an Env with a
                              duplicate key will take precedence. Cannot be
                              updated.
                            type: array
                            items:
                              description: >-
                                EnvFromSource represents the source of a set of
                                ConfigMaps
                              type: object
                              properties:
                                configMapRef:
                                  description: The ConfigMap to select from
                                  type: object
                                  properties:
                                    name:
                                      description: >-
                                        Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields.
                                        apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: >-
                                        Specify whether the ConfigMap must be
                                        defined
                                      type: boolean
                                prefix:
                                  description: >-
                                    An optional identifier to prepend to each
                                    key in the ConfigMap. Must be a
                                    C_IDENTIFIER.
                                  type: string
                                secretRef:
                                  description: The Secret to select from
                                  type: object
                                  properties:
                                    name:
                                      description: >-
                                        Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields.
                                        apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: >-
                                        Specify whether the Secret must be
                                        defined
                                      type: boolean
                          tty:
                            description: >-
                              Whether this container should allocate a TTY for
                              itself, also requires 'stdin' to be true. Default
                              is false.
                            type: boolean
                          image:
                            description: >-
                              Container image name. More info:
                              https://kubernetes.io/docs/concepts/containers/images
                              This field is optional to allow higher level
                              config management to default or override container
                              images in workload controllers like Deployments
                              and StatefulSets.
                            type: string
                          workingDir:
                            description: >-
                              Container's working directory. If not specified,
                              the container runtime's default will be used,
                              which might be configured in the container image.
                              Cannot be updated.
                            type: string
                          args:
                            description: >-
                              Arguments to the entrypoint. The container image's
                              CMD is used if this is not provided. Variable
                              references $(VAR_NAME) are expanded using the
                              container's environment. If a variable cannot be
                              resolved, the reference in the input string will
                              be unchanged. Double $$ are reduced to a single $,
                              which allows for escaping the $(VAR_NAME) syntax:
                              i.e. "$$(VAR_NAME)" will produce the string
                              literal "$(VAR_NAME)". Escaped references will
                              never be expanded, regardless of whether the
                              variable exists or not. Cannot be updated. More
                              info:
                              https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                            type: array
                            items:
                              type: string
                    verifytls:
                      description: >-
                        VerifyTLS defines whether repo server API should be
                        accessed using strict TLS validation
                      type: boolean
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for Redis.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    extraRepoCommandArgs:
                      description: >-
                        Extra Command arguments allows users to pass command
                        line arguments to repo server workload. They get added
                        to default command line arguments provided by the
                        operator. Please note that the command line arguments
                        provided as part of ExtraRepoCommandArgs will not
                        overwrite the default command line arguments.
                      type: array
                      items:
                        type: string
                    autotls:
                      description: >-
                        AutoTLS specifies the method to use for automatic TLS
                        configuration for the repo server The value specified
                        here can currently be: - openshift - Use the OpenShift
                        service CA to request TLS config
                      type: string
                    env:
                      description: Env lets you specify environment for repo server pods
                      type: array
                      items:
                        description: >-
                          EnvVar represents an environment variable present in a
                          Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: >-
                              Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: >-
                              Variable references $(VAR_NAME) are expanded using
                              the previously defined environment variables in
                              the container and any service environment
                              variables. If a variable cannot be resolved, the
                              reference in the input string will be unchanged.
                              Double $$ are reduced to a single $, which allows
                              for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal
                              "$(VAR_NAME)". Escaped references will never be
                              expanded, regardless of whether the variable
                              exists or not. Defaults to "".
                            type: string
                          valueFrom:
                            description: >-
                              Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the ConfigMap or its key
                                      must be defined
                                    type: boolean
                              fieldRef:
                                description: >-
                                  Selects a field of the pod: supports
                                  metadata.name, metadata.namespace,
                                  `metadata.labels['<KEY>']`,
                                  `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP, status.podIPs.
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: >-
                                      Version of the schema the FieldPath is
                                      written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: >-
                                      Path of the field to select in the
                                      specified API version.
                                    type: string
                              resourceFieldRef:
                                description: >-
                                  Selects a resource of the container: only
                                  resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage,
                                  requests.cpu, requests.memory and
                                  requests.ephemeral-storage) are currently
                                  supported.
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: >-
                                      Container name: required for volumes,
                                      optional for env vars
                                    type: string
                                  divisor:
                                    description: >-
                                      Specifies the output format of the exposed
                                      resources, defaults to "1"
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: >-
                                  Selects a key of a secret in the pod's
                                  namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: >-
                                      The key of the secret to select from. 
                                      Must be a valid secret key.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the Secret or its key must
                                      be defined
                                    type: boolean
                    sidecarContainers:
                      description: >-
                        SidecarContainers defines the list of sidecar containers
                        for the repo server deployment
                      type: array
                      items:
                        description: >-
                          A single application container that you want to run
                          within a pod.
                        type: object
                        required:
                          - name
                        properties:
                          restartPolicy:
                            description: >-
                              RestartPolicy defines the restart behavior of
                              individual containers in a pod. This field may
                              only be set for init containers, and the only
                              allowed value is "Always". For non-init containers
                              or when this field is not specified, the restart
                              behavior is defined by the Pod's restart policy
                              and the container type. Setting the RestartPolicy
                              as "Always" for the init container will have the
                              following effect: this init container will be
                              continually restarted on exit until all regular
                              containers have terminated. Once all regular
                              containers have completed, all init containers
                              with restartPolicy "Always" will be shut down.
                              This lifecycle differs from normal init containers
                              and is often referred to as a "sidecar" container.
                              Although this init container still starts in the
                              init container sequence, it does not wait for the
                              container to complete before proceeding to the
                              next init container. Instead, the next init
                              container starts immediately after this init
                              container is started, or after any startupProbe
                              has successfully completed.
                            type: string
                          volumeDevices:
                            description: >-
                              volumeDevices is the list of block devices to be
                              used by the container.
                            type: array
                            items:
                              description: >-
                                volumeDevice describes a mapping of a raw block
                                device within a container.
                              type: object
                              required:
                                - devicePath
                                - name
                              properties:
                                devicePath:
                                  description: >-
                                    devicePath is the path inside of the
                                    container that the device will be mapped to.
                                  type: string
                                name:
                                  description: >-
                                    name must match the name of a
                                    persistentVolumeClaim in the pod
                                  type: string
                          resources:
                            description: >-
                              Compute Resources required by this container.
                              Cannot be updated. More info:
                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                            properties:
                              claims:
                                description: >-
                                  Claims lists the names of resources, defined
                                  in spec.resourceClaims, that are used by this
                                  container. 
                                   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                                   This field is immutable. It can only be set for containers.
                                type: array
                                items:
                                  description: >-
                                    ResourceClaim references one entry in
                                    PodSpec.ResourceClaims.
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      description: >-
                                        Name must match the name of one entry in
                                        pod.spec.resourceClaims of the Pod where
                                        this field is used. It makes that
                                        resource available inside a container.
                                      type: string
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                              limits:
                                description: >-
                                  Limits describes the maximum amount of compute
                                  resources allowed. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                                additionalProperties:
                                  pattern: >-
                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  x-kubernetes-int-or-string: true
                              requests:
                                description: >-
                                  Requests describes the minimum amount of
                                  compute resources required. If Requests is
                                  omitted for a container, it defaults to Limits
                                  if that is explicitly specified, otherwise to
                                  an implementation-defined value. Requests
                                  cannot exceed Limits. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                                additionalProperties:
                                  pattern: >-
                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  x-kubernetes-int-or-string: true
                          resizePolicy:
                            description: Resources resize policy for the container.
                            type: array
                            items:
                              description: >-
                                ContainerResizePolicy represents resource resize
                                policy for the container.
                              type: object
                              required:
                                - resourceName
                                - restartPolicy
                              properties:
                                resourceName:
                                  description: >-
                                    Name of the resource to which this resource
                                    resize policy applies. Supported values:
                                    cpu, memory.
                                  type: string
                                restartPolicy:
                                  description: >-
                                    Restart policy to apply when specified
                                    resource is resized. If not specified, it
                                    defaults to NotRequired.
                                  type: string
                            x-kubernetes-list-type: atomic
                          readinessProbe:
                            description: >-
                              Periodic probe of container service readiness.
                              Container will be removed from service endpoints
                              if the probe fails. Cannot be updated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            type: object
                            properties:
                              initialDelaySeconds:
                                description: >-
                                  Number of seconds after the container has
                                  started before liveness probes are initiated.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                              failureThreshold:
                                description: >-
                                  Minimum consecutive failures for the probe to
                                  be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                type: integer
                                format: int32
                              successThreshold:
                                description: >-
                                  Minimum consecutive successes for the probe to
                                  be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and
                                  startup. Minimum value is 1.
                                type: integer
                                format: int32
                              terminationGracePeriodSeconds:
                                description: >-
                                  Optional duration in seconds the pod needs to
                                  terminate gracefully upon probe failure. The
                                  grace period is the duration in seconds after
                                  the processes running in the pod are sent a
                                  termination signal and the time when the
                                  processes are forcibly halted with a kill
                                  signal. Set this value longer than the
                                  expected cleanup time for your process. If
                                  this value is nil, the pod's
                                  terminationGracePeriodSeconds will be used.
                                  Otherwise, this value overrides the value
                                  provided by the pod spec. Value must be
                                  non-negative integer. The value zero indicates
                                  stop immediately via the kill signal (no
                                  opportunity to shut down). This is a beta
                                  field and requires enabling
                                  ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1.
                                  spec.terminationGracePeriodSeconds is used if
                                  unset.
                                type: integer
                                format: int64
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Host name to connect to, defaults to the
                                      pod IP. You probably want to set "Host" in
                                      httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: >-
                                      Custom headers to set in the request. HTTP
                                      allows repeated headers.
                                    type: array
                                    items:
                                      description: >-
                                        HTTPHeader describes a custom header to
                                        be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: >-
                                            The header field name. This will be
                                            canonicalized upon output, so
                                            case-variant names will be understood as
                                            the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: >-
                                      Name or number of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: >-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: >-
                                      Command is the command line to execute
                                      inside the container, the working
                                      directory for the command  is root ('/')
                                      in the container's filesystem. The command
                                      is simply exec'd, it is not run inside a
                                      shell, so traditional shell instructions
                                      ('|', etc) won't work. To use a shell, you
                                      need to explicitly call out to that shell.
                                      Exit status of 0 is treated as
                                      live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              tcpSocket:
                                description: >-
                                  TCPSocket specifies an action involving a TCP
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Optional: Host name to connect to,
                                      defaults to the pod IP.
                                    type: string
                                  port:
                                    description: >-
                                      Number or name of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                              grpc:
                                description: >-
                                  GRPC specifies an action involving a GRPC
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    description: >-
                                      Port number of the gRPC service. Number
                                      must be in the range 1 to 65535.
                                    type: integer
                                    format: int32
                                  service:
                                    description: >-
                                      Service is the name of the service to
                                      place in the gRPC HealthCheckRequest (see
                                      https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
                                       If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                              periodSeconds:
                                description: >-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                type: integer
                                format: int32
                              timeoutSeconds:
                                description: >-
                                  Number of seconds after which the probe times
                                  out. Defaults to 1 second. Minimum value is 1.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                          stdin:
                            description: >-
                              Whether this container should allocate a buffer
                              for stdin in the container runtime. If this is not
                              set, reads from stdin in the container will always
                              result in EOF. Default is false.
                            type: boolean
                          terminationMessagePath:
                            description: >-
                              Optional: Path at which the file to which the
                              container's termination message will be written is
                              mounted into the container's filesystem. Message
                              written is intended to be brief final status, such
                              as an assertion failure message. Will be truncated
                              by the node if greater than 4096 bytes. The total
                              message length across all containers will be
                              limited to 12kb. Defaults to /dev/termination-log.
                              Cannot be updated.
                            type: string
                          stdinOnce:
                            description: >-
                              Whether the container runtime should close the
                              stdin channel after it has been opened by a single
                              attach. When stdin is true the stdin stream will
                              remain open across multiple attach sessions. If
                              stdinOnce is set to true, stdin is opened on
                              container start, is empty until the first client
                              attaches to stdin, and then remains open and
                              accepts data until the client disconnects, at
                              which time stdin is closed and remains closed
                              until the container is restarted. If this flag is
                              false, a container processes that reads from stdin
                              will never receive an EOF. Default is false
                            type: boolean
                          lifecycle:
                            description: >-
                              Actions that the management system should take in
                              response to container lifecycle events. Cannot be
                              updated.
                            type: object
                            properties:
                              postStart:
                                description: >-
                                  PostStart is called immediately after a
                                  container is created. If the handler fails,
                                  the container is terminated and restarted
                                  according to its restart policy. Other
                                  management of the container blocks until the
                                  hook completes. More info:
                                  https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                type: object
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: >-
                                          Command is the command line to execute
                                          inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The
                                          command is simply exec'd, it is not run
                                          inside a shell, so traditional shell
                                          instructions ('|', etc) won't work. To
                                          use a shell, you need to explicitly call
                                          out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is
                                          unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    description: >-
                                      HTTPGet specifies the http request to
                                      perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Host name to connect to, defaults to the
                                          pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: >-
                                          Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: >-
                                            HTTPHeader describes a custom header to
                                            be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: >-
                                                The header field name. This will be
                                                canonicalized upon output, so
                                                case-variant names will be understood as
                                                the same header.
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: >-
                                          Name or number of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: >-
                                          Scheme to use for connecting to the
                                          host. Defaults to HTTP.
                                        type: string
                                  tcpSocket:
                                    description: >-
                                      Deprecated. TCPSocket is NOT supported as
                                      a LifecycleHandler and kept for the
                                      backward compatibility. There are no
                                      validation of this field and lifecycle
                                      hooks will fail in runtime when tcp
                                      handler is specified.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Optional: Host name to connect to,
                                          defaults to the pod IP.
                                        type: string
                                      port:
                                        description: >-
                                          Number or name of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                              preStop:
                                description: >-
                                  PreStop is called immediately before a
                                  container is terminated due to an API request
                                  or management event such as liveness/startup
                                  probe failure, preemption, resource
                                  contention, etc. The handler is not called if
                                  the container crashes or exits. The Pod's
                                  termination grace period countdown begins
                                  before the PreStop hook is executed.
                                  Regardless of the outcome of the handler, the
                                  container will eventually terminate within the
                                  Pod's termination grace period (unless delayed
                                  by finalizers). Other management of the
                                  container blocks until the hook completes or
                                  until the termination grace period is reached.
                                  More info:
                                  https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                type: object
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: >-
                                          Command is the command line to execute
                                          inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The
                                          command is simply exec'd, it is not run
                                          inside a shell, so traditional shell
                                          instructions ('|', etc) won't work. To
                                          use a shell, you need to explicitly call
                                          out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is
                                          unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    description: >-
                                      HTTPGet specifies the http request to
                                      perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Host name to connect to, defaults to the
                                          pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: >-
                                          Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: >-
                                            HTTPHeader describes a custom header to
                                            be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: >-
                                                The header field name. This will be
                                                canonicalized upon output, so
                                                case-variant names will be understood as
                                                the same header.
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: >-
                                          Name or number of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: >-
                                          Scheme to use for connecting to the
                                          host. Defaults to HTTP.
                                        type: string
                                  tcpSocket:
                                    description: >-
                                      Deprecated. TCPSocket is NOT supported as
                                      a LifecycleHandler and kept for the
                                      backward compatibility. There are no
                                      validation of this field and lifecycle
                                      hooks will fail in runtime when tcp
                                      handler is specified.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Optional: Host name to connect to,
                                          defaults to the pod IP.
                                        type: string
                                      port:
                                        description: >-
                                          Number or name of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                          name:
                            description: >-
                              Name of the container specified as a DNS_LABEL.
                              Each container in a pod must have a unique name
                              (DNS_LABEL). Cannot be updated.
                            type: string
                          command:
                            description: >-
                              Entrypoint array. Not executed within a shell. The
                              container image's ENTRYPOINT is used if this is
                              not provided. Variable references $(VAR_NAME) are
                              expanded using the container's environment. If a
                              variable cannot be resolved, the reference in the
                              input string will be unchanged. Double $$ are
                              reduced to a single $, which allows for escaping
                              the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                              produce the string literal "$(VAR_NAME)". Escaped
                              references will never be expanded, regardless of
                              whether the variable exists or not. Cannot be
                              updated. More info:
                              https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                            type: array
                            items:
                              type: string
                          livenessProbe:
                            description: >-
                              Periodic probe of container liveness. Container
                              will be restarted if the probe fails. Cannot be
                              updated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            type: object
                            properties:
                              initialDelaySeconds:
                                description: >-
                                  Number of seconds after the container has
                                  started before liveness probes are initiated.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                              failureThreshold:
                                description: >-
                                  Minimum consecutive failures for the probe to
                                  be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                type: integer
                                format: int32
                              successThreshold:
                                description: >-
                                  Minimum consecutive successes for the probe to
                                  be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and
                                  startup. Minimum value is 1.
                                type: integer
                                format: int32
                              terminationGracePeriodSeconds:
                                description: >-
                                  Optional duration in seconds the pod needs to
                                  terminate gracefully upon probe failure. The
                                  grace period is the duration in seconds after
                                  the processes running in the pod are sent a
                                  termination signal and the time when the
                                  processes are forcibly halted with a kill
                                  signal. Set this value longer than the
                                  expected cleanup time for your process. If
                                  this value is nil, the pod's
                                  terminationGracePeriodSeconds will be used.
                                  Otherwise, this value overrides the value
                                  provided by the pod spec. Value must be
                                  non-negative integer. The value zero indicates
                                  stop immediately via the kill signal (no
                                  opportunity to shut down). This is a beta
                                  field and requires enabling
                                  ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1.
                                  spec.terminationGracePeriodSeconds is used if
                                  unset.
                                type: integer
                                format: int64
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Host name to connect to, defaults to the
                                      pod IP. You probably want to set "Host" in
                                      httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: >-
                                      Custom headers to set in the request. HTTP
                                      allows repeated headers.
                                    type: array
                                    items:
                                      description: >-
                                        HTTPHeader describes a custom header to
                                        be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: >-
                                            The header field name. This will be
                                            canonicalized upon output, so
                                            case-variant names will be understood as
                                            the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: >-
                                      Name or number of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: >-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: >-
                                      Command is the command line to execute
                                      inside the container, the working
                                      directory for the command  is root ('/')
                                      in the container's filesystem. The command
                                      is simply exec'd, it is not run inside a
                                      shell, so traditional shell instructions
                                      ('|', etc) won't work. To use a shell, you
                                      need to explicitly call out to that shell.
                                      Exit status of 0 is treated as
                                      live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              tcpSocket:
                                description: >-
                                  TCPSocket specifies an action involving a TCP
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Optional: Host name to connect to,
                                      defaults to the pod IP.
                                    type: string
                                  port:
                                    description: >-
                                      Number or name of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                              grpc:
                                description: >-
                                  GRPC specifies an action involving a GRPC
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    description: >-
                                      Port number of the gRPC service. Number
                                      must be in the range 1 to 65535.
                                    type: integer
                                    format: int32
                                  service:
                                    description: >-
                                      Service is the name of the service to
                                      place in the gRPC HealthCheckRequest (see
                                      https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
                                       If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                              periodSeconds:
                                description: >-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                type: integer
                                format: int32
                              timeoutSeconds:
                                description: >-
                                  Number of seconds after which the probe times
                                  out. Defaults to 1 second. Minimum value is 1.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                          env:
                            description: >-
                              List of environment variables to set in the
                              container. Cannot be updated.
                            type: array
                            items:
                              description: >-
                                EnvVar represents an environment variable
                                present in a Container.
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  description: >-
                                    Name of the environment variable. Must be a
                                    C_IDENTIFIER.
                                  type: string
                                value:
                                  description: >-
                                    Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment
                                    variables in the container and any service
                                    environment variables. If a variable cannot
                                    be resolved, the reference in the input
                                    string will be unchanged. Double $$ are
                                    reduced to a single $, which allows for
                                    escaping the $(VAR_NAME) syntax: i.e.
                                    "$$(VAR_NAME)" will produce the string
                                    literal "$(VAR_NAME)". Escaped references
                                    will never be expanded, regardless of
                                    whether the variable exists or not. Defaults
                                    to "".
                                  type: string
                                valueFrom:
                                  description: >-
                                    Source for the environment variable's value.
                                    Cannot be used if value is not empty.
                                  type: object
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: >-
                                            Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields.
                                            apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: >-
                                            Specify whether the ConfigMap or its key
                                            must be defined
                                          type: boolean
                                    fieldRef:
                                      description: >-
                                        Selects a field of the pod: supports
                                        metadata.name, metadata.namespace,
                                        `metadata.labels['<KEY>']`,
                                        `metadata.annotations['<KEY>']`,
                                        spec.nodeName, spec.serviceAccountName,
                                        status.hostIP, status.podIP,
                                        status.podIPs.
                                      type: object
                                      required:
                                        - fieldPath
                                      properties:
                                        apiVersion:
                                          description: >-
                                            Version of the schema the FieldPath is
                                            written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: >-
                                            Path of the field to select in the
                                            specified API version.
                                          type: string
                                    resourceFieldRef:
                                      description: >-
                                        Selects a resource of the container:
                                        only resources limits and requests
                                        (limits.cpu, limits.memory,
                                        limits.ephemeral-storage, requests.cpu,
                                        requests.memory and
                                        requests.ephemeral-storage) are
                                        currently supported.
                                      type: object
                                      required:
                                        - resource
                                      properties:
                                        containerName:
                                          description: >-
                                            Container name: required for volumes,
                                            optional for env vars
                                          type: string
                                        divisor:
                                          description: >-
                                            Specifies the output format of the
                                            exposed resources, defaults to "1"
                                          pattern: >-
                                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                    secretKeyRef:
                                      description: >-
                                        Selects a key of a secret in the pod's
                                        namespace
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          description: >-
                                            The key of the secret to select from. 
                                            Must be a valid secret key.
                                          type: string
                                        name:
                                          description: >-
                                            Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields.
                                            apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: >-
                                            Specify whether the Secret or its key
                                            must be defined
                                          type: boolean
                          securityContext:
                            description: >-
                              SecurityContext defines the security options the
                              container should be run with. If set, the fields
                              of SecurityContext override the equivalent fields
                              of PodSecurityContext. More info:
                              https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                            type: object
                            properties:
                              runAsGroup:
                                description: >-
                                  The GID to run the entrypoint of the container
                                  process. Uses runtime default if unset. May
                                  also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is windows.
                                type: integer
                                format: int64
                              procMount:
                                description: >-
                                  procMount denotes the type of proc mount to
                                  use for the containers. The default is
                                  DefaultProcMount which uses the container
                                  runtime defaults for readonly paths and masked
                                  paths. This requires the ProcMountType feature
                                  flag to be enabled. Note that this field
                                  cannot be set when spec.os.name is windows.
                                type: string
                              runAsUser:
                                description: >-
                                  The UID to run the entrypoint of the container
                                  process. Defaults to user specified in image
                                  metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is windows.
                                type: integer
                                format: int64
                              seccompProfile:
                                description: >-
                                  The seccomp options to use by this container.
                                  If seccomp options are provided at both the
                                  pod & container level, the container options
                                  override the pod options. Note that this field
                                  cannot be set when spec.os.name is windows.
                                type: object
                                required:
                                  - type
                                properties:
                                  localhostProfile:
                                    description: >-
                                      localhostProfile indicates a profile
                                      defined in a file on the node should be
                                      used. The profile must be preconfigured on
                                      the node to work. Must be a descending
                                      path, relative to the kubelet's configured
                                      seccomp profile location. Must be set if
                                      type is "Localhost". Must NOT be set for
                                      any other type.
                                    type: string
                                  type:
                                    description: >-
                                      type indicates which kind of seccomp
                                      profile will be applied. Valid options
                                      are: 
                                       Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                                    type: string
                              readOnlyRootFilesystem:
                                description: >-
                                  Whether this container has a read-only root
                                  filesystem. Default is false. Note that this
                                  field cannot be set when spec.os.name is
                                  windows.
                                type: boolean
                              runAsNonRoot:
                                description: >-
                                  Indicates that the container must run as a
                                  non-root user. If true, the Kubelet will
                                  validate the image at runtime to ensure that
                                  it does not run as UID 0 (root) and fail to
                                  start the container if it does. If unset or
                                  false, no such validation will be performed.
                                  May also be set in PodSecurityContext.  If set
                                  in both SecurityContext and
                                  PodSecurityContext, the value specified in
                                  SecurityContext takes precedence.
                                type: boolean
                              privileged:
                                description: >-
                                  Run container in privileged mode. Processes in
                                  privileged containers are essentially
                                  equivalent to root on the host. Defaults to
                                  false. Note that this field cannot be set when
                                  spec.os.name is windows.
                                type: boolean
                              capabilities:
                                description: >-
                                  The capabilities to add/drop when running
                                  containers. Defaults to the default set of
                                  capabilities granted by the container runtime.
                                  Note that this field cannot be set when
                                  spec.os.name is windows.
                                type: object
                                properties:
                                  add:
                                    description: Added capabilities
                                    type: array
                                    items:
                                      description: >-
                                        Capability represent POSIX capabilities
                                        type
                                      type: string
                                  drop:
                                    description: Removed capabilities
                                    type: array
                                    items:
                                      description: >-
                                        Capability represent POSIX capabilities
                                        type
                                      type: string
                              windowsOptions:
                                description: >-
                                  The Windows specific settings applied to all
                                  containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in
                                  both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is linux.
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    description: >-
                                      GMSACredentialSpec is where the GMSA
                                      admission webhook
                                      (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA
                                      credential spec named by the
                                      GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: >-
                                      GMSACredentialSpecName is the name of the
                                      GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: >-
                                      HostProcess determines if a container
                                      should be run as a 'Host Process'
                                      container. All of a Pod's containers must
                                      have the same effective HostProcess value
                                      (it is not allowed to have a mix of
                                      HostProcess containers and non-HostProcess
                                      containers). In addition, if HostProcess
                                      is true then HostNetwork must also be set
                                      to true.
                                    type: boolean
                                  runAsUserName:
                                    description: >-
                                      The UserName in Windows to run the
                                      entrypoint of the container process.
                                      Defaults to the user specified in image
                                      metadata if unspecified. May also be set
                                      in PodSecurityContext. If set in both
                                      SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext
                                      takes precedence.
                                    type: string
                              seLinuxOptions:
                                description: >-
                                  The SELinux context to be applied to the
                                  container. If unspecified, the container
                                  runtime will allocate a random SELinux context
                                  for each container.  May also be set in
                                  PodSecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is windows.
                                type: object
                                properties:
                                  level:
                                    description: >-
                                      Level is SELinux level label that applies
                                      to the container.
                                    type: string
                                  role:
                                    description: >-
                                      Role is a SELinux role label that applies
                                      to the container.
                                    type: string
                                  type:
                                    description: >-
                                      Type is a SELinux type label that applies
                                      to the container.
                                    type: string
                                  user:
                                    description: >-
                                      User is a SELinux user label that applies
                                      to the container.
                                    type: string
                              allowPrivilegeEscalation:
                                description: >-
                                  AllowPrivilegeEscalation controls whether a
                                  process can gain more privileges than its
                                  parent process. This bool directly controls if
                                  the no_new_privs flag will be set on the
                                  container process. AllowPrivilegeEscalation is
                                  true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN Note that this
                                  field cannot be set when spec.os.name is
                                  windows.
                                type: boolean
                          ports:
                            description: >-
                              List of ports to expose from the container. Not
                              specifying a port here DOES NOT prevent that port
                              from being exposed. Any port which is listening on
                              the default "0.0.0.0" address inside a container
                              will be accessible from the network. Modifying
                              this array with strategic merge patch may corrupt
                              the data. For more information See
                              https://github.com/kubernetes/kubernetes/issues/108255.
                              Cannot be updated.
                            type: array
                            items:
                              description: >-
                                ContainerPort represents a network port in a
                                single container.
                              type: object
                              required:
                                - containerPort
                              properties:
                                containerPort:
                                  description: >-
                                    Number of port to expose on the pod's IP
                                    address. This must be a valid port number, 0
                                    < x < 65536.
                                  type: integer
                                  format: int32
                                hostIP:
                                  description: What host IP to bind the external port to.
                                  type: string
                                hostPort:
                                  description: >-
                                    Number of port to expose on the host. If
                                    specified, this must be a valid port number,
                                    0 < x < 65536. If HostNetwork is specified,
                                    this must match ContainerPort. Most
                                    containers do not need this.
                                  type: integer
                                  format: int32
                                name:
                                  description: >-
                                    If specified, this must be an IANA_SVC_NAME
                                    and unique within the pod. Each named port
                                    in a pod must have a unique name. Name for
                                    the port that can be referred to by
                                    services.
                                  type: string
                                protocol:
                                  description: >-
                                    Protocol for port. Must be UDP, TCP, or
                                    SCTP. Defaults to "TCP".
                                  type: string
                                  default: TCP
                            x-kubernetes-list-map-keys:
                              - containerPort
                              - protocol
                            x-kubernetes-list-type: map
                          imagePullPolicy:
                            description: >-
                              Image pull policy. One of Always, Never,
                              IfNotPresent. Defaults to Always if :latest tag is
                              specified, or IfNotPresent otherwise. Cannot be
                              updated. More info:
                              https://kubernetes.io/docs/concepts/containers/images#updating-images
                            type: string
                          startupProbe:
                            description: >-
                              StartupProbe indicates that the Pod has
                              successfully initialized. If specified, no other
                              probes are executed until this completes
                              successfully. If this probe fails, the Pod will be
                              restarted, just as if the livenessProbe failed.
                              This can be used to provide different probe
                              parameters at the beginning of a Pod's lifecycle,
                              when it might take a long time to load data or
                              warm a cache, than during steady-state operation.
                              This cannot be updated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            type: object
                            properties:
                              initialDelaySeconds:
                                description: >-
                                  Number of seconds after the container has
                                  started before liveness probes are initiated.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                              failureThreshold:
                                description: >-
                                  Minimum consecutive failures for the probe to
                                  be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                type: integer
                                format: int32
                              successThreshold:
                                description: >-
                                  Minimum consecutive successes for the probe to
                                  be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and
                                  startup. Minimum value is 1.
                                type: integer
                                format: int32
                              terminationGracePeriodSeconds:
                                description: >-
                                  Optional duration in seconds the pod needs to
                                  terminate gracefully upon probe failure. The
                                  grace period is the duration in seconds after
                                  the processes running in the pod are sent a
                                  termination signal and the time when the
                                  processes are forcibly halted with a kill
                                  signal. Set this value longer than the
                                  expected cleanup time for your process. If
                                  this value is nil, the pod's
                                  terminationGracePeriodSeconds will be used.
                                  Otherwise, this value overrides the value
                                  provided by the pod spec. Value must be
                                  non-negative integer. The value zero indicates
                                  stop immediately via the kill signal (no
                                  opportunity to shut down). This is a beta
                                  field and requires enabling
                                  ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1.
                                  spec.terminationGracePeriodSeconds is used if
                                  unset.
                                type: integer
                                format: int64
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Host name to connect to, defaults to the
                                      pod IP. You probably want to set "Host" in
                                      httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: >-
                                      Custom headers to set in the request. HTTP
                                      allows repeated headers.
                                    type: array
                                    items:
                                      description: >-
                                        HTTPHeader describes a custom header to
                                        be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: >-
                                            The header field name. This will be
                                            canonicalized upon output, so
                                            case-variant names will be understood as
                                            the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: >-
                                      Name or number of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: >-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: >-
                                      Command is the command line to execute
                                      inside the container, the working
                                      directory for the command  is root ('/')
                                      in the container's filesystem. The command
                                      is simply exec'd, it is not run inside a
                                      shell, so traditional shell instructions
                                      ('|', etc) won't work. To use a shell, you
                                      need to explicitly call out to that shell.
                                      Exit status of 0 is treated as
                                      live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              tcpSocket:
                                description: >-
                                  TCPSocket specifies an action involving a TCP
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Optional: Host name to connect to,
                                      defaults to the pod IP.
                                    type: string
                                  port:
                                    description: >-
                                      Number or name of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                              grpc:
                                description: >-
                                  GRPC specifies an action involving a GRPC
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    description: >-
                                      Port number of the gRPC service. Number
                                      must be in the range 1 to 65535.
                                    type: integer
                                    format: int32
                                  service:
                                    description: >-
                                      Service is the name of the service to
                                      place in the gRPC HealthCheckRequest (see
                                      https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
                                       If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                              periodSeconds:
                                description: >-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                type: integer
                                format: int32
                              timeoutSeconds:
                                description: >-
                                  Number of seconds after which the probe times
                                  out. Defaults to 1 second. Minimum value is 1.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                          volumeMounts:
                            description: >-
                              Pod volumes to mount into the container's
                              filesystem. Cannot be updated.
                            type: array
                            items:
                              description: >-
                                VolumeMount describes a mounting of a Volume
                                within a container.
                              type: object
                              required:
                                - mountPath
                                - name
                              properties:
                                mountPath:
                                  description: >-
                                    Path within the container at which the
                                    volume should be mounted.  Must not contain
                                    ':'.
                                  type: string
                                mountPropagation:
                                  description: >-
                                    mountPropagation determines how mounts are
                                    propagated from the host to container and
                                    the other way around. When not set,
                                    MountPropagationNone is used. This field is
                                    beta in 1.10.
                                  type: string
                                name:
                                  description: This must match the Name of a Volume.
                                  type: string
                                readOnly:
                                  description: >-
                                    Mounted read-only if true, read-write
                                    otherwise (false or unspecified). Defaults
                                    to false.
                                  type: boolean
                                subPath:
                                  description: >-
                                    Path within the volume from which the
                                    container's volume should be mounted.
                                    Defaults to "" (volume's root).
                                  type: string
                                subPathExpr:
                                  description: >-
                                    Expanded path within the volume from which
                                    the container's volume should be mounted.
                                    Behaves similarly to SubPath but environment
                                    variable references $(VAR_NAME) are expanded
                                    using the container's environment. Defaults
                                    to "" (volume's root). SubPathExpr and
                                    SubPath are mutually exclusive.
                                  type: string
                          terminationMessagePolicy:
                            description: >-
                              Indicate how the termination message should be
                              populated. File will use the contents of
                              terminationMessagePath to populate the container
                              status message on both success and failure.
                              FallbackToLogsOnError will use the last chunk of
                              container log output if the termination message
                              file is empty and the container exited with an
                              error. The log output is limited to 2048 bytes or
                              80 lines, whichever is smaller. Defaults to File.
                              Cannot be updated.
                            type: string
                          envFrom:
                            description: >-
                              List of sources to populate environment variables
                              in the container. The keys defined within a source
                              must be a C_IDENTIFIER. All invalid keys will be
                              reported as an event when the container is
                              starting. When a key exists in multiple sources,
                              the value associated with the last source will
                              take precedence. Values defined by an Env with a
                              duplicate key will take precedence. Cannot be
                              updated.
                            type: array
                            items:
                              description: >-
                                EnvFromSource represents the source of a set of
                                ConfigMaps
                              type: object
                              properties:
                                configMapRef:
                                  description: The ConfigMap to select from
                                  type: object
                                  properties:
                                    name:
                                      description: >-
                                        Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields.
                                        apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: >-
                                        Specify whether the ConfigMap must be
                                        defined
                                      type: boolean
                                prefix:
                                  description: >-
                                    An optional identifier to prepend to each
                                    key in the ConfigMap. Must be a
                                    C_IDENTIFIER.
                                  type: string
                                secretRef:
                                  description: The Secret to select from
                                  type: object
                                  properties:
                                    name:
                                      description: >-
                                        Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields.
                                        apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: >-
                                        Specify whether the Secret must be
                                        defined
                                      type: boolean
                          tty:
                            description: >-
                              Whether this container should allocate a TTY for
                              itself, also requires 'stdin' to be true. Default
                              is false.
                            type: boolean
                          image:
                            description: >-
                              Container image name. More info:
                              https://kubernetes.io/docs/concepts/containers/images
                              This field is optional to allow higher level
                              config management to default or override container
                              images in workload controllers like Deployments
                              and StatefulSets.
                            type: string
                          workingDir:
                            description: >-
                              Container's working directory. If not specified,
                              the container runtime's default will be used,
                              which might be configured in the container image.
                              Cannot be updated.
                            type: string
                          args:
                            description: >-
                              Arguments to the entrypoint. The container image's
                              CMD is used if this is not provided. Variable
                              references $(VAR_NAME) are expanded using the
                              container's environment. If a variable cannot be
                              resolved, the reference in the input string will
                              be unchanged. Double $$ are reduced to a single $,
                              which allows for escaping the $(VAR_NAME) syntax:
                              i.e. "$$(VAR_NAME)" will produce the string
                              literal "$(VAR_NAME)". Escaped references will
                              never be expanded, regardless of whether the
                              variable exists or not. Cannot be updated. More
                              info:
                              https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                            type: array
                            items:
                              type: string
                    execTimeout:
                      description: >-
                        ExecTimeout specifies the timeout in seconds for tool
                        execution
                      type: integer
                    mountsatoken:
                      description: >-
                        MountSAToken describes whether you would like to have
                        the Repo server mount the service account token
                      type: boolean
                    volumeMounts:
                      description: >-
                        VolumeMounts adds volumeMounts to the repo server
                        container
                      type: array
                      items:
                        description: >-
                          VolumeMount describes a mounting of a Volume within a
                          container.
                        type: object
                        required:
                          - mountPath
                          - name
                        properties:
                          mountPath:
                            description: >-
                              Path within the container at which the volume
                              should be mounted.  Must not contain ':'.
                            type: string
                          mountPropagation:
                            description: >-
                              mountPropagation determines how mounts are
                              propagated from the host to container and the
                              other way around. When not set,
                              MountPropagationNone is used. This field is beta
                              in 1.10.
                            type: string
                          name:
                            description: This must match the Name of a Volume.
                            type: string
                          readOnly:
                            description: >-
                              Mounted read-only if true, read-write otherwise
                              (false or unspecified). Defaults to false.
                            type: boolean
                          subPath:
                            description: >-
                              Path within the volume from which the container's
                              volume should be mounted. Defaults to "" (volume's
                              root).
                            type: string
                          subPathExpr:
                            description: >-
                              Expanded path within the volume from which the
                              container's volume should be mounted. Behaves
                              similarly to SubPath but environment variable
                              references $(VAR_NAME) are expanded using the
                              container's environment. Defaults to "" (volume's
                              root). SubPathExpr and SubPath are mutually
                              exclusive.
                            type: string
                    version:
                      description: Version is the ArgoCD Repo Server container image tag.
                      type: string
                    serviceaccount:
                      description: >-
                        ServiceAccount defines the ServiceAccount user that you
                        would like the Repo server to use
                      type: string
                    volumes:
                      description: Volumes adds volumes to the repo server deployment
                      type: array
                      items:
                        description: >-
                          Volume represents a named volume in a pod that may be
                          accessed by any container in the pod.
                        type: object
                        required:
                          - name
                        properties:
                          emptyDir:
                            description: >-
                              emptyDir represents a temporary directory that
                              shares a pod's lifetime. More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            type: object
                            properties:
                              medium:
                                description: >-
                                  medium represents what type of storage medium
                                  should back this directory. The default is ""
                                  which means to use the node's default medium.
                                  Must be an empty string (default) or Memory.
                                  More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                type: string
                              sizeLimit:
                                description: >-
                                  sizeLimit is the total amount of local storage
                                  required for this EmptyDir volume. The size
                                  limit is also applicable for memory medium.
                                  The maximum usage on memory medium EmptyDir
                                  would be the minimum value between the
                                  SizeLimit specified here and the sum of memory
                                  limits of all containers in a pod. The default
                                  is nil which means that the limit is
                                  undefined. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                anyOf:
                                  - type: integer
                                  - type: string
                                x-kubernetes-int-or-string: true
                          gitRepo:
                            description: >-
                              gitRepo represents a git repository at a
                              particular revision. DEPRECATED: GitRepo is
                              deprecated. To provision a container with a git
                              repo, mount an EmptyDir into an InitContainer that
                              clones the repo using git, then mount the EmptyDir
                              into the Pod's container.
                            type: object
                            required:
                              - repository
                            properties:
                              directory:
                                description: >-
                                  directory is the target directory name. Must
                                  not contain or start with '..'.  If '.' is
                                  supplied, the volume directory will be the git
                                  repository.  Otherwise, if specified, the
                                  volume will contain the git repository in the
                                  subdirectory with the given name.
                                type: string
                              repository:
                                description: repository is the URL
                                type: string
                              revision:
                                description: >-
                                  revision is the commit hash for the specified
                                  revision.
                                type: string
                          cephfs:
                            description: >-
                              cephFS represents a Ceph FS mount on the host that
                              shares a pod's lifetime
                            type: object
                            required:
                              - monitors
                            properties:
                              monitors:
                                description: >-
                                  monitors is Required: Monitors is a collection
                                  of Ceph monitors More info:
                                  https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                type: array
                                items:
                                  type: string
                              path:
                                description: >-
                                  path is Optional: Used as the mounted root,
                                  rather than the full Ceph tree, default is /
                                type: string
                              readOnly:
                                description: >-
                                  readOnly is Optional: Defaults to false
                                  (read/write). ReadOnly here will force the
                                  ReadOnly setting in VolumeMounts. More info:
                                  https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                type: boolean
                              secretFile:
                                description: >-
                                  secretFile is Optional: SecretFile is the path
                                  to key ring for User, default is
                                  /etc/ceph/user.secret More info:
                                  https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                type: string
                              secretRef:
                                description: >-
                                  secretRef is Optional: SecretRef is reference
                                  to the authentication secret for User, default
                                  is empty. More info:
                                  https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              user:
                                description: >-
                                  user is optional: User is the rados user name,
                                  default is admin More info:
                                  https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                type: string
                          cinder:
                            description: >-
                              cinder represents a cinder volume attached and
                              mounted on kubelets host machine. More info:
                              https://examples.k8s.io/mysql-cinder-pd/README.md
                            type: object
                            required:
                              - volumeID
                            properties:
                              fsType:
                                description: >-
                                  fsType is the filesystem type to mount. Must
                                  be a filesystem type supported by the host
                                  operating system. Examples: "ext4", "xfs",
                                  "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified. More info:
                                  https://examples.k8s.io/mysql-cinder-pd/README.md
                                type: string
                              readOnly:
                                description: >-
                                  readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting
                                  in VolumeMounts. More info:
                                  https://examples.k8s.io/mysql-cinder-pd/README.md
                                type: boolean
                              secretRef:
                                description: >-
                                  secretRef is optional: points to a secret
                                  object containing parameters used to connect
                                  to OpenStack.
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              volumeID:
                                description: >-
                                  volumeID used to identify the volume in
                                  cinder. More info:
                                  https://examples.k8s.io/mysql-cinder-pd/README.md
                                type: string
                          glusterfs:
                            description: >-
                              glusterfs represents a Glusterfs mount on the host
                              that shares a pod's lifetime. More info:
                              https://examples.k8s.io/volumes/glusterfs/README.md
                            type: object
                            required:
                              - endpoints
                              - path
                            properties:
                              endpoints:
                                description: >-
                                  endpoints is the endpoint name that details
                                  Glusterfs topology. More info:
                                  https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                type: string
                              path:
                                description: >-
                                  path is the Glusterfs volume path. More info:
                                  https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                type: string
                              readOnly:
                                description: >-
                                  readOnly here will force the Glusterfs volume
                                  to be mounted with read-only permissions.
                                  Defaults to false. More info:
                                  https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                type: boolean
                          azureFile:
                            description: >-
                              azureFile represents an Azure File Service mount
                              on the host and bind mount to the pod.
                            type: object
                            required:
                              - secretName
                              - shareName
                            properties:
                              readOnly:
                                description: >-
                                  readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting
                                  in VolumeMounts.
                                type: boolean
                              secretName:
                                description: >-
                                  secretName is the  name of secret that
                                  contains Azure Storage Account Name and Key
                                type: string
                              shareName:
                                description: shareName is the azure share Name
                                type: string
                          persistentVolumeClaim:
                            description: >-
                              persistentVolumeClaimVolumeSource represents a
                              reference to a PersistentVolumeClaim in the same
                              namespace. More info:
                              https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                            type: object
                            required:
                              - claimName
                            properties:
                              claimName:
                                description: >-
                                  claimName is the name of a
                                  PersistentVolumeClaim in the same namespace as
                                  the pod using this volume. More info:
                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                type: string
                              readOnly:
                                description: >-
                                  readOnly Will force the ReadOnly setting in
                                  VolumeMounts. Default false.
                                type: boolean
                          name:
                            description: >-
                              name of the volume. Must be a DNS_LABEL and unique
                              within the pod. More info:
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          azureDisk:
                            description: >-
                              azureDisk represents an Azure Data Disk mount on
                              the host and bind mount to the pod.
                            type: object
                            required:
                              - diskName
                              - diskURI
                            properties:
                              cachingMode:
                                description: >-
                                  cachingMode is the Host Caching mode: None,
                                  Read Only, Read Write.
                                type: string
                              diskName:
                                description: >-
                                  diskName is the Name of the data disk in the
                                  blob storage
                                type: string
                              diskURI:
                                description: >-
                                  diskURI is the URI of data disk in the blob
                                  storage
                                type: string
                              fsType:
                                description: >-
                                  fsType is Filesystem type to mount. Must be a
                                  filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              kind:
                                description: >-
                                  kind expected values are Shared: multiple blob
                                  disks per storage account  Dedicated: single
                                  blob disk per storage account  Managed: azure
                                  managed data disk (only in managed
                                  availability set). defaults to shared
                                type: string
                              readOnly:
                                description: >-
                                  readOnly Defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting
                                  in VolumeMounts.
                                type: boolean
                          awsElasticBlockStore:
                            description: >-
                              awsElasticBlockStore represents an AWS Disk
                              resource that is attached to a kubelet's host
                              machine and then exposed to the pod. More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                            type: object
                            required:
                              - volumeID
                            properties:
                              fsType:
                                description: >-
                                  fsType is the filesystem type of the volume
                                  that you want to mount. Tip: Ensure that the
                                  filesystem type is supported by the host
                                  operating system. Examples: "ext4", "xfs",
                                  "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  TODO: how do we prevent errors in the
                                  filesystem from compromising the machine
                                type: string
                              partition:
                                description: >-
                                  partition is the partition in the volume that
                                  you want to mount. If omitted, the default is
                                  to mount by volume name. Examples: For volume
                                  /dev/sda1, you specify the partition as "1".
                                  Similarly, the volume partition for /dev/sda
                                  is "0" (or you can leave the property empty).
                                type: integer
                                format: int32
                              readOnly:
                                description: >-
                                  readOnly value true will force the readOnly
                                  setting in VolumeMounts. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                type: boolean
                              volumeID:
                                description: >-
                                  volumeID is unique ID of the persistent disk
                                  resource in AWS (Amazon EBS volume). More
                                  info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                type: string
                          hostPath:
                            description: >-
                              hostPath represents a pre-existing file or
                              directory on the host machine that is directly
                              exposed to the container. This is generally used
                              for system agents or other privileged things that
                              are allowed to see the host machine. Most
                              containers will NOT need this. More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              --- TODO(jonesdl) We need to restrict who can use
                              host directory mounts and who can/can not mount
                              host directories as read/write.
                            type: object
                            required:
                              - path
                            properties:
                              path:
                                description: >-
                                  path of the directory on the host. If the path
                                  is a symlink, it will follow the link to the
                                  real path. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                type: string
                              type:
                                description: >-
                                  type for HostPath Volume Defaults to "" More
                                  info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                type: string
                          iscsi:
                            description: >-
                              iscsi represents an ISCSI Disk resource that is
                              attached to a kubelet's host machine and then
                              exposed to the pod. More info:
                              https://examples.k8s.io/volumes/iscsi/README.md
                            type: object
                            required:
                              - iqn
                              - lun
                              - targetPortal
                            properties:
                              readOnly:
                                description: >-
                                  readOnly here will force the ReadOnly setting
                                  in VolumeMounts. Defaults to false.
                                type: boolean
                              secretRef:
                                description: >-
                                  secretRef is the CHAP Secret for iSCSI target
                                  and initiator authentication
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              lun:
                                description: lun represents iSCSI Target Lun number.
                                type: integer
                                format: int32
                              iqn:
                                description: iqn is the target iSCSI Qualified Name.
                                type: string
                              portals:
                                description: >-
                                  portals is the iSCSI Target Portal List. The
                                  portal is either an IP or ip_addr:port if the
                                  port is other than default (typically TCP
                                  ports 860 and 3260).
                                type: array
                                items:
                                  type: string
                              fsType:
                                description: >-
                                  fsType is the filesystem type of the volume
                                  that you want to mount. Tip: Ensure that the
                                  filesystem type is supported by the host
                                  operating system. Examples: "ext4", "xfs",
                                  "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                  TODO: how do we prevent errors in the
                                  filesystem from compromising the machine
                                type: string
                              iscsiInterface:
                                description: >-
                                  iscsiInterface is the interface Name that uses
                                  an iSCSI transport. Defaults to 'default'
                                  (tcp).
                                type: string
                              chapAuthDiscovery:
                                description: >-
                                  chapAuthDiscovery defines whether support
                                  iSCSI Discovery CHAP authentication
                                type: boolean
                              initiatorName:
                                description: >-
                                  initiatorName is the custom iSCSI Initiator
                                  Name. If initiatorName is specified with
                                  iscsiInterface simultaneously, new iSCSI
                                  interface <target portal>:<volume name> will
                                  be created for the connection.
                                type: string
                              chapAuthSession:
                                description: >-
                                  chapAuthSession defines whether support iSCSI
                                  Session CHAP authentication
                                type: boolean
                              targetPortal:
                                description: >-
                                  targetPortal is iSCSI Target Portal. The
                                  Portal is either an IP or ip_addr:port if the
                                  port is other than default (typically TCP
                                  ports 860 and 3260).
                                type: string
                          photonPersistentDisk:
                            description: >-
                              photonPersistentDisk represents a PhotonController
                              persistent disk attached and mounted on kubelets
                              host machine
                            type: object
                            required:
                              - pdID
                            properties:
                              fsType:
                                description: >-
                                  fsType is the filesystem type to mount. Must
                                  be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              pdID:
                                description: >-
                                  pdID is the ID that identifies Photon
                                  Controller persistent disk
                                type: string
                          secret:
                            description: >-
                              secret represents a secret that should populate
                              this volume. More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#secret
                            type: object
                            properties:
                              defaultMode:
                                description: >-
                                  defaultMode is Optional: mode bits used to set
                                  permissions on created files by default. Must
                                  be an octal value between 0000 and 0777 or a
                                  decimal value between 0 and 511. YAML accepts
                                  both octal and decimal values, JSON requires
                                  decimal values for mode bits. Defaults to
                                  0644. Directories within the path are not
                                  affected by this setting. This might be in
                                  conflict with other options that affect the
                                  file mode, like fsGroup, and the result can be
                                  other mode bits set.
                                type: integer
                                format: int32
                              items:
                                description: >-
                                  items If unspecified, each key-value pair in
                                  the Data field of the referenced Secret will
                                  be projected into the volume as a file whose
                                  name is the key and content is the value. If
                                  specified, the listed keys will be projected
                                  into the specified paths, and unlisted keys
                                  will not be present. If a key is specified
                                  which is not present in the Secret, the volume
                                  setup will error unless it is marked optional.
                                  Paths must be relative and may not contain the
                                  '..' path or start with '..'.
                                type: array
                                items:
                                  description: Maps a string key to a path within a volume.
                                  type: object
                                  required:
                                    - key
                                    - path
                                  properties:
                                    key:
                                      description: key is the key to project.
                                      type: string
                                    mode:
                                      description: >-
                                        mode is Optional: mode bits used to set
                                        permissions on this file. Must be an
                                        octal value between 0000 and 0777 or a
                                        decimal value between 0 and 511. YAML
                                        accepts both octal and decimal values,
                                        JSON requires decimal values for mode
                                        bits. If not specified, the volume
                                        defaultMode will be used. This might be
                                        in conflict with other options that
                                        affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      type: integer
                                      format: int32
                                    path:
                                      description: >-
                                        path is the relative path of the file to
                                        map the key to. May not be an absolute
                                        path. May not contain the path element
                                        '..'. May not start with the string
                                        '..'.
                                      type: string
                              optional:
                                description: >-
                                  optional field specify whether the Secret or
                                  its keys must be defined
                                type: boolean
                              secretName:
                                description: >-
                                  secretName is the name of the secret in the
                                  pod's namespace to use. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#secret
                                type: string
                          scaleIO:
                            description: >-
                              scaleIO represents a ScaleIO persistent volume
                              attached and mounted on Kubernetes nodes.
                            type: object
                            required:
                              - gateway
                              - secretRef
                              - system
                            properties:
                              readOnly:
                                description: >-
                                  readOnly Defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting
                                  in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: >-
                                  secretRef references to the secret for ScaleIO
                                  user and other sensitive information. If this
                                  is not provided, Login operation will fail.
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              gateway:
                                description: >-
                                  gateway is the host address of the ScaleIO API
                                  Gateway.
                                type: string
                              volumeName:
                                description: >-
                                  volumeName is the name of a volume already
                                  created in the ScaleIO system that is
                                  associated with this volume source.
                                type: string
                              fsType:
                                description: >-
                                  fsType is the filesystem type to mount. Must
                                  be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  Default is "xfs".
                                type: string
                              system:
                                description: >-
                                  system is the name of the storage system as
                                  configured in ScaleIO.
                                type: string
                              sslEnabled:
                                description: >-
                                  sslEnabled Flag enable/disable SSL
                                  communication with Gateway, default false
                                type: boolean
                              storagePool:
                                description: >-
                                  storagePool is the ScaleIO Storage Pool
                                  associated with the protection domain.
                                type: string
                              protectionDomain:
                                description: >-
                                  protectionDomain is the name of the ScaleIO
                                  Protection Domain for the configured storage.
                                type: string
                              storageMode:
                                description: >-
                                  storageMode indicates whether the storage for
                                  a volume should be ThickProvisioned or
                                  ThinProvisioned. Default is ThinProvisioned.
                                type: string
                          flexVolume:
                            description: >-
                              flexVolume represents a generic volume resource
                              that is provisioned/attached using an exec based
                              plugin.
                            type: object
                            required:
                              - driver
                            properties:
                              driver:
                                description: >-
                                  driver is the name of the driver to use for
                                  this volume.
                                type: string
                              fsType:
                                description: >-
                                  fsType is the filesystem type to mount. Must
                                  be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  The default filesystem depends on FlexVolume
                                  script.
                                type: string
                              options:
                                description: >-
                                  options is Optional: this field holds extra
                                  command options if any.
                                type: object
                                additionalProperties:
                                  type: string
                              readOnly:
                                description: >-
                                  readOnly is Optional: defaults to false
                                  (read/write). ReadOnly here will force the
                                  ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: >-
                                  secretRef is Optional: secretRef is reference
                                  to the secret object containing sensitive
                                  information to pass to the plugin scripts.
                                  This may be empty if no secret object is
                                  specified. If the secret object contains more
                                  than one secret, all secrets are passed to the
                                  plugin scripts.
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                          quobyte:
                            description: >-
                              quobyte represents a Quobyte mount on the host
                              that shares a pod's lifetime
                            type: object
                            required:
                              - registry
                              - volume
                            properties:
                              group:
                                description: >-
                                  group to map volume access to Default is no
                                  group
                                type: string
                              readOnly:
                                description: >-
                                  readOnly here will force the Quobyte volume to
                                  be mounted with read-only permissions.
                                  Defaults to false.
                                type: boolean
                              registry:
                                description: >-
                                  registry represents a single or multiple
                                  Quobyte Registry services specified as a
                                  string as host:port pair (multiple entries are
                                  separated with commas) which acts as the
                                  central registry for volumes
                                type: string
                              tenant:
                                description: >-
                                  tenant owning the given Quobyte volume in the
                                  Backend Used with dynamically provisioned
                                  Quobyte volumes, value is set by the plugin
                                type: string
                              user:
                                description: >-
                                  user to map volume access to Defaults to
                                  serivceaccount user
                                type: string
                              volume:
                                description: >-
                                  volume is a string that references an already
                                  created Quobyte volume by name.
                                type: string
                          rbd:
                            description: >-
                              rbd represents a Rados Block Device mount on the
                              host that shares a pod's lifetime. More info:
                              https://examples.k8s.io/volumes/rbd/README.md
                            type: object
                            required:
                              - image
                              - monitors
                            properties:
                              fsType:
                                description: >-
                                  fsType is the filesystem type of the volume
                                  that you want to mount. Tip: Ensure that the
                                  filesystem type is supported by the host
                                  operating system. Examples: "ext4", "xfs",
                                  "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                  TODO: how do we prevent errors in the
                                  filesystem from compromising the machine
                                type: string
                              image:
                                description: >-
                                  image is the rados image name. More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: string
                              keyring:
                                description: >-
                                  keyring is the path to key ring for RBDUser.
                                  Default is /etc/ceph/keyring. More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: string
                              monitors:
                                description: >-
                                  monitors is a collection of Ceph monitors.
                                  More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: array
                                items:
                                  type: string
                              pool:
                                description: >-
                                  pool is the rados pool name. Default is rbd.
                                  More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: string
                              readOnly:
                                description: >-
                                  readOnly here will force the ReadOnly setting
                                  in VolumeMounts. Defaults to false. More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: boolean
                              secretRef:
                                description: >-
                                  secretRef is name of the authentication secret
                                  for RBDUser. If provided overrides keyring.
                                  Default is nil. More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              user:
                                description: >-
                                  user is the rados user name. Default is admin.
                                  More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: string
                          projected:
                            description: >-
                              projected items for all in one resources secrets,
                              configmaps, and downward API
                            type: object
                            properties:
                              defaultMode:
                                description: >-
                                  defaultMode are the mode bits used to set
                                  permissions on created files by default. Must
                                  be an octal value between 0000 and 0777 or a
                                  decimal value between 0 and 511. YAML accepts
                                  both octal and decimal values, JSON requires
                                  decimal values for mode bits. Directories
                                  within the path are not affected by this
                                  setting. This might be in conflict with other
                                  options that affect the file mode, like
                                  fsGroup, and the result can be other mode bits
                                  set.
                                type: integer
                                format: int32
                              sources:
                                description: sources is the list of volume projections
                                type: array
                                items:
                                  description: >-
                                    Projection that may be projected along with
                                    other supported volume types
                                  type: object
                                  properties:
                                    configMap:
                                      description: >-
                                        configMap information about the
                                        configMap data to project
                                      type: object
                                      properties:
                                        items:
                                          description: >-
                                            items if unspecified, each key-value
                                            pair in the Data field of the referenced
                                            ConfigMap will be projected into the
                                            volume as a file whose name is the key
                                            and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is
                                            specified which is not present in the
                                            ConfigMap, the volume setup will error
                                            unless it is marked optional. Paths must
                                            be relative and may not contain the '..'
                                            path or start with '..'.
                                          type: array
                                          items:
                                            description: >-
                                              Maps a string key to a path within a
                                              volume.
                                            type: object
                                            required:
                                              - key
                                              - path
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: >-
                                                  mode is Optional: mode bits used to set
                                                  permissions on this file. Must be an
                                                  octal value between 0000 and 0777 or a
                                                  decimal value between 0 and 511. YAML
                                                  accepts both octal and decimal values,
                                                  JSON requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might be
                                                  in conflict with other options that
                                                  affect the file mode, like fsGroup, and
                                                  the result can be other mode bits set.
                                                type: integer
                                                format: int32
                                              path:
                                                description: >-
                                                  path is the relative path of the file to
                                                  map the key to. May not be an absolute
                                                  path. May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                        name:
                                          description: >-
                                            Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields.
                                            apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: >-
                                            optional specify whether the ConfigMap
                                            or its keys must be defined
                                          type: boolean
                                    downwardAPI:
                                      description: >-
                                        downwardAPI information about the
                                        downwardAPI data to project
                                      type: object
                                      properties:
                                        items:
                                          description: >-
                                            Items is a list of DownwardAPIVolume
                                            file
                                          type: array
                                          items:
                                            description: >-
                                              DownwardAPIVolumeFile represents
                                              information to create the file
                                              containing the pod field
                                            type: object
                                            required:
                                              - path
                                            properties:
                                              fieldRef:
                                                description: >-
                                                  Required: Selects a field of the pod:
                                                  only annotations, labels, name and
                                                  namespace are supported.
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  apiVersion:
                                                    description: >-
                                                      Version of the schema the FieldPath is
                                                      written in terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: >-
                                                      Path of the field to select in the
                                                      specified API version.
                                                    type: string
                                              mode:
                                                description: >-
                                                  Optional: mode bits used to set
                                                  permissions on this file, must be an
                                                  octal value between 0000 and 0777 or a
                                                  decimal value between 0 and 511. YAML
                                                  accepts both octal and decimal values,
                                                  JSON requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might be
                                                  in conflict with other options that
                                                  affect the file mode, like fsGroup, and
                                                  the result can be other mode bits set.
                                                type: integer
                                                format: int32
                                              path:
                                                description: >-
                                                  Required: Path is  the relative path
                                                  name of the file to be created. Must not
                                                  be absolute or contain the '..' path.
                                                  Must be utf-8 encoded. The first item of
                                                  the relative path must not start with
                                                  '..'
                                                type: string
                                              resourceFieldRef:
                                                description: >-
                                                  Selects a resource of the container:
                                                  only resources limits and requests
                                                  (limits.cpu, limits.memory, requests.cpu
                                                  and requests.memory) are currently
                                                  supported.
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  containerName:
                                                    description: >-
                                                      Container name: required for volumes,
                                                      optional for env vars
                                                    type: string
                                                  divisor:
                                                    description: >-
                                                      Specifies the output format of the
                                                      exposed resources, defaults to "1"
                                                    pattern: >-
                                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource to select'
                                                    type: string
                                    secret:
                                      description: >-
                                        secret information about the secret data
                                        to project
                                      type: object
                                      properties:
                                        items:
                                          description: >-
                                            items if unspecified, each key-value
                                            pair in the Data field of the referenced
                                            Secret will be projected into the volume
                                            as a file whose name is the key and
                                            content is the value. If specified, the
                                            listed keys will be projected into the
                                            specified paths, and unlisted keys will
                                            not be present. If a key is specified
                                            which is not present in the Secret, the
                                            volume setup will error unless it is
                                            marked optional. Paths must be relative
                                            and may not contain the '..' path or
                                            start with '..'.
                                          type: array
                                          items:
                                            description: >-
                                              Maps a string key to a path within a
                                              volume.
                                            type: object
                                            required:
                                              - key
                                              - path
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: >-
                                                  mode is Optional: mode bits used to set
                                                  permissions on this file. Must be an
                                                  octal value between 0000 and 0777 or a
                                                  decimal value between 0 and 511. YAML
                                                  accepts both octal and decimal values,
                                                  JSON requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might be
                                                  in conflict with other options that
                                                  affect the file mode, like fsGroup, and
                                                  the result can be other mode bits set.
                                                type: integer
                                                format: int32
                                              path:
                                                description: >-
                                                  path is the relative path of the file to
                                                  map the key to. May not be an absolute
                                                  path. May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                        name:
                                          description: >-
                                            Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields.
                                            apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: >-
                                            optional field specify whether the
                                            Secret or its key must be defined
                                          type: boolean
                                    serviceAccountToken:
                                      description: >-
                                        serviceAccountToken is information about
                                        the serviceAccountToken data to project
                                      type: object
                                      required:
                                        - path
                                      properties:
                                        audience:
                                          description: >-
                                            audience is the intended audience of the
                                            token. A recipient of a token must
                                            identify itself with an identifier
                                            specified in the audience of the token,
                                            and otherwise should reject the token.
                                            The audience defaults to the identifier
                                            of the apiserver.
                                          type: string
                                        expirationSeconds:
                                          description: >-
                                            expirationSeconds is the requested
                                            duration of validity of the service
                                            account token. As the token approaches
                                            expiration, the kubelet volume plugin
                                            will proactively rotate the service
                                            account token. The kubelet will start
                                            trying to rotate the token if the token
                                            is older than 80 percent of its time to
                                            live or if the token is older than 24
                                            hours.Defaults to 1 hour and must be at
                                            least 10 minutes.
                                          type: integer
                                          format: int64
                                        path:
                                          description: >-
                                            path is the path relative to the mount
                                            point of the file to project the token
                                            into.
                                          type: string
                          csi:
                            description: >-
                              csi (Container Storage Interface) represents
                              ephemeral storage that is handled by certain
                              external CSI drivers (Beta feature).
                            type: object
                            required:
                              - driver
                            properties:
                              driver:
                                description: >-
                                  driver is the name of the CSI driver that
                                  handles this volume. Consult with your admin
                                  for the correct name as registered in the
                                  cluster.
                                type: string
                              fsType:
                                description: >-
                                  fsType to mount. Ex. "ext4", "xfs", "ntfs". If
                                  not provided, the empty value is passed to the
                                  associated CSI driver which will determine the
                                  default filesystem to apply.
                                type: string
                              nodePublishSecretRef:
                                description: >-
                                  nodePublishSecretRef is a reference to the
                                  secret object containing sensitive information
                                  to pass to the CSI driver to complete the CSI
                                  NodePublishVolume and NodeUnpublishVolume
                                  calls. This field is optional, and  may be
                                  empty if no secret is required. If the secret
                                  object contains more than one secret, all
                                  secret references are passed.
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              readOnly:
                                description: >-
                                  readOnly specifies a read-only configuration
                                  for the volume. Defaults to false
                                  (read/write).
                                type: boolean
                              volumeAttributes:
                                description: >-
                                  volumeAttributes stores driver-specific
                                  properties that are passed to the CSI driver.
                                  Consult your driver's documentation for
                                  supported values.
                                type: object
                                additionalProperties:
                                  type: string
                          portworxVolume:
                            description: >-
                              portworxVolume represents a portworx volume
                              attached and mounted on kubelets host machine
                            type: object
                            required:
                              - volumeID
                            properties:
                              fsType:
                                description: >-
                                  fSType represents the filesystem type to mount
                                  Must be a filesystem type supported by the
                                  host operating system. Ex. "ext4", "xfs".
                                  Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              readOnly:
                                description: >-
                                  readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting
                                  in VolumeMounts.
                                type: boolean
                              volumeID:
                                description: volumeID uniquely identifies a Portworx volume
                                type: string
                          configMap:
                            description: >-
                              configMap represents a configMap that should
                              populate this volume
                            type: object
                            properties:
                              defaultMode:
                                description: >-
                                  defaultMode is optional: mode bits used to set
                                  permissions on created files by default. Must
                                  be an octal value between 0000 and 0777 or a
                                  decimal value between 0 and 511. YAML accepts
                                  both octal and decimal values, JSON requires
                                  decimal values for mode bits. Defaults to
                                  0644. Directories within the path are not
                                  affected by this setting. This might be in
                                  conflict with other options that affect the
                                  file mode, like fsGroup, and the result can be
                                  other mode bits set.
                                type: integer
                                format: int32
                              items:
                                description: >-
                                  items if unspecified, each key-value pair in
                                  the Data field of the referenced ConfigMap
                                  will be projected into the volume as a file
                                  whose name is the key and content is the
                                  value. If specified, the listed keys will be
                                  projected into the specified paths, and
                                  unlisted keys will not be present. If a key is
                                  specified which is not present in the
                                  ConfigMap, the volume setup will error unless
                                  it is marked optional. Paths must be relative
                                  and may not contain the '..' path or start
                                  with '..'.
                                type: array
                                items:
                                  description: Maps a string key to a path within a volume.
                                  type: object
                                  required:
                                    - key
                                    - path
                                  properties:
                                    key:
                                      description: key is the key to project.
                                      type: string
                                    mode:
                                      description: >-
                                        mode is Optional: mode bits used to set
                                        permissions on this file. Must be an
                                        octal value between 0000 and 0777 or a
                                        decimal value between 0 and 511. YAML
                                        accepts both octal and decimal values,
                                        JSON requires decimal values for mode
                                        bits. If not specified, the volume
                                        defaultMode will be used. This might be
                                        in conflict with other options that
                                        affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      type: integer
                                      format: int32
                                    path:
                                      description: >-
                                        path is the relative path of the file to
                                        map the key to. May not be an absolute
                                        path. May not contain the path element
                                        '..'. May not start with the string
                                        '..'.
                                      type: string
                              name:
                                description: >-
                                  Name of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion,
                                  kind, uid?
                                type: string
                              optional:
                                description: >-
                                  optional specify whether the ConfigMap or its
                                  keys must be defined
                                type: boolean
                          nfs:
                            description: >-
                              nfs represents an NFS mount on the host that
                              shares a pod's lifetime More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#nfs
                            type: object
                            required:
                              - path
                              - server
                            properties:
                              path:
                                description: >-
                                  path that is exported by the NFS server. More
                                  info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                type: string
                              readOnly:
                                description: >-
                                  readOnly here will force the NFS export to be
                                  mounted with read-only permissions. Defaults
                                  to false. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                type: boolean
                              server:
                                description: >-
                                  server is the hostname or IP address of the
                                  NFS server. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                type: string
                          downwardAPI:
                            description: >-
                              downwardAPI represents downward API about the pod
                              that should populate this volume
                            type: object
                            properties:
                              defaultMode:
                                description: >-
                                  Optional: mode bits to use on created files by
                                  default. Must be a Optional: mode bits used to
                                  set permissions on created files by default.
                                  Must be an octal value between 0000 and 0777
                                  or a decimal value between 0 and 511. YAML
                                  accepts both octal and decimal values, JSON
                                  requires decimal values for mode bits.
                                  Defaults to 0644. Directories within the path
                                  are not affected by this setting. This might
                                  be in conflict with other options that affect
                                  the file mode, like fsGroup, and the result
                                  can be other mode bits set.
                                type: integer
                                format: int32
                              items:
                                description: Items is a list of downward API volume file
                                type: array
                                items:
                                  description: >-
                                    DownwardAPIVolumeFile represents information
                                    to create the file containing the pod field
                                  type: object
                                  required:
                                    - path
                                  properties:
                                    fieldRef:
                                      description: >-
                                        Required: Selects a field of the pod:
                                        only annotations, labels, name and
                                        namespace are supported.
                                      type: object
                                      required:
                                        - fieldPath
                                      properties:
                                        apiVersion:
                                          description: >-
                                            Version of the schema the FieldPath is
                                            written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: >-
                                            Path of the field to select in the
                                            specified API version.
                                          type: string
                                    mode:
                                      description: >-
                                        Optional: mode bits used to set
                                        permissions on this file, must be an
                                        octal value between 0000 and 0777 or a
                                        decimal value between 0 and 511. YAML
                                        accepts both octal and decimal values,
                                        JSON requires decimal values for mode
                                        bits. If not specified, the volume
                                        defaultMode will be used. This might be
                                        in conflict with other options that
                                        affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      type: integer
                                      format: int32
                                    path:
                                      description: >-
                                        Required: Path is  the relative path
                                        name of the file to be created. Must not
                                        be absolute or contain the '..' path.
                                        Must be utf-8 encoded. The first item of
                                        the relative path must not start with
                                        '..'
                                      type: string
                                    resourceFieldRef:
                                      description: >-
                                        Selects a resource of the container:
                                        only resources limits and requests
                                        (limits.cpu, limits.memory, requests.cpu
                                        and requests.memory) are currently
                                        supported.
                                      type: object
                                      required:
                                        - resource
                                      properties:
                                        containerName:
                                          description: >-
                                            Container name: required for volumes,
                                            optional for env vars
                                          type: string
                                        divisor:
                                          description: >-
                                            Specifies the output format of the
                                            exposed resources, defaults to "1"
                                          pattern: >-
                                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                          gcePersistentDisk:
                            description: >-
                              gcePersistentDisk represents a GCE Disk resource
                              that is attached to a kubelet's host machine and
                              then exposed to the pod. More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                            type: object
                            required:
                              - pdName
                            properties:
                              fsType:
                                description: >-
                                  fsType is filesystem type of the volume that
                                  you want to mount. Tip: Ensure that the
                                  filesystem type is supported by the host
                                  operating system. Examples: "ext4", "xfs",
                                  "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  TODO: how do we prevent errors in the
                                  filesystem from compromising the machine
                                type: string
                              partition:
                                description: >-
                                  partition is the partition in the volume that
                                  you want to mount. If omitted, the default is
                                  to mount by volume name. Examples: For volume
                                  /dev/sda1, you specify the partition as "1".
                                  Similarly, the volume partition for /dev/sda
                                  is "0" (or you can leave the property empty).
                                  More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                type: integer
                                format: int32
                              pdName:
                                description: >-
                                  pdName is unique name of the PD resource in
                                  GCE. Used to identify the disk in GCE. More
                                  info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                type: string
                              readOnly:
                                description: >-
                                  readOnly here will force the ReadOnly setting
                                  in VolumeMounts. Defaults to false. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                type: boolean
                          fc:
                            description: >-
                              fc represents a Fibre Channel resource that is
                              attached to a kubelet's host machine and then
                              exposed to the pod.
                            type: object
                            properties:
                              fsType:
                                description: >-
                                  fsType is the filesystem type to mount. Must
                                  be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  Implicitly inferred to be "ext4" if
                                  unspecified. TODO: how do we prevent errors in
                                  the filesystem from compromising the machine
                                type: string
                              lun:
                                description: 'lun is Optional: FC target lun number'
                                type: integer
                                format: int32
                              readOnly:
                                description: >-
                                  readOnly is Optional: Defaults to false
                                  (read/write). ReadOnly here will force the
                                  ReadOnly setting in VolumeMounts.
                                type: boolean
                              targetWWNs:
                                description: >-
                                  targetWWNs is Optional: FC target worldwide
                                  names (WWNs)
                                type: array
                                items:
                                  type: string
                              wwids:
                                description: >-
                                  wwids Optional: FC volume world wide
                                  identifiers (wwids) Either wwids or
                                  combination of targetWWNs and lun must be set,
                                  but not both simultaneously.
                                type: array
                                items:
                                  type: string
                          vsphereVolume:
                            description: >-
                              vsphereVolume represents a vSphere volume attached
                              and mounted on kubelets host machine
                            type: object
                            required:
                              - volumePath
                            properties:
                              fsType:
                                description: >-
                                  fsType is filesystem type to mount. Must be a
                                  filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              storagePolicyID:
                                description: >-
                                  storagePolicyID is the storage Policy Based
                                  Management (SPBM) profile ID associated with
                                  the StoragePolicyName.
                                type: string
                              storagePolicyName:
                                description: >-
                                  storagePolicyName is the storage Policy Based
                                  Management (SPBM) profile name.
                                type: string
                              volumePath:
                                description: >-
                                  volumePath is the path that identifies vSphere
                                  volume vmdk
                                type: string
                          ephemeral:
                            description: >-
                              ephemeral represents a volume that is handled by a
                              cluster storage driver. The volume's lifecycle is
                              tied to the pod that defines it - it will be
                              created before the pod starts, and deleted when
                              the pod is removed. 
                               Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim). 
                               Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. 
                               Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. 
                               A pod can use both types of ephemeral volumes and persistent volumes at the same time.
                            type: object
                            properties:
                              volumeClaimTemplate:
                                description: >-
                                  Will be used to create a stand-alone PVC to
                                  provision the volume. The pod in which this
                                  EphemeralVolumeSource is embedded will be the
                                  owner of the PVC, i.e. the PVC will be deleted
                                  together with the pod.  The name of the PVC
                                  will be `<pod name>-<volume name>` where
                                  `<volume name>` is the name from the
                                  `PodSpec.Volumes` array entry. Pod validation
                                  will reject the pod if the concatenated name
                                  is not valid for a PVC (for example, too
                                  long). 
                                   An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. 
                                   This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. 
                                   Required, must not be nil.
                                type: object
                                required:
                                  - spec
                                properties:
                                  metadata:
                                    description: >-
                                      May contain labels and annotations that
                                      will be copied into the PVC when creating
                                      it. No other fields are allowed and will
                                      be rejected during validation.
                                    type: object
                                  spec:
                                    description: >-
                                      The specification for the
                                      PersistentVolumeClaim. The entire content
                                      is copied unchanged into the PVC that gets
                                      created from this template. The same
                                      fields as in a PersistentVolumeClaim are
                                      also valid here.
                                    type: object
                                    properties:
                                      accessModes:
                                        description: >-
                                          accessModes contains the desired access
                                          modes the volume should have. More info:
                                          https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                        type: array
                                        items:
                                          type: string
                                      dataSource:
                                        description: >-
                                          dataSource field can be used to specify
                                          either: * An existing VolumeSnapshot
                                          object
                                          (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC
                                          (PersistentVolumeClaim) If the
                                          provisioner or an external controller
                                          can support the specified data source,
                                          it will create a new volume based on the
                                          contents of the specified data source.
                                          When the AnyVolumeDataSource feature
                                          gate is enabled, dataSource contents
                                          will be copied to dataSourceRef, and
                                          dataSourceRef contents will be copied to
                                          dataSource when dataSourceRef.namespace
                                          is not specified. If the namespace is
                                          specified, then dataSourceRef will not
                                          be copied to dataSource.
                                        type: object
                                        required:
                                          - kind
                                          - name
                                        properties:
                                          apiGroup:
                                            description: >-
                                              APIGroup is the group for the resource
                                              being referenced. If APIGroup is not
                                              specified, the specified Kind must be in
                                              the core API group. For any other
                                              third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: >-
                                              Kind is the type of resource being
                                              referenced
                                            type: string
                                          name:
                                            description: >-
                                              Name is the name of resource being
                                              referenced
                                            type: string
                                      dataSourceRef:
                                        description: >-
                                          dataSourceRef specifies the object from
                                          which to populate the volume with data,
                                          if a non-empty volume is desired. This
                                          may be any object from a non-empty API
                                          group (non core object) or a
                                          PersistentVolumeClaim object. When this
                                          field is specified, volume binding will
                                          only succeed if the type of the
                                          specified object matches some installed
                                          volume populator or dynamic provisioner.
                                          This field will replace the
                                          functionality of the dataSource field
                                          and as such if both fields are
                                          non-empty, they must have the same
                                          value. For backwards compatibility, when
                                          namespace isn't specified in
                                          dataSourceRef, both fields (dataSource
                                          and dataSourceRef) will be set to the
                                          same value automatically if one of them
                                          is empty and the other is non-empty.
                                          When namespace is specified in
                                          dataSourceRef, dataSource isn't set to
                                          the same value and must be empty. There
                                          are three important differences between
                                          dataSource and dataSourceRef: * While
                                          dataSource only allows two specific
                                          types of objects, dataSourceRef   allows
                                          any non-core object, as well as
                                          PersistentVolumeClaim objects. * While
                                          dataSource ignores disallowed values
                                          (dropping them), dataSourceRef  
                                          preserves all values, and generates an
                                          error if a disallowed value is  
                                          specified. * While dataSource only
                                          allows local objects, dataSourceRef
                                          allows objects   in any namespaces.
                                          (Beta) Using this field requires the
                                          AnyVolumeDataSource feature gate to be
                                          enabled. (Alpha) Using the namespace
                                          field of dataSourceRef requires the
                                          CrossNamespaceVolumeDataSource feature
                                          gate to be enabled.
                                        type: object
                                        required:
                                          - kind
                                          - name
                                        properties:
                                          apiGroup:
                                            description: >-
                                              APIGroup is the group for the resource
                                              being referenced. If APIGroup is not
                                              specified, the specified Kind must be in
                                              the core API group. For any other
                                              third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: >-
                                              Kind is the type of resource being
                                              referenced
                                            type: string
                                          name:
                                            description: >-
                                              Name is the name of resource being
                                              referenced
                                            type: string
                                          namespace:
                                            description: >-
                                              Namespace is the namespace of resource
                                              being referenced Note that when a
                                              namespace is specified, a
                                              gateway.networking.k8s.io/ReferenceGrant
                                              object is required in the referent
                                              namespace to allow that namespace's
                                              owner to accept the reference. See the
                                              ReferenceGrant documentation for
                                              details. (Alpha) This field requires the
                                              CrossNamespaceVolumeDataSource feature
                                              gate to be enabled.
                                            type: string
                                      resources:
                                        description: >-
                                          resources represents the minimum
                                          resources the volume should have. If
                                          RecoverVolumeExpansionFailure feature is
                                          enabled users are allowed to specify
                                          resource requirements that are lower
                                          than previous value but must still be
                                          higher than capacity recorded in the
                                          status field of the claim. More info:
                                          https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                        type: object
                                        properties:
                                          claims:
                                            description: >-
                                              Claims lists the names of resources,
                                              defined in spec.resourceClaims, that are
                                              used by this container. 
                                               This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                                               This field is immutable. It can only be set for containers.
                                            type: array
                                            items:
                                              description: >-
                                                ResourceClaim references one entry in
                                                PodSpec.ResourceClaims.
                                              type: object
                                              required:
                                                - name
                                              properties:
                                                name:
                                                  description: >-
                                                    Name must match the name of one entry in
                                                    pod.spec.resourceClaims of the Pod where
                                                    this field is used. It makes that
                                                    resource available inside a container.
                                                  type: string
                                            x-kubernetes-list-map-keys:
                                              - name
                                            x-kubernetes-list-type: map
                                          limits:
                                            description: >-
                                              Limits describes the maximum amount of
                                              compute resources allowed. More info:
                                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                            additionalProperties:
                                              pattern: >-
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              x-kubernetes-int-or-string: true
                                          requests:
                                            description: >-
                                              Requests describes the minimum amount of
                                              compute resources required. If Requests
                                              is omitted for a container, it defaults
                                              to Limits if that is explicitly
                                              specified, otherwise to an
                                              implementation-defined value. Requests
                                              cannot exceed Limits. More info:
                                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                            additionalProperties:
                                              pattern: >-
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              x-kubernetes-int-or-string: true
                                      selector:
                                        description: >-
                                          selector is a label query over volumes
                                          to consider for binding.
                                        type: object
                                        properties:
                                          matchExpressions:
                                            description: >-
                                              matchExpressions is a list of label
                                              selector requirements. The requirements
                                              are ANDed.
                                            type: array
                                            items:
                                              description: >-
                                                A label selector requirement is a
                                                selector that contains values, a key,
                                                and an operator that relates the key and
                                                values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: >-
                                                    key is the label key that the selector
                                                    applies to.
                                                  type: string
                                                operator:
                                                  description: >-
                                                    operator represents a key's relationship
                                                    to a set of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: >-
                                                    values is an array of string values. If
                                                    the operator is In or NotIn, the values
                                                    array must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the values
                                                    array must be empty. This array is
                                                    replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                          matchLabels:
                                            description: >-
                                              matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the
                                              matchLabels map is equivalent to an
                                              element of matchExpressions, whose key
                                              field is "key", the operator is "In",
                                              and the values array contains only
                                              "value". The requirements are ANDed.
                                            type: object
                                            additionalProperties:
                                              type: string
                                      storageClassName:
                                        description: >-
                                          storageClassName is the name of the
                                          StorageClass required by the claim. More
                                          info:
                                          https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                        type: string
                                      volumeMode:
                                        description: >-
                                          volumeMode defines what type of volume
                                          is required by the claim. Value of
                                          Filesystem is implied when not included
                                          in claim spec.
                                        type: string
                                      volumeName:
                                        description: >-
                                          volumeName is the binding reference to
                                          the PersistentVolume backing this claim.
                                        type: string
                          flocker:
                            description: >-
                              flocker represents a Flocker volume attached to a
                              kubelet's host machine. This depends on the
                              Flocker control service being running
                            type: object
                            properties:
                              datasetName:
                                description: >-
                                  datasetName is Name of the dataset stored as
                                  metadata -> name on the dataset for Flocker
                                  should be considered as deprecated
                                type: string
                              datasetUUID:
                                description: >-
                                  datasetUUID is the UUID of the dataset. This
                                  is unique identifier of a Flocker dataset
                                type: string
                          storageos:
                            description: >-
                              storageOS represents a StorageOS volume attached
                              and mounted on Kubernetes nodes.
                            type: object
                            properties:
                              fsType:
                                description: >-
                                  fsType is the filesystem type to mount. Must
                                  be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              readOnly:
                                description: >-
                                  readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting
                                  in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: >-
                                  secretRef specifies the secret to use for
                                  obtaining the StorageOS API credentials.  If
                                  not specified, default values will be
                                  attempted.
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              volumeName:
                                description: >-
                                  volumeName is the human-readable name of the
                                  StorageOS volume.  Volume names are only
                                  unique within a namespace.
                                type: string
                              volumeNamespace:
                                description: >-
                                  volumeNamespace specifies the scope of the
                                  volume within StorageOS.  If no namespace is
                                  specified then the Pod's namespace will be
                                  used.  This allows the Kubernetes name scoping
                                  to be mirrored within StorageOS for tighter
                                  integration. Set VolumeName to any name to
                                  override the default behaviour. Set to
                                  "default" if you are not using namespaces
                                  within StorageOS. Namespaces that do not
                                  pre-exist within StorageOS will be created.
                                type: string
                    logFormat:
                      description: >-
                        LogFormat describes the log format that should be used
                        by the Repo Server. Defaults to ArgoCDDefaultLogFormat
                        if not configured. Valid options are text or json.
                      type: string
                    image:
                      description: Image is the ArgoCD Repo Server container image.
                      type: string
                    replicas:
                      description: >-
                        Replicas defines the number of replicas for
                        argocd-repo-server. Value should be greater than or
                        equal to 0. Default is nil.
                      type: integer
                      format: int32
                sourceNamespaces:
                  description: >-
                    SourceNamespaces defines the namespaces application
                    resources are allowed to be created in
                  type: array
                  items:
                    type: string
                resourceExclusions:
                  description: >-
                    ResourceExclusions is used to completely ignore entire
                    classes of resource group/kinds.
                  type: string
                resourceHealthChecks:
                  description: >-
                    ResourceHealthChecks customizes resource health check
                    behavior.
                  type: array
                  items:
                    description: Resource Customization for custom health check
                    type: object
                    properties:
                      check:
                        type: string
                      group:
                        type: string
                      kind:
                        type: string
                helpChatURL:
                  description: >-
                    HelpChatURL is the URL for getting chat help, this will
                    typically be your Slack channel for support.
                  type: string
                resourceIgnoreDifferences:
                  description: >-
                    ResourceIgnoreDifferences customizes resource ignore
                    difference behavior.
                  type: object
                  properties:
                    all:
                      type: object
                      properties:
                        jqPathExpressions:
                          type: array
                          items:
                            type: string
                        jsonPointers:
                          type: array
                          items:
                            type: string
                        managedFieldsManagers:
                          type: array
                          items:
                            type: string
                    resourceIdentifiers:
                      type: array
                      items:
                        description: Resource Customization fields for ignore difference
                        type: object
                        properties:
                          customization:
                            type: object
                            properties:
                              jqPathExpressions:
                                type: array
                                items:
                                  type: string
                              jsonPointers:
                                type: array
                                items:
                                  type: string
                              managedFieldsManagers:
                                type: array
                                items:
                                  type: string
                          group:
                            type: string
                          kind:
                            type: string
                dex:
                  description: >-
                    Deprecated field. Support dropped in v1beta1 version. Dex
                    defines the Dex server options for ArgoCD.
                  type: object
                  properties:
                    config:
                      description: Config is the dex connector configuration.
                      type: string
                    groups:
                      description: >-
                        Optional list of required groups a user must be a member
                        of
                      type: array
                      items:
                        type: string
                    image:
                      description: Image is the Dex container image.
                      type: string
                    openShiftOAuth:
                      description: >-
                        OpenShiftOAuth enables OpenShift OAuth authentication
                        for the Dex server.
                      type: boolean
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for Dex.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    version:
                      description: Version is the Dex container image tag.
                      type: string
                version:
                  description: >-
                    Version is the tag to use with the ArgoCD container image
                    for all ArgoCD components.
                  type: string
                ha:
                  description: >-
                    HA options for High Availability support for the Redis
                    component.
                  type: object
                  required:
                    - enabled
                  properties:
                    enabled:
                      description: Enabled will toggle HA support globally for Argo CD.
                      type: boolean
                    redisProxyImage:
                      description: RedisProxyImage is the Redis HAProxy container image.
                      type: string
                    redisProxyVersion:
                      description: >-
                        RedisProxyVersion is the Redis HAProxy container image
                        tag.
                      type: string
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for HA.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                kustomizeBuildOptions:
                  description: >-
                    KustomizeBuildOptions is used to specify build
                    options/parameters to use with `kustomize build`.
                  type: string
                oidcConfig:
                  description: >-
                    OIDCConfig is the OIDC configuration as an alternative to
                    dex.
                  type: string
                tls:
                  description: TLS defines the TLS options for ArgoCD.
                  type: object
                  properties:
                    ca:
                      description: CA defines the CA options.
                      type: object
                      properties:
                        configMapName:
                          description: >-
                            ConfigMapName is the name of the ConfigMap
                            containing the CA Certificate.
                          type: string
                        secretName:
                          description: >-
                            SecretName is the name of the Secret containing the
                            CA Certificate and Key.
                          type: string
                    initialCerts:
                      description: >-
                        InitialCerts defines custom TLS certificates upon
                        creation of the cluster for connecting Git repositories
                        via HTTPS.
                      type: object
                      additionalProperties:
                        type: string
                image:
                  description: >-
                    Image is the ArgoCD container image for all ArgoCD
                    components.
                  type: string
                redis:
                  description: Redis defines the Redis server options for ArgoCD.
                  type: object
                  properties:
                    autotls:
                      description: >-
                        AutoTLS specifies the method to use for automatic TLS
                        configuration for the redis server The value specified
                        here can currently be: - openshift - Use the OpenShift
                        service CA to request TLS config
                      type: string
                    disableTLSVerification:
                      description: >-
                        DisableTLSVerification defines whether redis server API
                        should be accessed using strict TLS validation
                      type: boolean
                    image:
                      description: Image is the Redis container image.
                      type: string
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for Redis.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    version:
                      description: Version is the Redis container image tag.
                      type: string
                configManagementPlugins:
                  description: >-
                    ConfigManagementPlugins is used to specify additional config
                    management plugins.
                  type: string
                usersAnonymousEnabled:
                  description: >-
                    UsersAnonymousEnabled toggles anonymous user access. The
                    anonymous users get default role permissions specified
                    argocd-rbac-cm.
                  type: boolean
                controller:
                  description: >-
                    Controller defines the Application Controller options for
                    ArgoCD.
                  type: object
                  properties:
                    appSync:
                      description: >-
                        AppSync is used to control the sync frequency, by
                        default the ArgoCD controller polls Git every 3m. 
                         Set this to a duration, e.g. 10m or 600s to control the synchronisation frequency.
                      type: string
                    env:
                      description: >-
                        Env lets you specify environment for application
                        controller pods
                      type: array
                      items:
                        description: >-
                          EnvVar represents an environment variable present in a
                          Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: >-
                              Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: >-
                              Variable references $(VAR_NAME) are expanded using
                              the previously defined environment variables in
                              the container and any service environment
                              variables. If a variable cannot be resolved, the
                              reference in the input string will be unchanged.
                              Double $$ are reduced to a single $, which allows
                              for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal
                              "$(VAR_NAME)". Escaped references will never be
                              expanded, regardless of whether the variable
                              exists or not. Defaults to "".
                            type: string
                          valueFrom:
                            description: >-
                              Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the ConfigMap or its key
                                      must be defined
                                    type: boolean
                              fieldRef:
                                description: >-
                                  Selects a field of the pod: supports
                                  metadata.name, metadata.namespace,
                                  `metadata.labels['<KEY>']`,
                                  `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP, status.podIPs.
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: >-
                                      Version of the schema the FieldPath is
                                      written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: >-
                                      Path of the field to select in the
                                      specified API version.
                                    type: string
                              resourceFieldRef:
                                description: >-
                                  Selects a resource of the container: only
                                  resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage,
                                  requests.cpu, requests.memory and
                                  requests.ephemeral-storage) are currently
                                  supported.
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: >-
                                      Container name: required for volumes,
                                      optional for env vars
                                    type: string
                                  divisor:
                                    description: >-
                                      Specifies the output format of the exposed
                                      resources, defaults to "1"
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: >-
                                  Selects a key of a secret in the pod's
                                  namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: >-
                                      The key of the secret to select from. 
                                      Must be a valid secret key.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the Secret or its key must
                                      be defined
                                    type: boolean
                    logFormat:
                      description: >-
                        LogFormat refers to the log format used by the
                        Application Controller component. Defaults to
                        ArgoCDDefaultLogFormat if not configured. Valid options
                        are text or json.
                      type: string
                    logLevel:
                      description: >-
                        LogLevel refers to the log level used by the Application
                        Controller component. Defaults to ArgoCDDefaultLogLevel
                        if not configured. Valid options are debug, info, error,
                        and warn.
                      type: string
                    parallelismLimit:
                      description: >-
                        ParallelismLimit defines the limit for parallel kubectl
                        operations
                      type: integer
                      format: int32
                    processors:
                      description: >-
                        Processors contains the options for the Application
                        Controller processors.
                      type: object
                      properties:
                        operation:
                          description: >-
                            Operation is the number of application operation
                            processors.
                          type: integer
                          format: int32
                        status:
                          description: >-
                            Status is the number of application status
                            processors.
                          type: integer
                          format: int32
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for the Application Controller.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    sharding:
                      description: >-
                        Sharding contains the options for the Application
                        Controller sharding configuration.
                      type: object
                      properties:
                        clustersPerShard:
                          description: >-
                            ClustersPerShard defines the maximum number of
                            clusters managed by each argocd shard
                          type: integer
                          format: int32
                          minimum: 1
                        dynamicScalingEnabled:
                          description: >-
                            DynamicScalingEnabled defines whether dynamic
                            scaling should be enabled for Application Controller
                            component
                          type: boolean
                        enabled:
                          description: >-
                            Enabled defines whether sharding should be enabled
                            on the Application Controller component.
                          type: boolean
                        maxShards:
                          description: >-
                            MaxShards defines the maximum number of shards at
                            any given point
                          type: integer
                          format: int32
                        minShards:
                          description: >-
                            MinShards defines the minimum number of shards at
                            any given point
                          type: integer
                          format: int32
                          minimum: 1
                        replicas:
                          description: >-
                            Replicas defines the number of replicas to run in
                            the Application controller shard.
                          type: integer
                          format: int32
            status:
              description: ArgoCDStatus defines the observed state of ArgoCD
              type: object
              properties:
                redisTLSChecksum:
                  description: >-
                    RedisTLSChecksum contains the SHA256 checksum of the latest
                    known state of tls.crt and tls.key in the
                    argocd-operator-redis-tls secret.
                  type: string
                server:
                  description: >-
                    Server is a simple, high-level summary of where the Argo CD
                    server component is in its lifecycle. There are four
                    possible server values: Pending: The Argo CD server
                    component has been accepted by the Kubernetes system, but
                    one or more of the required resources have not been created.
                    Running: All of the required Pods for the Argo CD server
                    component are in a Ready state. Failed: At least one of the 
                    Argo CD server component Pods had a failure. Unknown: The
                    state of the Argo CD server component could not be obtained.
                  type: string
                notificationsController:
                  description: >-
                    NotificationsController is a simple, high-level summary of
                    where the Argo CD notifications controller component is in
                    its lifecycle. There are four possible
                    NotificationsController values: Pending: The Argo CD
                    notifications controller component has been accepted by the
                    Kubernetes system, but one or more of the required resources
                    have not been created. Running: All of the required Pods for
                    the Argo CD notifications controller component are in a
                    Ready state. Failed: At least one of the  Argo CD
                    notifications controller component Pods had a failure.
                    Unknown: The state of the Argo CD notifications controller
                    component could not be obtained.
                  type: string
                host:
                  description: Host is the hostname of the Ingress.
                  type: string
                applicationController:
                  description: >-
                    ApplicationController is a simple, high-level summary of
                    where the Argo CD application controller component is in its
                    lifecycle. There are four possible ApplicationController
                    values: Pending: The Argo CD application controller
                    component has been accepted by the Kubernetes system, but
                    one or more of the required resources have not been created.
                    Running: All of the required Pods for the Argo CD
                    application controller component are in a Ready state.
                    Failed: At least one of the  Argo CD application controller
                    component Pods had a failure. Unknown: The state of the Argo
                    CD application controller component could not be obtained.
                  type: string
                repoTLSChecksum:
                  description: >-
                    RepoTLSChecksum contains the SHA256 checksum of the latest
                    known state of tls.crt and tls.key in the
                    argocd-repo-server-tls secret.
                  type: string
                applicationSetController:
                  description: >-
                    ApplicationSetController is a simple, high-level summary of
                    where the Argo CD applicationSet controller component is in
                    its lifecycle. There are four possible
                    ApplicationSetController values: Pending: The Argo CD
                    applicationSet controller component has been accepted by the
                    Kubernetes system, but one or more of the required resources
                    have not been created. Running: All of the required Pods for
                    the Argo CD applicationSet controller component are in a
                    Ready state. Failed: At least one of the  Argo CD
                    applicationSet controller component Pods had a failure.
                    Unknown: The state of the Argo CD applicationSet controller
                    component could not be obtained.
                  type: string
                sso:
                  description: >-
                    SSO is a simple, high-level summary of where the Argo CD
                    SSO(Dex/Keycloak) component is in its lifecycle. There are
                    four possible sso values: Pending: The Argo CD SSO component
                    has been accepted by the Kubernetes system, but one or more
                    of the required resources have not been created. Running:
                    All of the required Pods for the Argo CD SSO component are
                    in a Ready state. Failed: At least one of the  Argo CD SSO
                    component Pods had a failure. Unknown: The state of the Argo
                    CD SSO component could not be obtained.
                  type: string
                repo:
                  description: >-
                    Repo is a simple, high-level summary of where the Argo CD
                    Repo component is in its lifecycle. There are four possible
                    repo values: Pending: The Argo CD Repo component has been
                    accepted by the Kubernetes system, but one or more of the
                    required resources have not been created. Running: All of
                    the required Pods for the Argo CD Repo component are in a
                    Ready state. Failed: At least one of the  Argo CD Repo
                    component Pods had a failure. Unknown: The state of the Argo
                    CD Repo component could not be obtained.
                  type: string
                phase:
                  description: >-
                    Phase is a simple, high-level summary of where the ArgoCD is
                    in its lifecycle. There are four possible phase values:
                    Pending: The ArgoCD has been accepted by the Kubernetes
                    system, but one or more of the required resources have not
                    been created. Available: All of the resources for the ArgoCD
                    are ready. Failed: At least one resource has experienced a
                    failure. Unknown: The state of the ArgoCD phase could not be
                    obtained.
                  type: string
                redis:
                  description: >-
                    Redis is a simple, high-level summary of where the Argo CD
                    Redis component is in its lifecycle. There are four possible
                    redis values: Pending: The Argo CD Redis component has been
                    accepted by the Kubernetes system, but one or more of the
                    required resources have not been created. Running: All of
                    the required Pods for the Argo CD Redis component are in a
                    Ready state. Failed: At least one of the  Argo CD Redis
                    component Pods had a failure. Unknown: The state of the Argo
                    CD Redis component could not be obtained.
                  type: string
      subresources:
        status: {}
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: ArgoCD is the Schema for the argocds API
          type: object
          properties:
            apiVersion:
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ArgoCDSpec defines the desired state of ArgoCD
              type: object
              properties:
                nodePlacement:
                  description: >-
                    NodePlacement defines NodeSelectors and Taints for Argo CD
                    workloads
                  type: object
                  properties:
                    nodeSelector:
                      description: >-
                        NodeSelector is a field of PodSpec, it is a map of key
                        value pairs used for node selection
                      type: object
                      additionalProperties:
                        type: string
                    tolerations:
                      description: >-
                        Tolerations allow the pods to schedule onto nodes with
                        matching taints
                      type: array
                      items:
                        description: >-
                          The pod this Toleration is attached to tolerates any
                          taint that matches the triple <key,value,effect> using
                          the matching operator <operator>.
                        type: object
                        properties:
                          effect:
                            description: >-
                              Effect indicates the taint effect to match. Empty
                              means match all taint effects. When specified,
                              allowed values are NoSchedule, PreferNoSchedule
                              and NoExecute.
                            type: string
                          key:
                            description: >-
                              Key is the taint key that the toleration applies
                              to. Empty means match all taint keys. If the key
                              is empty, operator must be Exists; this
                              combination means to match all values and all
                              keys.
                            type: string
                          operator:
                            description: >-
                              Operator represents a key's relationship to the
                              value. Valid operators are Exists and Equal.
                              Defaults to Equal. Exists is equivalent to
                              wildcard for value, so that a pod can tolerate all
                              taints of a particular category.
                            type: string
                          tolerationSeconds:
                            description: >-
                              TolerationSeconds represents the period of time
                              the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the
                              taint. By default, it is not set, which means
                              tolerate the taint forever (do not evict). Zero
                              and negative values will be treated as 0 (evict
                              immediately) by the system.
                            type: integer
                            format: int64
                          value:
                            description: >-
                              Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be
                              empty, otherwise just a regular string.
                            type: string
                server:
                  description: Server defines the options for the ArgoCD Server component.
                  type: object
                  properties:
                    logLevel:
                      description: >-
                        LogLevel refers to the log level to be used by the
                        ArgoCD Server component. Defaults to
                        ArgoCDDefaultLogLevel if not set.  Valid options are
                        debug, info, error, and warn.
                      type: string
                    enabled:
                      description: >-
                        Enabled is the flag to enable ArgoCD Server during
                        ArgoCD installation. (optional, default `true`)
                      type: boolean
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for the Argo CD server component.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    host:
                      description: Host is the hostname to use for Ingress/Route resources.
                      type: string
                    route:
                      description: >-
                        Route defines the desired state for an OpenShift Route
                        for the Argo CD Server component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: >-
                            Annotations is the map of annotations to use for the
                            Route resource.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: >-
                            Enabled will toggle the creation of the OpenShift
                            Route.
                          type: boolean
                        labels:
                          description: >-
                            Labels is the map of labels to use for the Route
                            resource
                          type: object
                          additionalProperties:
                            type: string
                        path:
                          description: >-
                            Path the router watches for, to route traffic for to
                            the service.
                          type: string
                        tls:
                          description: >-
                            TLS provides the ability to configure certificates
                            and termination for the Route.
                          type: object
                          required:
                            - termination
                          properties:
                            caCertificate:
                              description: >-
                                caCertificate provides the cert authority
                                certificate contents
                              type: string
                            certificate:
                              description: certificate provides certificate contents
                              type: string
                            destinationCACertificate:
                              description: >-
                                destinationCACertificate provides the contents
                                of the ca certificate of the final destination. 
                                When using reencrypt termination this file
                                should be provided in order to have routers use
                                it for health checks on the secure connection.
                                If this field is not specified, the router may
                                provide its own destination CA and perform
                                hostname validation using the short service name
                                (service.namespace.svc), which allows
                                infrastructure generated certificates to
                                automatically verify.
                              type: string
                            insecureEdgeTerminationPolicy:
                              description: >-
                                insecureEdgeTerminationPolicy indicates the
                                desired behavior for insecure connections to a
                                route. While each router may make its own
                                decisions on which ports to expose, this is
                                normally port 80. 
                                 * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port.
                              type: string
                            key:
                              description: key provides key file contents
                              type: string
                            termination:
                              description: termination indicates termination type.
                              type: string
                        wildcardPolicy:
                          description: >-
                            WildcardPolicy if any for the route. Currently only
                            'Subdomain' or 'None' is allowed.
                          type: string
                    env:
                      description: Env lets you specify environment for API server pods
                      type: array
                      items:
                        description: >-
                          EnvVar represents an environment variable present in a
                          Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: >-
                              Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: >-
                              Variable references $(VAR_NAME) are expanded using
                              the previously defined environment variables in
                              the container and any service environment
                              variables. If a variable cannot be resolved, the
                              reference in the input string will be unchanged.
                              Double $$ are reduced to a single $, which allows
                              for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal
                              "$(VAR_NAME)". Escaped references will never be
                              expanded, regardless of whether the variable
                              exists or not. Defaults to "".
                            type: string
                          valueFrom:
                            description: >-
                              Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the ConfigMap or its key
                                      must be defined
                                    type: boolean
                              fieldRef:
                                description: >-
                                  Selects a field of the pod: supports
                                  metadata.name, metadata.namespace,
                                  `metadata.labels['<KEY>']`,
                                  `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP, status.podIPs.
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: >-
                                      Version of the schema the FieldPath is
                                      written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: >-
                                      Path of the field to select in the
                                      specified API version.
                                    type: string
                              resourceFieldRef:
                                description: >-
                                  Selects a resource of the container: only
                                  resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage,
                                  requests.cpu, requests.memory and
                                  requests.ephemeral-storage) are currently
                                  supported.
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: >-
                                      Container name: required for volumes,
                                      optional for env vars
                                    type: string
                                  divisor:
                                    description: >-
                                      Specifies the output format of the exposed
                                      resources, defaults to "1"
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: >-
                                  Selects a key of a secret in the pod's
                                  namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: >-
                                      The key of the secret to select from. 
                                      Must be a valid secret key.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the Secret or its key must
                                      be defined
                                    type: boolean
                    ingress:
                      description: >-
                        Ingress defines the desired state for an Ingress for the
                        Argo CD Server component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: >-
                            Annotations is the map of annotations to apply to
                            the Ingress.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: Enabled will toggle the creation of the Ingress.
                          type: boolean
                        ingressClassName:
                          description: IngressClassName for the Ingress resource.
                          type: string
                        path:
                          description: Path used for the Ingress resource.
                          type: string
                        tls:
                          description: >-
                            TLS configuration. Currently the Ingress only
                            supports a single TLS port, 443. If multiple members
                            of this list specify different hosts, they will be
                            multiplexed on the same port according to the
                            hostname specified through the SNI TLS extension, if
                            the ingress controller fulfilling the ingress
                            supports SNI.
                          type: array
                          items:
                            description: >-
                              IngressTLS describes the transport layer security
                              associated with an ingress.
                            type: object
                            properties:
                              hosts:
                                description: >-
                                  hosts is a list of hosts included in the TLS
                                  certificate. The values in this list must
                                  match the name/s used in the tlsSecret.
                                  Defaults to the wildcard host setting for the
                                  loadbalancer controller fulfilling this
                                  Ingress, if left unspecified.
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                              secretName:
                                description: >-
                                  secretName is the name of the secret used to
                                  terminate TLS traffic on port 443. Field is
                                  left optional to allow TLS routing based on
                                  SNI hostname alone. If the SNI host in a
                                  listener conflicts with the "Host" header
                                  field used by an IngressRule, the SNI host is
                                  used for termination and value of the "Host"
                                  header is used for routing.
                                type: string
                    service:
                      description: >-
                        Service defines the options for the Service backing the
                        ArgoCD Server component.
                      type: object
                      required:
                        - type
                      properties:
                        type:
                          description: >-
                            Type is the ServiceType to use for the Service
                            resource.
                          type: string
                    extraCommandArgs:
                      description: >-
                        Extra Command arguments that would append to the Argo CD
                        server command. ExtraCommandArgs will not be added, if
                        one of these commands is already part of the server
                        command with same or different value.
                      type: array
                      items:
                        type: string
                    logFormat:
                      description: >-
                        LogFormat refers to the log level to be used by the
                        ArgoCD Server component. Defaults to
                        ArgoCDDefaultLogFormat if not configured. Valid options
                        are text or json.
                      type: string
                    autoscale:
                      description: >-
                        Autoscale defines the autoscale options for the Argo CD
                        Server component.
                      type: object
                      required:
                        - enabled
                      properties:
                        enabled:
                          description: >-
                            Enabled will toggle autoscaling support for the Argo
                            CD Server component.
                          type: boolean
                        hpa:
                          description: >-
                            HPA defines the HorizontalPodAutoscaler options for
                            the Argo CD Server component.
                          type: object
                          required:
                            - maxReplicas
                            - scaleTargetRef
                          properties:
                            maxReplicas:
                              description: >-
                                maxReplicas is the upper limit for the number of
                                pods that can be set by the autoscaler; cannot
                                be smaller than MinReplicas.
                              type: integer
                              format: int32
                            minReplicas:
                              description: >-
                                minReplicas is the lower limit for the number of
                                replicas to which the autoscaler can scale
                                down.  It defaults to 1 pod.  minReplicas is
                                allowed to be 0 if the alpha feature gate
                                HPAScaleToZero is enabled and at least one
                                Object or External metric is configured. 
                                Scaling is active as long as at least one metric
                                value is available.
                              type: integer
                              format: int32
                            scaleTargetRef:
                              description: >-
                                reference to scaled resource; horizontal pod
                                autoscaler will learn the current resource
                                consumption and will set the desired number of
                                pods by using its Scale subresource.
                              type: object
                              required:
                                - kind
                                - name
                              properties:
                                apiVersion:
                                  description: >-
                                    apiVersion is the API version of the
                                    referent
                                  type: string
                                kind:
                                  description: >-
                                    kind is the kind of the referent; More info:
                                    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                  type: string
                                name:
                                  description: >-
                                    name is the name of the referent; More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                            targetCPUUtilizationPercentage:
                              description: >-
                                targetCPUUtilizationPercentage is the target
                                average CPU utilization (represented as a
                                percentage of requested CPU) over all the pods;
                                if not specified the default autoscaling policy
                                will be used.
                              type: integer
                              format: int32
                    replicas:
                      description: >-
                        Replicas defines the number of replicas for
                        argocd-server. Default is nil. Value should be greater
                        than or equal to 0. Value will be ignored if Autoscaler
                        is enabled.
                      type: integer
                      format: int32
                    insecure:
                      description: Insecure toggles the insecure flag.
                      type: boolean
                    grpc:
                      description: >-
                        GRPC defines the state for the Argo CD Server GRPC
                        options.
                      type: object
                      properties:
                        host:
                          description: >-
                            Host is the hostname to use for Ingress/Route
                            resources.
                          type: string
                        ingress:
                          description: >-
                            Ingress defines the desired state for the Argo CD
                            Server GRPC Ingress.
                          type: object
                          required:
                            - enabled
                          properties:
                            annotations:
                              description: >-
                                Annotations is the map of annotations to apply
                                to the Ingress.
                              type: object
                              additionalProperties:
                                type: string
                            enabled:
                              description: Enabled will toggle the creation of the Ingress.
                              type: boolean
                            ingressClassName:
                              description: IngressClassName for the Ingress resource.
                              type: string
                            path:
                              description: Path used for the Ingress resource.
                              type: string
                            tls:
                              description: >-
                                TLS configuration. Currently the Ingress only
                                supports a single TLS port, 443. If multiple
                                members of this list specify different hosts,
                                they will be multiplexed on the same port
                                according to the hostname specified through the
                                SNI TLS extension, if the ingress controller
                                fulfilling the ingress supports SNI.
                              type: array
                              items:
                                description: >-
                                  IngressTLS describes the transport layer
                                  security associated with an ingress.
                                type: object
                                properties:
                                  hosts:
                                    description: >-
                                      hosts is a list of hosts included in the
                                      TLS certificate. The values in this list
                                      must match the name/s used in the
                                      tlsSecret. Defaults to the wildcard host
                                      setting for the loadbalancer controller
                                      fulfilling this Ingress, if left
                                      unspecified.
                                    type: array
                                    items:
                                      type: string
                                    x-kubernetes-list-type: atomic
                                  secretName:
                                    description: >-
                                      secretName is the name of the secret used
                                      to terminate TLS traffic on port 443.
                                      Field is left optional to allow TLS
                                      routing based on SNI hostname alone. If
                                      the SNI host in a listener conflicts with
                                      the "Host" header field used by an
                                      IngressRule, the SNI host is used for
                                      termination and value of the "Host" header
                                      is used for routing.
                                    type: string
                grafana:
                  description: Grafana defines the Grafana server options for ArgoCD.
                  type: object
                  required:
                    - enabled
                  properties:
                    enabled:
                      description: Enabled will toggle Grafana support globally for ArgoCD.
                      type: boolean
                    host:
                      description: Host is the hostname to use for Ingress/Route resources.
                      type: string
                    image:
                      description: Image is the Grafana container image.
                      type: string
                    ingress:
                      description: >-
                        Ingress defines the desired state for an Ingress for the
                        Grafana component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: >-
                            Annotations is the map of annotations to apply to
                            the Ingress.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: Enabled will toggle the creation of the Ingress.
                          type: boolean
                        ingressClassName:
                          description: IngressClassName for the Ingress resource.
                          type: string
                        path:
                          description: Path used for the Ingress resource.
                          type: string
                        tls:
                          description: >-
                            TLS configuration. Currently the Ingress only
                            supports a single TLS port, 443. If multiple members
                            of this list specify different hosts, they will be
                            multiplexed on the same port according to the
                            hostname specified through the SNI TLS extension, if
                            the ingress controller fulfilling the ingress
                            supports SNI.
                          type: array
                          items:
                            description: >-
                              IngressTLS describes the transport layer security
                              associated with an ingress.
                            type: object
                            properties:
                              hosts:
                                description: >-
                                  hosts is a list of hosts included in the TLS
                                  certificate. The values in this list must
                                  match the name/s used in the tlsSecret.
                                  Defaults to the wildcard host setting for the
                                  loadbalancer controller fulfilling this
                                  Ingress, if left unspecified.
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                              secretName:
                                description: >-
                                  secretName is the name of the secret used to
                                  terminate TLS traffic on port 443. Field is
                                  left optional to allow TLS routing based on
                                  SNI hostname alone. If the SNI host in a
                                  listener conflicts with the "Host" header
                                  field used by an IngressRule, the SNI host is
                                  used for termination and value of the "Host"
                                  header is used for routing.
                                type: string
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for Grafana.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    route:
                      description: >-
                        Route defines the desired state for an OpenShift Route
                        for the Grafana component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: >-
                            Annotations is the map of annotations to use for the
                            Route resource.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: >-
                            Enabled will toggle the creation of the OpenShift
                            Route.
                          type: boolean
                        labels:
                          description: >-
                            Labels is the map of labels to use for the Route
                            resource
                          type: object
                          additionalProperties:
                            type: string
                        path:
                          description: >-
                            Path the router watches for, to route traffic for to
                            the service.
                          type: string
                        tls:
                          description: >-
                            TLS provides the ability to configure certificates
                            and termination for the Route.
                          type: object
                          required:
                            - termination
                          properties:
                            caCertificate:
                              description: >-
                                caCertificate provides the cert authority
                                certificate contents
                              type: string
                            certificate:
                              description: certificate provides certificate contents
                              type: string
                            destinationCACertificate:
                              description: >-
                                destinationCACertificate provides the contents
                                of the ca certificate of the final destination. 
                                When using reencrypt termination this file
                                should be provided in order to have routers use
                                it for health checks on the secure connection.
                                If this field is not specified, the router may
                                provide its own destination CA and perform
                                hostname validation using the short service name
                                (service.namespace.svc), which allows
                                infrastructure generated certificates to
                                automatically verify.
                              type: string
                            insecureEdgeTerminationPolicy:
                              description: >-
                                insecureEdgeTerminationPolicy indicates the
                                desired behavior for insecure connections to a
                                route. While each router may make its own
                                decisions on which ports to expose, this is
                                normally port 80. 
                                 * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port.
                              type: string
                            key:
                              description: key provides key file contents
                              type: string
                            termination:
                              description: termination indicates termination type.
                              type: string
                        wildcardPolicy:
                          description: >-
                            WildcardPolicy if any for the route. Currently only
                            'Subdomain' or 'None' is allowed.
                          type: string
                    size:
                      description: Size is the replica count for the Grafana Deployment.
                      type: integer
                      format: int32
                    version:
                      description: Version is the Grafana container image tag.
                      type: string
                resourceInclusions:
                  description: >-
                    ResourceInclusions is used to only include specific
                    group/kinds in the reconciliation process.
                  type: string
                import:
                  description: Import is the import/restore options for ArgoCD.
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      description: Name of an ArgoCDExport from which to import data.
                      type: string
                    namespace:
                      description: >-
                        Namespace for the ArgoCDExport, defaults to the same
                        namespace as the ArgoCD.
                      type: string
                kustomizeVersions:
                  description: >-
                    KustomizeVersions is a listing of configured versions of
                    Kustomize to be made available within ArgoCD.
                  type: array
                  items:
                    description: >-
                      KustomizeVersionSpec is used to specify information about
                      a kustomize version to be used within ArgoCD.
                    type: object
                    properties:
                      path:
                        description: >-
                          Path is the path to a configured kustomize version on
                          the filesystem of your repo server.
                        type: string
                      version:
                        description: >-
                          Version is a configured kustomize version in the
                          format of vX.Y.Z
                        type: string
                resourceTrackingMethod:
                  description: >-
                    ResourceTrackingMethod defines how Argo CD should track
                    resources that it manages
                  type: string
                helpChatText:
                  description: >-
                    HelpChatText is the text for getting chat help, defaults to
                    "Chat now!"
                  type: string
                disableAdmin:
                  description: DisableAdmin will disable the admin user.
                  type: boolean
                monitoring:
                  description: >-
                    Monitoring defines whether workload status monitoring
                    configuration for this instance.
                  type: object
                  required:
                    - enabled
                  properties:
                    enabled:
                      description: >-
                        Enabled defines whether workload status monitoring is
                        enabled for this instance or not
                      type: boolean
                notifications:
                  description: >-
                    Notifications defines whether the Argo CD Notifications
                    controller should be installed.
                  type: object
                  required:
                    - enabled
                  properties:
                    enabled:
                      description: >-
                        Enabled defines whether argocd-notifications controller
                        should be deployed or not
                      type: boolean
                    env:
                      description: >-
                        Env let you specify environment variables for
                        Notifications pods
                      type: array
                      items:
                        description: >-
                          EnvVar represents an environment variable present in a
                          Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: >-
                              Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: >-
                              Variable references $(VAR_NAME) are expanded using
                              the previously defined environment variables in
                              the container and any service environment
                              variables. If a variable cannot be resolved, the
                              reference in the input string will be unchanged.
                              Double $$ are reduced to a single $, which allows
                              for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal
                              "$(VAR_NAME)". Escaped references will never be
                              expanded, regardless of whether the variable
                              exists or not. Defaults to "".
                            type: string
                          valueFrom:
                            description: >-
                              Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the ConfigMap or its key
                                      must be defined
                                    type: boolean
                              fieldRef:
                                description: >-
                                  Selects a field of the pod: supports
                                  metadata.name, metadata.namespace,
                                  `metadata.labels['<KEY>']`,
                                  `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP, status.podIPs.
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: >-
                                      Version of the schema the FieldPath is
                                      written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: >-
                                      Path of the field to select in the
                                      specified API version.
                                    type: string
                              resourceFieldRef:
                                description: >-
                                  Selects a resource of the container: only
                                  resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage,
                                  requests.cpu, requests.memory and
                                  requests.ephemeral-storage) are currently
                                  supported.
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: >-
                                      Container name: required for volumes,
                                      optional for env vars
                                    type: string
                                  divisor:
                                    description: >-
                                      Specifies the output format of the exposed
                                      resources, defaults to "1"
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: >-
                                  Selects a key of a secret in the pod's
                                  namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: >-
                                      The key of the secret to select from. 
                                      Must be a valid secret key.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the Secret or its key must
                                      be defined
                                    type: boolean
                    image:
                      description: Image is the Argo CD Notifications image (optional)
                      type: string
                    logLevel:
                      description: >-
                        LogLevel describes the log level that should be used by
                        the argocd-notifications. Defaults to
                        ArgoCDDefaultLogLevel if not set.  Valid options are
                        debug,info, error, and warn.
                      type: string
                    replicas:
                      description: >-
                        Replicas defines the number of replicas to run for
                        notifications-controller
                      type: integer
                      format: int32
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for Argo CD Notifications.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    version:
                      description: >-
                        Version is the Argo CD Notifications image tag.
                        (optional)
                      type: string
                prometheus:
                  description: Prometheus defines the Prometheus server options for ArgoCD.
                  type: object
                  required:
                    - enabled
                  properties:
                    enabled:
                      description: >-
                        Enabled will toggle Prometheus support globally for
                        ArgoCD.
                      type: boolean
                    host:
                      description: Host is the hostname to use for Ingress/Route resources.
                      type: string
                    ingress:
                      description: >-
                        Ingress defines the desired state for an Ingress for the
                        Prometheus component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: >-
                            Annotations is the map of annotations to apply to
                            the Ingress.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: Enabled will toggle the creation of the Ingress.
                          type: boolean
                        ingressClassName:
                          description: IngressClassName for the Ingress resource.
                          type: string
                        path:
                          description: Path used for the Ingress resource.
                          type: string
                        tls:
                          description: >-
                            TLS configuration. Currently the Ingress only
                            supports a single TLS port, 443. If multiple members
                            of this list specify different hosts, they will be
                            multiplexed on the same port according to the
                            hostname specified through the SNI TLS extension, if
                            the ingress controller fulfilling the ingress
                            supports SNI.
                          type: array
                          items:
                            description: >-
                              IngressTLS describes the transport layer security
                              associated with an ingress.
                            type: object
                            properties:
                              hosts:
                                description: >-
                                  hosts is a list of hosts included in the TLS
                                  certificate. The values in this list must
                                  match the name/s used in the tlsSecret.
                                  Defaults to the wildcard host setting for the
                                  loadbalancer controller fulfilling this
                                  Ingress, if left unspecified.
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                              secretName:
                                description: >-
                                  secretName is the name of the secret used to
                                  terminate TLS traffic on port 443. Field is
                                  left optional to allow TLS routing based on
                                  SNI hostname alone. If the SNI host in a
                                  listener conflicts with the "Host" header
                                  field used by an IngressRule, the SNI host is
                                  used for termination and value of the "Host"
                                  header is used for routing.
                                type: string
                    route:
                      description: >-
                        Route defines the desired state for an OpenShift Route
                        for the Prometheus component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: >-
                            Annotations is the map of annotations to use for the
                            Route resource.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: >-
                            Enabled will toggle the creation of the OpenShift
                            Route.
                          type: boolean
                        labels:
                          description: >-
                            Labels is the map of labels to use for the Route
                            resource
                          type: object
                          additionalProperties:
                            type: string
                        path:
                          description: >-
                            Path the router watches for, to route traffic for to
                            the service.
                          type: string
                        tls:
                          description: >-
                            TLS provides the ability to configure certificates
                            and termination for the Route.
                          type: object
                          required:
                            - termination
                          properties:
                            caCertificate:
                              description: >-
                                caCertificate provides the cert authority
                                certificate contents
                              type: string
                            certificate:
                              description: certificate provides certificate contents
                              type: string
                            destinationCACertificate:
                              description: >-
                                destinationCACertificate provides the contents
                                of the ca certificate of the final destination. 
                                When using reencrypt termination this file
                                should be provided in order to have routers use
                                it for health checks on the secure connection.
                                If this field is not specified, the router may
                                provide its own destination CA and perform
                                hostname validation using the short service name
                                (service.namespace.svc), which allows
                                infrastructure generated certificates to
                                automatically verify.
                              type: string
                            insecureEdgeTerminationPolicy:
                              description: >-
                                insecureEdgeTerminationPolicy indicates the
                                desired behavior for insecure connections to a
                                route. While each router may make its own
                                decisions on which ports to expose, this is
                                normally port 80. 
                                 * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port.
                              type: string
                            key:
                              description: key provides key file contents
                              type: string
                            termination:
                              description: termination indicates termination type.
                              type: string
                        wildcardPolicy:
                          description: >-
                            WildcardPolicy if any for the route. Currently only
                            'Subdomain' or 'None' is allowed.
                          type: string
                    size:
                      description: >-
                        Size is the replica count for the Prometheus
                        StatefulSet.
                      type: integer
                      format: int32
                initialSSHKnownHosts:
                  description: >-
                    InitialSSHKnownHosts defines the SSH known hosts data upon
                    creation of the cluster for connecting Git repositories via
                    SSH.
                  type: object
                  properties:
                    excludedefaulthosts:
                      description: >-
                        ExcludeDefaultHosts describes whether you would like to
                        include the default list of SSH Known Hosts provided by
                        ArgoCD.
                      type: boolean
                    keys:
                      description: >-
                        Keys describes a custom set of SSH Known Hosts that you
                        would like to have included in your ArgoCD server.
                      type: string
                gaTrackingID:
                  description: GATrackingID is the google analytics tracking ID to use.
                  type: string
                initialRepositories:
                  description: >-
                    InitialRepositories to configure Argo CD with upon creation
                    of the cluster.
                  type: string
                banner:
                  description: >-
                    Banner defines an additional banner to be displayed in Argo
                    CD UI
                  type: object
                  required:
                    - content
                  properties:
                    content:
                      description: Content defines the banner message content to display
                      type: string
                    url:
                      description: >-
                        URL defines an optional URL to be used as banner message
                        link
                      type: string
                gaAnonymizeUsers:
                  description: >-
                    GAAnonymizeUsers toggles user IDs being hashed before
                    sending to google analytics.
                  type: boolean
                resourceActions:
                  description: ResourceActions customizes resource action behavior.
                  type: array
                  items:
                    description: Resource Customization for custom action
                    type: object
                    properties:
                      action:
                        type: string
                      group:
                        type: string
                      kind:
                        type: string
                sso:
                  description: SSO defines the Single Sign-on configuration for Argo CD
                  type: object
                  properties:
                    dex:
                      description: >-
                        Dex contains the configuration for Argo CD dex
                        authentication
                      type: object
                      properties:
                        config:
                          description: Config is the dex connector configuration.
                          type: string
                        env:
                          description: Env lets you specify environment variables for Dex.
                          type: array
                          items:
                            description: >-
                              EnvVar represents an environment variable present
                              in a Container.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name of the environment variable. Must be a
                                  C_IDENTIFIER.
                                type: string
                              value:
                                description: >-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previously defined environment
                                  variables in the container and any service
                                  environment variables. If a variable cannot be
                                  resolved, the reference in the input string
                                  will be unchanged. Double $$ are reduced to a
                                  single $, which allows for escaping the
                                  $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                  produce the string literal "$(VAR_NAME)".
                                  Escaped references will never be expanded,
                                  regardless of whether the variable exists or
                                  not. Defaults to "".
                                type: string
                              valueFrom:
                                description: >-
                                  Source for the environment variable's value.
                                  Cannot be used if value is not empty.
                                type: object
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    type: object
                                    required:
                                      - key
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: >-
                                          Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields.
                                          apiVersion, kind, uid?
                                        type: string
                                      optional:
                                        description: >-
                                          Specify whether the ConfigMap or its key
                                          must be defined
                                        type: boolean
                                  fieldRef:
                                    description: >-
                                      Selects a field of the pod: supports
                                      metadata.name, metadata.namespace,
                                      `metadata.labels['<KEY>']`,
                                      `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName,
                                      status.hostIP, status.podIP,
                                      status.podIPs.
                                    type: object
                                    required:
                                      - fieldPath
                                    properties:
                                      apiVersion:
                                        description: >-
                                          Version of the schema the FieldPath is
                                          written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: >-
                                          Path of the field to select in the
                                          specified API version.
                                        type: string
                                  resourceFieldRef:
                                    description: >-
                                      Selects a resource of the container: only
                                      resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage,
                                      requests.cpu, requests.memory and
                                      requests.ephemeral-storage) are currently
                                      supported.
                                    type: object
                                    required:
                                      - resource
                                    properties:
                                      containerName:
                                        description: >-
                                          Container name: required for volumes,
                                          optional for env vars
                                        type: string
                                      divisor:
                                        description: >-
                                          Specifies the output format of the
                                          exposed resources, defaults to "1"
                                        pattern: >-
                                          ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                  secretKeyRef:
                                    description: >-
                                      Selects a key of a secret in the pod's
                                      namespace
                                    type: object
                                    required:
                                      - key
                                    properties:
                                      key:
                                        description: >-
                                          The key of the secret to select from. 
                                          Must be a valid secret key.
                                        type: string
                                      name:
                                        description: >-
                                          Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields.
                                          apiVersion, kind, uid?
                                        type: string
                                      optional:
                                        description: >-
                                          Specify whether the Secret or its key
                                          must be defined
                                        type: boolean
                        groups:
                          description: >-
                            Optional list of required groups a user must be a
                            member of
                          type: array
                          items:
                            type: string
                        image:
                          description: Image is the Dex container image.
                          type: string
                        openShiftOAuth:
                          description: >-
                            OpenShiftOAuth enables OpenShift OAuth
                            authentication for the Dex server.
                          type: boolean
                        resources:
                          description: >-
                            Resources defines the Compute Resources required by
                            the container for Dex.
                          type: object
                          properties:
                            claims:
                              description: >-
                                Claims lists the names of resources, defined in
                                spec.resourceClaims, that are used by this
                                container. 
                                 This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                                 This field is immutable. It can only be set for containers.
                              type: array
                              items:
                                description: >-
                                  ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                type: object
                                required:
                                  - name
                                properties:
                                  name:
                                    description: >-
                                      Name must match the name of one entry in
                                      pod.spec.resourceClaims of the Pod where
                                      this field is used. It makes that resource
                                      available inside a container.
                                    type: string
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              description: >-
                                Limits describes the maximum amount of compute
                                resources allowed. More info:
                                https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                              additionalProperties:
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                anyOf:
                                  - type: integer
                                  - type: string
                                x-kubernetes-int-or-string: true
                            requests:
                              description: >-
                                Requests describes the minimum amount of compute
                                resources required. If Requests is omitted for a
                                container, it defaults to Limits if that is
                                explicitly specified, otherwise to an
                                implementation-defined value. Requests cannot
                                exceed Limits. More info:
                                https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                              additionalProperties:
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                anyOf:
                                  - type: integer
                                  - type: string
                                x-kubernetes-int-or-string: true
                        version:
                          description: Version is the Dex container image tag.
                          type: string
                    keycloak:
                      description: >-
                        Keycloak contains the configuration for Argo CD keycloak
                        authentication
                      type: object
                      properties:
                        image:
                          description: Image is the Keycloak container image.
                          type: string
                        resources:
                          description: >-
                            Resources defines the Compute Resources required by
                            the container for Keycloak.
                          type: object
                          properties:
                            claims:
                              description: >-
                                Claims lists the names of resources, defined in
                                spec.resourceClaims, that are used by this
                                container. 
                                 This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                                 This field is immutable. It can only be set for containers.
                              type: array
                              items:
                                description: >-
                                  ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                type: object
                                required:
                                  - name
                                properties:
                                  name:
                                    description: >-
                                      Name must match the name of one entry in
                                      pod.spec.resourceClaims of the Pod where
                                      this field is used. It makes that resource
                                      available inside a container.
                                    type: string
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            limits:
                              description: >-
                                Limits describes the maximum amount of compute
                                resources allowed. More info:
                                https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                              additionalProperties:
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                anyOf:
                                  - type: integer
                                  - type: string
                                x-kubernetes-int-or-string: true
                            requests:
                              description: >-
                                Requests describes the minimum amount of compute
                                resources required. If Requests is omitted for a
                                container, it defaults to Limits if that is
                                explicitly specified, otherwise to an
                                implementation-defined value. Requests cannot
                                exceed Limits. More info:
                                https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                              additionalProperties:
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                anyOf:
                                  - type: integer
                                  - type: string
                                x-kubernetes-int-or-string: true
                        rootCA:
                          description: >-
                            Custom root CA certificate for communicating with
                            the Keycloak OIDC provider
                          type: string
                        verifyTLS:
                          description: >-
                            VerifyTLS set to false disables strict TLS
                            validation.
                          type: boolean
                        version:
                          description: Version is the Keycloak container image tag.
                          type: string
                    provider:
                      description: >-
                        Provider installs and configures the given SSO Provider
                        with Argo CD.
                      type: string
                statusBadgeEnabled:
                  description: StatusBadgeEnabled toggles application status badge feature.
                  type: boolean
                applicationInstanceLabelKey:
                  description: >-
                    ApplicationInstanceLabelKey is the key name where Argo CD
                    injects the app name as a tracking label.
                  type: string
                applicationSet:
                  description: >-
                    ArgoCDApplicationSet defines whether the Argo CD
                    ApplicationSet controller should be installed.
                  type: object
                  properties:
                    logLevel:
                      description: >-
                        LogLevel describes the log level that should be used by
                        the ApplicationSet controller. Defaults to
                        ArgoCDDefaultLogLevel if not set.  Valid options are
                        debug,info, error, and warn.
                      type: string
                    enabled:
                      description: >-
                        Enabled is the flag to enable the Application Set
                        Controller during ArgoCD installation. (optional,
                        default `true`)
                      type: boolean
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for ApplicationSet.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    env:
                      description: >-
                        Env lets you specify environment for applicationSet
                        controller pods
                      type: array
                      items:
                        description: >-
                          EnvVar represents an environment variable present in a
                          Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: >-
                              Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: >-
                              Variable references $(VAR_NAME) are expanded using
                              the previously defined environment variables in
                              the container and any service environment
                              variables. If a variable cannot be resolved, the
                              reference in the input string will be unchanged.
                              Double $$ are reduced to a single $, which allows
                              for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal
                              "$(VAR_NAME)". Escaped references will never be
                              expanded, regardless of whether the variable
                              exists or not. Defaults to "".
                            type: string
                          valueFrom:
                            description: >-
                              Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the ConfigMap or its key
                                      must be defined
                                    type: boolean
                              fieldRef:
                                description: >-
                                  Selects a field of the pod: supports
                                  metadata.name, metadata.namespace,
                                  `metadata.labels['<KEY>']`,
                                  `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP, status.podIPs.
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: >-
                                      Version of the schema the FieldPath is
                                      written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: >-
                                      Path of the field to select in the
                                      specified API version.
                                    type: string
                              resourceFieldRef:
                                description: >-
                                  Selects a resource of the container: only
                                  resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage,
                                  requests.cpu, requests.memory and
                                  requests.ephemeral-storage) are currently
                                  supported.
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: >-
                                      Container name: required for volumes,
                                      optional for env vars
                                    type: string
                                  divisor:
                                    description: >-
                                      Specifies the output format of the exposed
                                      resources, defaults to "1"
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: >-
                                  Selects a key of a secret in the pod's
                                  namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: >-
                                      The key of the secret to select from. 
                                      Must be a valid secret key.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the Secret or its key must
                                      be defined
                                    type: boolean
                    extraCommandArgs:
                      description: >-
                        ExtraCommandArgs allows users to pass command line
                        arguments to ApplicationSet controller. They get added
                        to default command line arguments provided by the
                        operator. Please note that the command line arguments
                        provided as part of ExtraCommandArgs will not overwrite
                        the default command line arguments.
                      type: array
                      items:
                        type: string
                    version:
                      description: >-
                        Version is the Argo CD ApplicationSet image tag.
                        (optional)
                      type: string
                    webhookServer:
                      description: >-
                        WebhookServerSpec defines the options for the
                        ApplicationSet Webhook Server component.
                      type: object
                      properties:
                        host:
                          description: >-
                            Host is the hostname to use for Ingress/Route
                            resources.
                          type: string
                        ingress:
                          description: >-
                            Ingress defines the desired state for an Ingress for
                            the Application set webhook component.
                          type: object
                          required:
                            - enabled
                          properties:
                            annotations:
                              description: >-
                                Annotations is the map of annotations to apply
                                to the Ingress.
                              type: object
                              additionalProperties:
                                type: string
                            enabled:
                              description: Enabled will toggle the creation of the Ingress.
                              type: boolean
                            ingressClassName:
                              description: IngressClassName for the Ingress resource.
                              type: string
                            path:
                              description: Path used for the Ingress resource.
                              type: string
                            tls:
                              description: >-
                                TLS configuration. Currently the Ingress only
                                supports a single TLS port, 443. If multiple
                                members of this list specify different hosts,
                                they will be multiplexed on the same port
                                according to the hostname specified through the
                                SNI TLS extension, if the ingress controller
                                fulfilling the ingress supports SNI.
                              type: array
                              items:
                                description: >-
                                  IngressTLS describes the transport layer
                                  security associated with an ingress.
                                type: object
                                properties:
                                  hosts:
                                    description: >-
                                      hosts is a list of hosts included in the
                                      TLS certificate. The values in this list
                                      must match the name/s used in the
                                      tlsSecret. Defaults to the wildcard host
                                      setting for the loadbalancer controller
                                      fulfilling this Ingress, if left
                                      unspecified.
                                    type: array
                                    items:
                                      type: string
                                    x-kubernetes-list-type: atomic
                                  secretName:
                                    description: >-
                                      secretName is the name of the secret used
                                      to terminate TLS traffic on port 443.
                                      Field is left optional to allow TLS
                                      routing based on SNI hostname alone. If
                                      the SNI host in a listener conflicts with
                                      the "Host" header field used by an
                                      IngressRule, the SNI host is used for
                                      termination and value of the "Host" header
                                      is used for routing.
                                    type: string
                        route:
                          description: >-
                            Route defines the desired state for an OpenShift
                            Route for the Application set webhook component.
                          type: object
                          required:
                            - enabled
                          properties:
                            annotations:
                              description: >-
                                Annotations is the map of annotations to use for
                                the Route resource.
                              type: object
                              additionalProperties:
                                type: string
                            enabled:
                              description: >-
                                Enabled will toggle the creation of the
                                OpenShift Route.
                              type: boolean
                            labels:
                              description: >-
                                Labels is the map of labels to use for the Route
                                resource
                              type: object
                              additionalProperties:
                                type: string
                            path:
                              description: >-
                                Path the router watches for, to route traffic
                                for to the service.
                              type: string
                            tls:
                              description: >-
                                TLS provides the ability to configure
                                certificates and termination for the Route.
                              type: object
                              required:
                                - termination
                              properties:
                                caCertificate:
                                  description: >-
                                    caCertificate provides the cert authority
                                    certificate contents
                                  type: string
                                certificate:
                                  description: certificate provides certificate contents
                                  type: string
                                destinationCACertificate:
                                  description: >-
                                    destinationCACertificate provides the
                                    contents of the ca certificate of the final
                                    destination.  When using reencrypt
                                    termination this file should be provided in
                                    order to have routers use it for health
                                    checks on the secure connection. If this
                                    field is not specified, the router may
                                    provide its own destination CA and perform
                                    hostname validation using the short service
                                    name (service.namespace.svc), which allows
                                    infrastructure generated certificates to
                                    automatically verify.
                                  type: string
                                insecureEdgeTerminationPolicy:
                                  description: >-
                                    insecureEdgeTerminationPolicy indicates the
                                    desired behavior for insecure connections to
                                    a route. While each router may make its own
                                    decisions on which ports to expose, this is
                                    normally port 80. 
                                     * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port.
                                  type: string
                                key:
                                  description: key provides key file contents
                                  type: string
                                termination:
                                  description: termination indicates termination type.
                                  type: string
                            wildcardPolicy:
                              description: >-
                                WildcardPolicy if any for the route. Currently
                                only 'Subdomain' or 'None' is allowed.
                              type: string
                    image:
                      description: Image is the Argo CD ApplicationSet image (optional)
                      type: string
                    scmRootCAConfigMap:
                      description: >-
                        SCMRootCAConfigMap is the name of the config map that
                        stores the Gitlab SCM Provider's TLS certificate which
                        will be mounted on the ApplicationSet Controller
                        (optional).
                      type: string
                repositoryCredentials:
                  description: >-
                    RepositoryCredentials are the Git pull credentials to
                    configure Argo CD with upon creation of the cluster.
                  type: string
                rbac:
                  description: RBAC defines the RBAC configuration for Argo CD.
                  type: object
                  properties:
                    defaultPolicy:
                      description: >-
                        DefaultPolicy is the name of the default role which Argo
                        CD will falls back to, when authorizing API requests
                        (optional). If omitted or empty, users may be still be
                        able to login, but will see no apps, projects, etc...
                      type: string
                    policy:
                      description: >-
                        Policy is CSV containing user-defined RBAC policies and
                        role definitions. Policy rules are in the form:   p,
                        subject, resource, action, object, effect Role
                        definitions and bindings are in the form:   g, subject,
                        inherited-subject See
                        https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md
                        for additional information.
                      type: string
                    policyMatcherMode:
                      description: >-
                        PolicyMatcherMode configures the matchers function mode
                        for casbin. There are two options for this, 'glob' for
                        glob matcher or 'regex' for regex matcher.
                      type: string
                    scopes:
                      description: >-
                        Scopes controls which OIDC scopes to examine during rbac
                        enforcement (in addition to `sub` scope). If omitted,
                        defaults to: '[groups]'.
                      type: string
                extraConfig:
                  description: >-
                    ExtraConfig can be used to add fields to Argo CD configmap
                    that are not supported by Argo CD CRD. 
                     Note: ExtraConfig takes precedence over Argo CD CRD. For example, A user sets `argocd.Spec.DisableAdmin` = true and also `a.Spec.ExtraConfig["admin.enabled"]` = true. In this case, operator updates Argo CD Configmap as follows -> argocd-cm.Data["admin.enabled"] = true.
                  type: object
                  additionalProperties:
                    type: string
                repo:
                  description: Repo defines the repo server options for Argo CD.
                  type: object
                  properties:
                    logLevel:
                      description: >-
                        LogLevel describes the log level that should be used by
                        the Repo Server. Defaults to ArgoCDDefaultLogLevel if
                        not set.  Valid options are debug, info, error, and
                        warn.
                      type: string
                    enabled:
                      description: >-
                        Enabled is the flag to enable Repo Server during ArgoCD
                        installation. (optional, default `true`)
                      type: boolean
                    initContainers:
                      description: >-
                        InitContainers defines the list of initialization
                        containers for the repo server deployment
                      type: array
                      items:
                        description: >-
                          A single application container that you want to run
                          within a pod.
                        type: object
                        required:
                          - name
                        properties:
                          restartPolicy:
                            description: >-
                              RestartPolicy defines the restart behavior of
                              individual containers in a pod. This field may
                              only be set for init containers, and the only
                              allowed value is "Always". For non-init containers
                              or when this field is not specified, the restart
                              behavior is defined by the Pod's restart policy
                              and the container type. Setting the RestartPolicy
                              as "Always" for the init container will have the
                              following effect: this init container will be
                              continually restarted on exit until all regular
                              containers have terminated. Once all regular
                              containers have completed, all init containers
                              with restartPolicy "Always" will be shut down.
                              This lifecycle differs from normal init containers
                              and is often referred to as a "sidecar" container.
                              Although this init container still starts in the
                              init container sequence, it does not wait for the
                              container to complete before proceeding to the
                              next init container. Instead, the next init
                              container starts immediately after this init
                              container is started, or after any startupProbe
                              has successfully completed.
                            type: string
                          volumeDevices:
                            description: >-
                              volumeDevices is the list of block devices to be
                              used by the container.
                            type: array
                            items:
                              description: >-
                                volumeDevice describes a mapping of a raw block
                                device within a container.
                              type: object
                              required:
                                - devicePath
                                - name
                              properties:
                                devicePath:
                                  description: >-
                                    devicePath is the path inside of the
                                    container that the device will be mapped to.
                                  type: string
                                name:
                                  description: >-
                                    name must match the name of a
                                    persistentVolumeClaim in the pod
                                  type: string
                          resources:
                            description: >-
                              Compute Resources required by this container.
                              Cannot be updated. More info:
                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                            properties:
                              claims:
                                description: >-
                                  Claims lists the names of resources, defined
                                  in spec.resourceClaims, that are used by this
                                  container. 
                                   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                                   This field is immutable. It can only be set for containers.
                                type: array
                                items:
                                  description: >-
                                    ResourceClaim references one entry in
                                    PodSpec.ResourceClaims.
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      description: >-
                                        Name must match the name of one entry in
                                        pod.spec.resourceClaims of the Pod where
                                        this field is used. It makes that
                                        resource available inside a container.
                                      type: string
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                              limits:
                                description: >-
                                  Limits describes the maximum amount of compute
                                  resources allowed. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                                additionalProperties:
                                  pattern: >-
                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  x-kubernetes-int-or-string: true
                              requests:
                                description: >-
                                  Requests describes the minimum amount of
                                  compute resources required. If Requests is
                                  omitted for a container, it defaults to Limits
                                  if that is explicitly specified, otherwise to
                                  an implementation-defined value. Requests
                                  cannot exceed Limits. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                                additionalProperties:
                                  pattern: >-
                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  x-kubernetes-int-or-string: true
                          resizePolicy:
                            description: Resources resize policy for the container.
                            type: array
                            items:
                              description: >-
                                ContainerResizePolicy represents resource resize
                                policy for the container.
                              type: object
                              required:
                                - resourceName
                                - restartPolicy
                              properties:
                                resourceName:
                                  description: >-
                                    Name of the resource to which this resource
                                    resize policy applies. Supported values:
                                    cpu, memory.
                                  type: string
                                restartPolicy:
                                  description: >-
                                    Restart policy to apply when specified
                                    resource is resized. If not specified, it
                                    defaults to NotRequired.
                                  type: string
                            x-kubernetes-list-type: atomic
                          readinessProbe:
                            description: >-
                              Periodic probe of container service readiness.
                              Container will be removed from service endpoints
                              if the probe fails. Cannot be updated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            type: object
                            properties:
                              initialDelaySeconds:
                                description: >-
                                  Number of seconds after the container has
                                  started before liveness probes are initiated.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                              failureThreshold:
                                description: >-
                                  Minimum consecutive failures for the probe to
                                  be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                type: integer
                                format: int32
                              successThreshold:
                                description: >-
                                  Minimum consecutive successes for the probe to
                                  be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and
                                  startup. Minimum value is 1.
                                type: integer
                                format: int32
                              terminationGracePeriodSeconds:
                                description: >-
                                  Optional duration in seconds the pod needs to
                                  terminate gracefully upon probe failure. The
                                  grace period is the duration in seconds after
                                  the processes running in the pod are sent a
                                  termination signal and the time when the
                                  processes are forcibly halted with a kill
                                  signal. Set this value longer than the
                                  expected cleanup time for your process. If
                                  this value is nil, the pod's
                                  terminationGracePeriodSeconds will be used.
                                  Otherwise, this value overrides the value
                                  provided by the pod spec. Value must be
                                  non-negative integer. The value zero indicates
                                  stop immediately via the kill signal (no
                                  opportunity to shut down). This is a beta
                                  field and requires enabling
                                  ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1.
                                  spec.terminationGracePeriodSeconds is used if
                                  unset.
                                type: integer
                                format: int64
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Host name to connect to, defaults to the
                                      pod IP. You probably want to set "Host" in
                                      httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: >-
                                      Custom headers to set in the request. HTTP
                                      allows repeated headers.
                                    type: array
                                    items:
                                      description: >-
                                        HTTPHeader describes a custom header to
                                        be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: >-
                                            The header field name. This will be
                                            canonicalized upon output, so
                                            case-variant names will be understood as
                                            the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: >-
                                      Name or number of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: >-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: >-
                                      Command is the command line to execute
                                      inside the container, the working
                                      directory for the command  is root ('/')
                                      in the container's filesystem. The command
                                      is simply exec'd, it is not run inside a
                                      shell, so traditional shell instructions
                                      ('|', etc) won't work. To use a shell, you
                                      need to explicitly call out to that shell.
                                      Exit status of 0 is treated as
                                      live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              tcpSocket:
                                description: >-
                                  TCPSocket specifies an action involving a TCP
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Optional: Host name to connect to,
                                      defaults to the pod IP.
                                    type: string
                                  port:
                                    description: >-
                                      Number or name of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                              grpc:
                                description: >-
                                  GRPC specifies an action involving a GRPC
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    description: >-
                                      Port number of the gRPC service. Number
                                      must be in the range 1 to 65535.
                                    type: integer
                                    format: int32
                                  service:
                                    description: >-
                                      Service is the name of the service to
                                      place in the gRPC HealthCheckRequest (see
                                      https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
                                       If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                              periodSeconds:
                                description: >-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                type: integer
                                format: int32
                              timeoutSeconds:
                                description: >-
                                  Number of seconds after which the probe times
                                  out. Defaults to 1 second. Minimum value is 1.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                          stdin:
                            description: >-
                              Whether this container should allocate a buffer
                              for stdin in the container runtime. If this is not
                              set, reads from stdin in the container will always
                              result in EOF. Default is false.
                            type: boolean
                          terminationMessagePath:
                            description: >-
                              Optional: Path at which the file to which the
                              container's termination message will be written is
                              mounted into the container's filesystem. Message
                              written is intended to be brief final status, such
                              as an assertion failure message. Will be truncated
                              by the node if greater than 4096 bytes. The total
                              message length across all containers will be
                              limited to 12kb. Defaults to /dev/termination-log.
                              Cannot be updated.
                            type: string
                          stdinOnce:
                            description: >-
                              Whether the container runtime should close the
                              stdin channel after it has been opened by a single
                              attach. When stdin is true the stdin stream will
                              remain open across multiple attach sessions. If
                              stdinOnce is set to true, stdin is opened on
                              container start, is empty until the first client
                              attaches to stdin, and then remains open and
                              accepts data until the client disconnects, at
                              which time stdin is closed and remains closed
                              until the container is restarted. If this flag is
                              false, a container processes that reads from stdin
                              will never receive an EOF. Default is false
                            type: boolean
                          lifecycle:
                            description: >-
                              Actions that the management system should take in
                              response to container lifecycle events. Cannot be
                              updated.
                            type: object
                            properties:
                              postStart:
                                description: >-
                                  PostStart is called immediately after a
                                  container is created. If the handler fails,
                                  the container is terminated and restarted
                                  according to its restart policy. Other
                                  management of the container blocks until the
                                  hook completes. More info:
                                  https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                type: object
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: >-
                                          Command is the command line to execute
                                          inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The
                                          command is simply exec'd, it is not run
                                          inside a shell, so traditional shell
                                          instructions ('|', etc) won't work. To
                                          use a shell, you need to explicitly call
                                          out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is
                                          unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    description: >-
                                      HTTPGet specifies the http request to
                                      perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Host name to connect to, defaults to the
                                          pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: >-
                                          Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: >-
                                            HTTPHeader describes a custom header to
                                            be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: >-
                                                The header field name. This will be
                                                canonicalized upon output, so
                                                case-variant names will be understood as
                                                the same header.
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: >-
                                          Name or number of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: >-
                                          Scheme to use for connecting to the
                                          host. Defaults to HTTP.
                                        type: string
                                  tcpSocket:
                                    description: >-
                                      Deprecated. TCPSocket is NOT supported as
                                      a LifecycleHandler and kept for the
                                      backward compatibility. There are no
                                      validation of this field and lifecycle
                                      hooks will fail in runtime when tcp
                                      handler is specified.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Optional: Host name to connect to,
                                          defaults to the pod IP.
                                        type: string
                                      port:
                                        description: >-
                                          Number or name of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                              preStop:
                                description: >-
                                  PreStop is called immediately before a
                                  container is terminated due to an API request
                                  or management event such as liveness/startup
                                  probe failure, preemption, resource
                                  contention, etc. The handler is not called if
                                  the container crashes or exits. The Pod's
                                  termination grace period countdown begins
                                  before the PreStop hook is executed.
                                  Regardless of the outcome of the handler, the
                                  container will eventually terminate within the
                                  Pod's termination grace period (unless delayed
                                  by finalizers). Other management of the
                                  container blocks until the hook completes or
                                  until the termination grace period is reached.
                                  More info:
                                  https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                type: object
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: >-
                                          Command is the command line to execute
                                          inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The
                                          command is simply exec'd, it is not run
                                          inside a shell, so traditional shell
                                          instructions ('|', etc) won't work. To
                                          use a shell, you need to explicitly call
                                          out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is
                                          unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    description: >-
                                      HTTPGet specifies the http request to
                                      perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Host name to connect to, defaults to the
                                          pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: >-
                                          Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: >-
                                            HTTPHeader describes a custom header to
                                            be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: >-
                                                The header field name. This will be
                                                canonicalized upon output, so
                                                case-variant names will be understood as
                                                the same header.
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: >-
                                          Name or number of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: >-
                                          Scheme to use for connecting to the
                                          host. Defaults to HTTP.
                                        type: string
                                  tcpSocket:
                                    description: >-
                                      Deprecated. TCPSocket is NOT supported as
                                      a LifecycleHandler and kept for the
                                      backward compatibility. There are no
                                      validation of this field and lifecycle
                                      hooks will fail in runtime when tcp
                                      handler is specified.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Optional: Host name to connect to,
                                          defaults to the pod IP.
                                        type: string
                                      port:
                                        description: >-
                                          Number or name of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                          name:
                            description: >-
                              Name of the container specified as a DNS_LABEL.
                              Each container in a pod must have a unique name
                              (DNS_LABEL). Cannot be updated.
                            type: string
                          command:
                            description: >-
                              Entrypoint array. Not executed within a shell. The
                              container image's ENTRYPOINT is used if this is
                              not provided. Variable references $(VAR_NAME) are
                              expanded using the container's environment. If a
                              variable cannot be resolved, the reference in the
                              input string will be unchanged. Double $$ are
                              reduced to a single $, which allows for escaping
                              the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                              produce the string literal "$(VAR_NAME)". Escaped
                              references will never be expanded, regardless of
                              whether the variable exists or not. Cannot be
                              updated. More info:
                              https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                            type: array
                            items:
                              type: string
                          livenessProbe:
                            description: >-
                              Periodic probe of container liveness. Container
                              will be restarted if the probe fails. Cannot be
                              updated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            type: object
                            properties:
                              initialDelaySeconds:
                                description: >-
                                  Number of seconds after the container has
                                  started before liveness probes are initiated.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                              failureThreshold:
                                description: >-
                                  Minimum consecutive failures for the probe to
                                  be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                type: integer
                                format: int32
                              successThreshold:
                                description: >-
                                  Minimum consecutive successes for the probe to
                                  be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and
                                  startup. Minimum value is 1.
                                type: integer
                                format: int32
                              terminationGracePeriodSeconds:
                                description: >-
                                  Optional duration in seconds the pod needs to
                                  terminate gracefully upon probe failure. The
                                  grace period is the duration in seconds after
                                  the processes running in the pod are sent a
                                  termination signal and the time when the
                                  processes are forcibly halted with a kill
                                  signal. Set this value longer than the
                                  expected cleanup time for your process. If
                                  this value is nil, the pod's
                                  terminationGracePeriodSeconds will be used.
                                  Otherwise, this value overrides the value
                                  provided by the pod spec. Value must be
                                  non-negative integer. The value zero indicates
                                  stop immediately via the kill signal (no
                                  opportunity to shut down). This is a beta
                                  field and requires enabling
                                  ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1.
                                  spec.terminationGracePeriodSeconds is used if
                                  unset.
                                type: integer
                                format: int64
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Host name to connect to, defaults to the
                                      pod IP. You probably want to set "Host" in
                                      httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: >-
                                      Custom headers to set in the request. HTTP
                                      allows repeated headers.
                                    type: array
                                    items:
                                      description: >-
                                        HTTPHeader describes a custom header to
                                        be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: >-
                                            The header field name. This will be
                                            canonicalized upon output, so
                                            case-variant names will be understood as
                                            the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: >-
                                      Name or number of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: >-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: >-
                                      Command is the command line to execute
                                      inside the container, the working
                                      directory for the command  is root ('/')
                                      in the container's filesystem. The command
                                      is simply exec'd, it is not run inside a
                                      shell, so traditional shell instructions
                                      ('|', etc) won't work. To use a shell, you
                                      need to explicitly call out to that shell.
                                      Exit status of 0 is treated as
                                      live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              tcpSocket:
                                description: >-
                                  TCPSocket specifies an action involving a TCP
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Optional: Host name to connect to,
                                      defaults to the pod IP.
                                    type: string
                                  port:
                                    description: >-
                                      Number or name of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                              grpc:
                                description: >-
                                  GRPC specifies an action involving a GRPC
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    description: >-
                                      Port number of the gRPC service. Number
                                      must be in the range 1 to 65535.
                                    type: integer
                                    format: int32
                                  service:
                                    description: >-
                                      Service is the name of the service to
                                      place in the gRPC HealthCheckRequest (see
                                      https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
                                       If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                              periodSeconds:
                                description: >-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                type: integer
                                format: int32
                              timeoutSeconds:
                                description: >-
                                  Number of seconds after which the probe times
                                  out. Defaults to 1 second. Minimum value is 1.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                          env:
                            description: >-
                              List of environment variables to set in the
                              container. Cannot be updated.
                            type: array
                            items:
                              description: >-
                                EnvVar represents an environment variable
                                present in a Container.
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  description: >-
                                    Name of the environment variable. Must be a
                                    C_IDENTIFIER.
                                  type: string
                                value:
                                  description: >-
                                    Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment
                                    variables in the container and any service
                                    environment variables. If a variable cannot
                                    be resolved, the reference in the input
                                    string will be unchanged. Double $$ are
                                    reduced to a single $, which allows for
                                    escaping the $(VAR_NAME) syntax: i.e.
                                    "$$(VAR_NAME)" will produce the string
                                    literal "$(VAR_NAME)". Escaped references
                                    will never be expanded, regardless of
                                    whether the variable exists or not. Defaults
                                    to "".
                                  type: string
                                valueFrom:
                                  description: >-
                                    Source for the environment variable's value.
                                    Cannot be used if value is not empty.
                                  type: object
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: >-
                                            Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields.
                                            apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: >-
                                            Specify whether the ConfigMap or its key
                                            must be defined
                                          type: boolean
                                    fieldRef:
                                      description: >-
                                        Selects a field of the pod: supports
                                        metadata.name, metadata.namespace,
                                        `metadata.labels['<KEY>']`,
                                        `metadata.annotations['<KEY>']`,
                                        spec.nodeName, spec.serviceAccountName,
                                        status.hostIP, status.podIP,
                                        status.podIPs.
                                      type: object
                                      required:
                                        - fieldPath
                                      properties:
                                        apiVersion:
                                          description: >-
                                            Version of the schema the FieldPath is
                                            written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: >-
                                            Path of the field to select in the
                                            specified API version.
                                          type: string
                                    resourceFieldRef:
                                      description: >-
                                        Selects a resource of the container:
                                        only resources limits and requests
                                        (limits.cpu, limits.memory,
                                        limits.ephemeral-storage, requests.cpu,
                                        requests.memory and
                                        requests.ephemeral-storage) are
                                        currently supported.
                                      type: object
                                      required:
                                        - resource
                                      properties:
                                        containerName:
                                          description: >-
                                            Container name: required for volumes,
                                            optional for env vars
                                          type: string
                                        divisor:
                                          description: >-
                                            Specifies the output format of the
                                            exposed resources, defaults to "1"
                                          pattern: >-
                                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                    secretKeyRef:
                                      description: >-
                                        Selects a key of a secret in the pod's
                                        namespace
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          description: >-
                                            The key of the secret to select from. 
                                            Must be a valid secret key.
                                          type: string
                                        name:
                                          description: >-
                                            Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields.
                                            apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: >-
                                            Specify whether the Secret or its key
                                            must be defined
                                          type: boolean
                          securityContext:
                            description: >-
                              SecurityContext defines the security options the
                              container should be run with. If set, the fields
                              of SecurityContext override the equivalent fields
                              of PodSecurityContext. More info:
                              https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                            type: object
                            properties:
                              runAsGroup:
                                description: >-
                                  The GID to run the entrypoint of the container
                                  process. Uses runtime default if unset. May
                                  also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is windows.
                                type: integer
                                format: int64
                              procMount:
                                description: >-
                                  procMount denotes the type of proc mount to
                                  use for the containers. The default is
                                  DefaultProcMount which uses the container
                                  runtime defaults for readonly paths and masked
                                  paths. This requires the ProcMountType feature
                                  flag to be enabled. Note that this field
                                  cannot be set when spec.os.name is windows.
                                type: string
                              runAsUser:
                                description: >-
                                  The UID to run the entrypoint of the container
                                  process. Defaults to user specified in image
                                  metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is windows.
                                type: integer
                                format: int64
                              seccompProfile:
                                description: >-
                                  The seccomp options to use by this container.
                                  If seccomp options are provided at both the
                                  pod & container level, the container options
                                  override the pod options. Note that this field
                                  cannot be set when spec.os.name is windows.
                                type: object
                                required:
                                  - type
                                properties:
                                  localhostProfile:
                                    description: >-
                                      localhostProfile indicates a profile
                                      defined in a file on the node should be
                                      used. The profile must be preconfigured on
                                      the node to work. Must be a descending
                                      path, relative to the kubelet's configured
                                      seccomp profile location. Must be set if
                                      type is "Localhost". Must NOT be set for
                                      any other type.
                                    type: string
                                  type:
                                    description: >-
                                      type indicates which kind of seccomp
                                      profile will be applied. Valid options
                                      are: 
                                       Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                                    type: string
                              readOnlyRootFilesystem:
                                description: >-
                                  Whether this container has a read-only root
                                  filesystem. Default is false. Note that this
                                  field cannot be set when spec.os.name is
                                  windows.
                                type: boolean
                              runAsNonRoot:
                                description: >-
                                  Indicates that the container must run as a
                                  non-root user. If true, the Kubelet will
                                  validate the image at runtime to ensure that
                                  it does not run as UID 0 (root) and fail to
                                  start the container if it does. If unset or
                                  false, no such validation will be performed.
                                  May also be set in PodSecurityContext.  If set
                                  in both SecurityContext and
                                  PodSecurityContext, the value specified in
                                  SecurityContext takes precedence.
                                type: boolean
                              privileged:
                                description: >-
                                  Run container in privileged mode. Processes in
                                  privileged containers are essentially
                                  equivalent to root on the host. Defaults to
                                  false. Note that this field cannot be set when
                                  spec.os.name is windows.
                                type: boolean
                              capabilities:
                                description: >-
                                  The capabilities to add/drop when running
                                  containers. Defaults to the default set of
                                  capabilities granted by the container runtime.
                                  Note that this field cannot be set when
                                  spec.os.name is windows.
                                type: object
                                properties:
                                  add:
                                    description: Added capabilities
                                    type: array
                                    items:
                                      description: >-
                                        Capability represent POSIX capabilities
                                        type
                                      type: string
                                  drop:
                                    description: Removed capabilities
                                    type: array
                                    items:
                                      description: >-
                                        Capability represent POSIX capabilities
                                        type
                                      type: string
                              windowsOptions:
                                description: >-
                                  The Windows specific settings applied to all
                                  containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in
                                  both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is linux.
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    description: >-
                                      GMSACredentialSpec is where the GMSA
                                      admission webhook
                                      (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA
                                      credential spec named by the
                                      GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: >-
                                      GMSACredentialSpecName is the name of the
                                      GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: >-
                                      HostProcess determines if a container
                                      should be run as a 'Host Process'
                                      container. All of a Pod's containers must
                                      have the same effective HostProcess value
                                      (it is not allowed to have a mix of
                                      HostProcess containers and non-HostProcess
                                      containers). In addition, if HostProcess
                                      is true then HostNetwork must also be set
                                      to true.
                                    type: boolean
                                  runAsUserName:
                                    description: >-
                                      The UserName in Windows to run the
                                      entrypoint of the container process.
                                      Defaults to the user specified in image
                                      metadata if unspecified. May also be set
                                      in PodSecurityContext. If set in both
                                      SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext
                                      takes precedence.
                                    type: string
                              seLinuxOptions:
                                description: >-
                                  The SELinux context to be applied to the
                                  container. If unspecified, the container
                                  runtime will allocate a random SELinux context
                                  for each container.  May also be set in
                                  PodSecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is windows.
                                type: object
                                properties:
                                  level:
                                    description: >-
                                      Level is SELinux level label that applies
                                      to the container.
                                    type: string
                                  role:
                                    description: >-
                                      Role is a SELinux role label that applies
                                      to the container.
                                    type: string
                                  type:
                                    description: >-
                                      Type is a SELinux type label that applies
                                      to the container.
                                    type: string
                                  user:
                                    description: >-
                                      User is a SELinux user label that applies
                                      to the container.
                                    type: string
                              allowPrivilegeEscalation:
                                description: >-
                                  AllowPrivilegeEscalation controls whether a
                                  process can gain more privileges than its
                                  parent process. This bool directly controls if
                                  the no_new_privs flag will be set on the
                                  container process. AllowPrivilegeEscalation is
                                  true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN Note that this
                                  field cannot be set when spec.os.name is
                                  windows.
                                type: boolean
                          ports:
                            description: >-
                              List of ports to expose from the container. Not
                              specifying a port here DOES NOT prevent that port
                              from being exposed. Any port which is listening on
                              the default "0.0.0.0" address inside a container
                              will be accessible from the network. Modifying
                              this array with strategic merge patch may corrupt
                              the data. For more information See
                              https://github.com/kubernetes/kubernetes/issues/108255.
                              Cannot be updated.
                            type: array
                            items:
                              description: >-
                                ContainerPort represents a network port in a
                                single container.
                              type: object
                              required:
                                - containerPort
                              properties:
                                containerPort:
                                  description: >-
                                    Number of port to expose on the pod's IP
                                    address. This must be a valid port number, 0
                                    < x < 65536.
                                  type: integer
                                  format: int32
                                hostIP:
                                  description: What host IP to bind the external port to.
                                  type: string
                                hostPort:
                                  description: >-
                                    Number of port to expose on the host. If
                                    specified, this must be a valid port number,
                                    0 < x < 65536. If HostNetwork is specified,
                                    this must match ContainerPort. Most
                                    containers do not need this.
                                  type: integer
                                  format: int32
                                name:
                                  description: >-
                                    If specified, this must be an IANA_SVC_NAME
                                    and unique within the pod. Each named port
                                    in a pod must have a unique name. Name for
                                    the port that can be referred to by
                                    services.
                                  type: string
                                protocol:
                                  description: >-
                                    Protocol for port. Must be UDP, TCP, or
                                    SCTP. Defaults to "TCP".
                                  type: string
                                  default: TCP
                            x-kubernetes-list-map-keys:
                              - containerPort
                              - protocol
                            x-kubernetes-list-type: map
                          imagePullPolicy:
                            description: >-
                              Image pull policy. One of Always, Never,
                              IfNotPresent. Defaults to Always if :latest tag is
                              specified, or IfNotPresent otherwise. Cannot be
                              updated. More info:
                              https://kubernetes.io/docs/concepts/containers/images#updating-images
                            type: string
                          startupProbe:
                            description: >-
                              StartupProbe indicates that the Pod has
                              successfully initialized. If specified, no other
                              probes are executed until this completes
                              successfully. If this probe fails, the Pod will be
                              restarted, just as if the livenessProbe failed.
                              This can be used to provide different probe
                              parameters at the beginning of a Pod's lifecycle,
                              when it might take a long time to load data or
                              warm a cache, than during steady-state operation.
                              This cannot be updated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            type: object
                            properties:
                              initialDelaySeconds:
                                description: >-
                                  Number of seconds after the container has
                                  started before liveness probes are initiated.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                              failureThreshold:
                                description: >-
                                  Minimum consecutive failures for the probe to
                                  be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                type: integer
                                format: int32
                              successThreshold:
                                description: >-
                                  Minimum consecutive successes for the probe to
                                  be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and
                                  startup. Minimum value is 1.
                                type: integer
                                format: int32
                              terminationGracePeriodSeconds:
                                description: >-
                                  Optional duration in seconds the pod needs to
                                  terminate gracefully upon probe failure. The
                                  grace period is the duration in seconds after
                                  the processes running in the pod are sent a
                                  termination signal and the time when the
                                  processes are forcibly halted with a kill
                                  signal. Set this value longer than the
                                  expected cleanup time for your process. If
                                  this value is nil, the pod's
                                  terminationGracePeriodSeconds will be used.
                                  Otherwise, this value overrides the value
                                  provided by the pod spec. Value must be
                                  non-negative integer. The value zero indicates
                                  stop immediately via the kill signal (no
                                  opportunity to shut down). This is a beta
                                  field and requires enabling
                                  ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1.
                                  spec.terminationGracePeriodSeconds is used if
                                  unset.
                                type: integer
                                format: int64
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Host name to connect to, defaults to the
                                      pod IP. You probably want to set "Host" in
                                      httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: >-
                                      Custom headers to set in the request. HTTP
                                      allows repeated headers.
                                    type: array
                                    items:
                                      description: >-
                                        HTTPHeader describes a custom header to
                                        be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: >-
                                            The header field name. This will be
                                            canonicalized upon output, so
                                            case-variant names will be understood as
                                            the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: >-
                                      Name or number of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: >-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: >-
                                      Command is the command line to execute
                                      inside the container, the working
                                      directory for the command  is root ('/')
                                      in the container's filesystem. The command
                                      is simply exec'd, it is not run inside a
                                      shell, so traditional shell instructions
                                      ('|', etc) won't work. To use a shell, you
                                      need to explicitly call out to that shell.
                                      Exit status of 0 is treated as
                                      live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              tcpSocket:
                                description: >-
                                  TCPSocket specifies an action involving a TCP
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Optional: Host name to connect to,
                                      defaults to the pod IP.
                                    type: string
                                  port:
                                    description: >-
                                      Number or name of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                              grpc:
                                description: >-
                                  GRPC specifies an action involving a GRPC
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    description: >-
                                      Port number of the gRPC service. Number
                                      must be in the range 1 to 65535.
                                    type: integer
                                    format: int32
                                  service:
                                    description: >-
                                      Service is the name of the service to
                                      place in the gRPC HealthCheckRequest (see
                                      https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
                                       If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                              periodSeconds:
                                description: >-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                type: integer
                                format: int32
                              timeoutSeconds:
                                description: >-
                                  Number of seconds after which the probe times
                                  out. Defaults to 1 second. Minimum value is 1.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                          volumeMounts:
                            description: >-
                              Pod volumes to mount into the container's
                              filesystem. Cannot be updated.
                            type: array
                            items:
                              description: >-
                                VolumeMount describes a mounting of a Volume
                                within a container.
                              type: object
                              required:
                                - mountPath
                                - name
                              properties:
                                mountPath:
                                  description: >-
                                    Path within the container at which the
                                    volume should be mounted.  Must not contain
                                    ':'.
                                  type: string
                                mountPropagation:
                                  description: >-
                                    mountPropagation determines how mounts are
                                    propagated from the host to container and
                                    the other way around. When not set,
                                    MountPropagationNone is used. This field is
                                    beta in 1.10.
                                  type: string
                                name:
                                  description: This must match the Name of a Volume.
                                  type: string
                                readOnly:
                                  description: >-
                                    Mounted read-only if true, read-write
                                    otherwise (false or unspecified). Defaults
                                    to false.
                                  type: boolean
                                subPath:
                                  description: >-
                                    Path within the volume from which the
                                    container's volume should be mounted.
                                    Defaults to "" (volume's root).
                                  type: string
                                subPathExpr:
                                  description: >-
                                    Expanded path within the volume from which
                                    the container's volume should be mounted.
                                    Behaves similarly to SubPath but environment
                                    variable references $(VAR_NAME) are expanded
                                    using the container's environment. Defaults
                                    to "" (volume's root). SubPathExpr and
                                    SubPath are mutually exclusive.
                                  type: string
                          terminationMessagePolicy:
                            description: >-
                              Indicate how the termination message should be
                              populated. File will use the contents of
                              terminationMessagePath to populate the container
                              status message on both success and failure.
                              FallbackToLogsOnError will use the last chunk of
                              container log output if the termination message
                              file is empty and the container exited with an
                              error. The log output is limited to 2048 bytes or
                              80 lines, whichever is smaller. Defaults to File.
                              Cannot be updated.
                            type: string
                          envFrom:
                            description: >-
                              List of sources to populate environment variables
                              in the container. The keys defined within a source
                              must be a C_IDENTIFIER. All invalid keys will be
                              reported as an event when the container is
                              starting. When a key exists in multiple sources,
                              the value associated with the last source will
                              take precedence. Values defined by an Env with a
                              duplicate key will take precedence. Cannot be
                              updated.
                            type: array
                            items:
                              description: >-
                                EnvFromSource represents the source of a set of
                                ConfigMaps
                              type: object
                              properties:
                                configMapRef:
                                  description: The ConfigMap to select from
                                  type: object
                                  properties:
                                    name:
                                      description: >-
                                        Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields.
                                        apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: >-
                                        Specify whether the ConfigMap must be
                                        defined
                                      type: boolean
                                prefix:
                                  description: >-
                                    An optional identifier to prepend to each
                                    key in the ConfigMap. Must be a
                                    C_IDENTIFIER.
                                  type: string
                                secretRef:
                                  description: The Secret to select from
                                  type: object
                                  properties:
                                    name:
                                      description: >-
                                        Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields.
                                        apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: >-
                                        Specify whether the Secret must be
                                        defined
                                      type: boolean
                          tty:
                            description: >-
                              Whether this container should allocate a TTY for
                              itself, also requires 'stdin' to be true. Default
                              is false.
                            type: boolean
                          image:
                            description: >-
                              Container image name. More info:
                              https://kubernetes.io/docs/concepts/containers/images
                              This field is optional to allow higher level
                              config management to default or override container
                              images in workload controllers like Deployments
                              and StatefulSets.
                            type: string
                          workingDir:
                            description: >-
                              Container's working directory. If not specified,
                              the container runtime's default will be used,
                              which might be configured in the container image.
                              Cannot be updated.
                            type: string
                          args:
                            description: >-
                              Arguments to the entrypoint. The container image's
                              CMD is used if this is not provided. Variable
                              references $(VAR_NAME) are expanded using the
                              container's environment. If a variable cannot be
                              resolved, the reference in the input string will
                              be unchanged. Double $$ are reduced to a single $,
                              which allows for escaping the $(VAR_NAME) syntax:
                              i.e. "$$(VAR_NAME)" will produce the string
                              literal "$(VAR_NAME)". Escaped references will
                              never be expanded, regardless of whether the
                              variable exists or not. Cannot be updated. More
                              info:
                              https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                            type: array
                            items:
                              type: string
                    verifytls:
                      description: >-
                        VerifyTLS defines whether repo server API should be
                        accessed using strict TLS validation
                      type: boolean
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for Redis.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    remote:
                      description: >-
                        Remote specifies the remote URL of the Repo Server
                        container. (optional, by default, a local instance
                        managed by the operator is used.)
                      type: string
                    extraRepoCommandArgs:
                      description: >-
                        Extra Command arguments allows users to pass command
                        line arguments to repo server workload. They get added
                        to default command line arguments provided by the
                        operator. Please note that the command line arguments
                        provided as part of ExtraRepoCommandArgs will not
                        overwrite the default command line arguments.
                      type: array
                      items:
                        type: string
                    autotls:
                      description: >-
                        AutoTLS specifies the method to use for automatic TLS
                        configuration for the repo server The value specified
                        here can currently be: - openshift - Use the OpenShift
                        service CA to request TLS config
                      type: string
                    env:
                      description: Env lets you specify environment for repo server pods
                      type: array
                      items:
                        description: >-
                          EnvVar represents an environment variable present in a
                          Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: >-
                              Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: >-
                              Variable references $(VAR_NAME) are expanded using
                              the previously defined environment variables in
                              the container and any service environment
                              variables. If a variable cannot be resolved, the
                              reference in the input string will be unchanged.
                              Double $$ are reduced to a single $, which allows
                              for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal
                              "$(VAR_NAME)". Escaped references will never be
                              expanded, regardless of whether the variable
                              exists or not. Defaults to "".
                            type: string
                          valueFrom:
                            description: >-
                              Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the ConfigMap or its key
                                      must be defined
                                    type: boolean
                              fieldRef:
                                description: >-
                                  Selects a field of the pod: supports
                                  metadata.name, metadata.namespace,
                                  `metadata.labels['<KEY>']`,
                                  `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP, status.podIPs.
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: >-
                                      Version of the schema the FieldPath is
                                      written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: >-
                                      Path of the field to select in the
                                      specified API version.
                                    type: string
                              resourceFieldRef:
                                description: >-
                                  Selects a resource of the container: only
                                  resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage,
                                  requests.cpu, requests.memory and
                                  requests.ephemeral-storage) are currently
                                  supported.
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: >-
                                      Container name: required for volumes,
                                      optional for env vars
                                    type: string
                                  divisor:
                                    description: >-
                                      Specifies the output format of the exposed
                                      resources, defaults to "1"
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: >-
                                  Selects a key of a secret in the pod's
                                  namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: >-
                                      The key of the secret to select from. 
                                      Must be a valid secret key.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the Secret or its key must
                                      be defined
                                    type: boolean
                    sidecarContainers:
                      description: >-
                        SidecarContainers defines the list of sidecar containers
                        for the repo server deployment
                      type: array
                      items:
                        description: >-
                          A single application container that you want to run
                          within a pod.
                        type: object
                        required:
                          - name
                        properties:
                          restartPolicy:
                            description: >-
                              RestartPolicy defines the restart behavior of
                              individual containers in a pod. This field may
                              only be set for init containers, and the only
                              allowed value is "Always". For non-init containers
                              or when this field is not specified, the restart
                              behavior is defined by the Pod's restart policy
                              and the container type. Setting the RestartPolicy
                              as "Always" for the init container will have the
                              following effect: this init container will be
                              continually restarted on exit until all regular
                              containers have terminated. Once all regular
                              containers have completed, all init containers
                              with restartPolicy "Always" will be shut down.
                              This lifecycle differs from normal init containers
                              and is often referred to as a "sidecar" container.
                              Although this init container still starts in the
                              init container sequence, it does not wait for the
                              container to complete before proceeding to the
                              next init container. Instead, the next init
                              container starts immediately after this init
                              container is started, or after any startupProbe
                              has successfully completed.
                            type: string
                          volumeDevices:
                            description: >-
                              volumeDevices is the list of block devices to be
                              used by the container.
                            type: array
                            items:
                              description: >-
                                volumeDevice describes a mapping of a raw block
                                device within a container.
                              type: object
                              required:
                                - devicePath
                                - name
                              properties:
                                devicePath:
                                  description: >-
                                    devicePath is the path inside of the
                                    container that the device will be mapped to.
                                  type: string
                                name:
                                  description: >-
                                    name must match the name of a
                                    persistentVolumeClaim in the pod
                                  type: string
                          resources:
                            description: >-
                              Compute Resources required by this container.
                              Cannot be updated. More info:
                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                            properties:
                              claims:
                                description: >-
                                  Claims lists the names of resources, defined
                                  in spec.resourceClaims, that are used by this
                                  container. 
                                   This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                                   This field is immutable. It can only be set for containers.
                                type: array
                                items:
                                  description: >-
                                    ResourceClaim references one entry in
                                    PodSpec.ResourceClaims.
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      description: >-
                                        Name must match the name of one entry in
                                        pod.spec.resourceClaims of the Pod where
                                        this field is used. It makes that
                                        resource available inside a container.
                                      type: string
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                              limits:
                                description: >-
                                  Limits describes the maximum amount of compute
                                  resources allowed. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                                additionalProperties:
                                  pattern: >-
                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  x-kubernetes-int-or-string: true
                              requests:
                                description: >-
                                  Requests describes the minimum amount of
                                  compute resources required. If Requests is
                                  omitted for a container, it defaults to Limits
                                  if that is explicitly specified, otherwise to
                                  an implementation-defined value. Requests
                                  cannot exceed Limits. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                                additionalProperties:
                                  pattern: >-
                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  x-kubernetes-int-or-string: true
                          resizePolicy:
                            description: Resources resize policy for the container.
                            type: array
                            items:
                              description: >-
                                ContainerResizePolicy represents resource resize
                                policy for the container.
                              type: object
                              required:
                                - resourceName
                                - restartPolicy
                              properties:
                                resourceName:
                                  description: >-
                                    Name of the resource to which this resource
                                    resize policy applies. Supported values:
                                    cpu, memory.
                                  type: string
                                restartPolicy:
                                  description: >-
                                    Restart policy to apply when specified
                                    resource is resized. If not specified, it
                                    defaults to NotRequired.
                                  type: string
                            x-kubernetes-list-type: atomic
                          readinessProbe:
                            description: >-
                              Periodic probe of container service readiness.
                              Container will be removed from service endpoints
                              if the probe fails. Cannot be updated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            type: object
                            properties:
                              initialDelaySeconds:
                                description: >-
                                  Number of seconds after the container has
                                  started before liveness probes are initiated.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                              failureThreshold:
                                description: >-
                                  Minimum consecutive failures for the probe to
                                  be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                type: integer
                                format: int32
                              successThreshold:
                                description: >-
                                  Minimum consecutive successes for the probe to
                                  be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and
                                  startup. Minimum value is 1.
                                type: integer
                                format: int32
                              terminationGracePeriodSeconds:
                                description: >-
                                  Optional duration in seconds the pod needs to
                                  terminate gracefully upon probe failure. The
                                  grace period is the duration in seconds after
                                  the processes running in the pod are sent a
                                  termination signal and the time when the
                                  processes are forcibly halted with a kill
                                  signal. Set this value longer than the
                                  expected cleanup time for your process. If
                                  this value is nil, the pod's
                                  terminationGracePeriodSeconds will be used.
                                  Otherwise, this value overrides the value
                                  provided by the pod spec. Value must be
                                  non-negative integer. The value zero indicates
                                  stop immediately via the kill signal (no
                                  opportunity to shut down). This is a beta
                                  field and requires enabling
                                  ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1.
                                  spec.terminationGracePeriodSeconds is used if
                                  unset.
                                type: integer
                                format: int64
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Host name to connect to, defaults to the
                                      pod IP. You probably want to set "Host" in
                                      httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: >-
                                      Custom headers to set in the request. HTTP
                                      allows repeated headers.
                                    type: array
                                    items:
                                      description: >-
                                        HTTPHeader describes a custom header to
                                        be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: >-
                                            The header field name. This will be
                                            canonicalized upon output, so
                                            case-variant names will be understood as
                                            the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: >-
                                      Name or number of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: >-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: >-
                                      Command is the command line to execute
                                      inside the container, the working
                                      directory for the command  is root ('/')
                                      in the container's filesystem. The command
                                      is simply exec'd, it is not run inside a
                                      shell, so traditional shell instructions
                                      ('|', etc) won't work. To use a shell, you
                                      need to explicitly call out to that shell.
                                      Exit status of 0 is treated as
                                      live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              tcpSocket:
                                description: >-
                                  TCPSocket specifies an action involving a TCP
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Optional: Host name to connect to,
                                      defaults to the pod IP.
                                    type: string
                                  port:
                                    description: >-
                                      Number or name of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                              grpc:
                                description: >-
                                  GRPC specifies an action involving a GRPC
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    description: >-
                                      Port number of the gRPC service. Number
                                      must be in the range 1 to 65535.
                                    type: integer
                                    format: int32
                                  service:
                                    description: >-
                                      Service is the name of the service to
                                      place in the gRPC HealthCheckRequest (see
                                      https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
                                       If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                              periodSeconds:
                                description: >-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                type: integer
                                format: int32
                              timeoutSeconds:
                                description: >-
                                  Number of seconds after which the probe times
                                  out. Defaults to 1 second. Minimum value is 1.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                          stdin:
                            description: >-
                              Whether this container should allocate a buffer
                              for stdin in the container runtime. If this is not
                              set, reads from stdin in the container will always
                              result in EOF. Default is false.
                            type: boolean
                          terminationMessagePath:
                            description: >-
                              Optional: Path at which the file to which the
                              container's termination message will be written is
                              mounted into the container's filesystem. Message
                              written is intended to be brief final status, such
                              as an assertion failure message. Will be truncated
                              by the node if greater than 4096 bytes. The total
                              message length across all containers will be
                              limited to 12kb. Defaults to /dev/termination-log.
                              Cannot be updated.
                            type: string
                          stdinOnce:
                            description: >-
                              Whether the container runtime should close the
                              stdin channel after it has been opened by a single
                              attach. When stdin is true the stdin stream will
                              remain open across multiple attach sessions. If
                              stdinOnce is set to true, stdin is opened on
                              container start, is empty until the first client
                              attaches to stdin, and then remains open and
                              accepts data until the client disconnects, at
                              which time stdin is closed and remains closed
                              until the container is restarted. If this flag is
                              false, a container processes that reads from stdin
                              will never receive an EOF. Default is false
                            type: boolean
                          lifecycle:
                            description: >-
                              Actions that the management system should take in
                              response to container lifecycle events. Cannot be
                              updated.
                            type: object
                            properties:
                              postStart:
                                description: >-
                                  PostStart is called immediately after a
                                  container is created. If the handler fails,
                                  the container is terminated and restarted
                                  according to its restart policy. Other
                                  management of the container blocks until the
                                  hook completes. More info:
                                  https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                type: object
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: >-
                                          Command is the command line to execute
                                          inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The
                                          command is simply exec'd, it is not run
                                          inside a shell, so traditional shell
                                          instructions ('|', etc) won't work. To
                                          use a shell, you need to explicitly call
                                          out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is
                                          unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    description: >-
                                      HTTPGet specifies the http request to
                                      perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Host name to connect to, defaults to the
                                          pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: >-
                                          Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: >-
                                            HTTPHeader describes a custom header to
                                            be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: >-
                                                The header field name. This will be
                                                canonicalized upon output, so
                                                case-variant names will be understood as
                                                the same header.
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: >-
                                          Name or number of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: >-
                                          Scheme to use for connecting to the
                                          host. Defaults to HTTP.
                                        type: string
                                  tcpSocket:
                                    description: >-
                                      Deprecated. TCPSocket is NOT supported as
                                      a LifecycleHandler and kept for the
                                      backward compatibility. There are no
                                      validation of this field and lifecycle
                                      hooks will fail in runtime when tcp
                                      handler is specified.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Optional: Host name to connect to,
                                          defaults to the pod IP.
                                        type: string
                                      port:
                                        description: >-
                                          Number or name of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                              preStop:
                                description: >-
                                  PreStop is called immediately before a
                                  container is terminated due to an API request
                                  or management event such as liveness/startup
                                  probe failure, preemption, resource
                                  contention, etc. The handler is not called if
                                  the container crashes or exits. The Pod's
                                  termination grace period countdown begins
                                  before the PreStop hook is executed.
                                  Regardless of the outcome of the handler, the
                                  container will eventually terminate within the
                                  Pod's termination grace period (unless delayed
                                  by finalizers). Other management of the
                                  container blocks until the hook completes or
                                  until the termination grace period is reached.
                                  More info:
                                  https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                type: object
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: >-
                                          Command is the command line to execute
                                          inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The
                                          command is simply exec'd, it is not run
                                          inside a shell, so traditional shell
                                          instructions ('|', etc) won't work. To
                                          use a shell, you need to explicitly call
                                          out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is
                                          unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    description: >-
                                      HTTPGet specifies the http request to
                                      perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Host name to connect to, defaults to the
                                          pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: >-
                                          Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: >-
                                            HTTPHeader describes a custom header to
                                            be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: >-
                                                The header field name. This will be
                                                canonicalized upon output, so
                                                case-variant names will be understood as
                                                the same header.
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: >-
                                          Name or number of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: >-
                                          Scheme to use for connecting to the
                                          host. Defaults to HTTP.
                                        type: string
                                  tcpSocket:
                                    description: >-
                                      Deprecated. TCPSocket is NOT supported as
                                      a LifecycleHandler and kept for the
                                      backward compatibility. There are no
                                      validation of this field and lifecycle
                                      hooks will fail in runtime when tcp
                                      handler is specified.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: >-
                                          Optional: Host name to connect to,
                                          defaults to the pod IP.
                                        type: string
                                      port:
                                        description: >-
                                          Number or name of the port to access on
                                          the container. Number must be in the
                                          range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                          name:
                            description: >-
                              Name of the container specified as a DNS_LABEL.
                              Each container in a pod must have a unique name
                              (DNS_LABEL). Cannot be updated.
                            type: string
                          command:
                            description: >-
                              Entrypoint array. Not executed within a shell. The
                              container image's ENTRYPOINT is used if this is
                              not provided. Variable references $(VAR_NAME) are
                              expanded using the container's environment. If a
                              variable cannot be resolved, the reference in the
                              input string will be unchanged. Double $$ are
                              reduced to a single $, which allows for escaping
                              the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                              produce the string literal "$(VAR_NAME)". Escaped
                              references will never be expanded, regardless of
                              whether the variable exists or not. Cannot be
                              updated. More info:
                              https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                            type: array
                            items:
                              type: string
                          livenessProbe:
                            description: >-
                              Periodic probe of container liveness. Container
                              will be restarted if the probe fails. Cannot be
                              updated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            type: object
                            properties:
                              initialDelaySeconds:
                                description: >-
                                  Number of seconds after the container has
                                  started before liveness probes are initiated.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                              failureThreshold:
                                description: >-
                                  Minimum consecutive failures for the probe to
                                  be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                type: integer
                                format: int32
                              successThreshold:
                                description: >-
                                  Minimum consecutive successes for the probe to
                                  be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and
                                  startup. Minimum value is 1.
                                type: integer
                                format: int32
                              terminationGracePeriodSeconds:
                                description: >-
                                  Optional duration in seconds the pod needs to
                                  terminate gracefully upon probe failure. The
                                  grace period is the duration in seconds after
                                  the processes running in the pod are sent a
                                  termination signal and the time when the
                                  processes are forcibly halted with a kill
                                  signal. Set this value longer than the
                                  expected cleanup time for your process. If
                                  this value is nil, the pod's
                                  terminationGracePeriodSeconds will be used.
                                  Otherwise, this value overrides the value
                                  provided by the pod spec. Value must be
                                  non-negative integer. The value zero indicates
                                  stop immediately via the kill signal (no
                                  opportunity to shut down). This is a beta
                                  field and requires enabling
                                  ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1.
                                  spec.terminationGracePeriodSeconds is used if
                                  unset.
                                type: integer
                                format: int64
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Host name to connect to, defaults to the
                                      pod IP. You probably want to set "Host" in
                                      httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: >-
                                      Custom headers to set in the request. HTTP
                                      allows repeated headers.
                                    type: array
                                    items:
                                      description: >-
                                        HTTPHeader describes a custom header to
                                        be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: >-
                                            The header field name. This will be
                                            canonicalized upon output, so
                                            case-variant names will be understood as
                                            the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: >-
                                      Name or number of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: >-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: >-
                                      Command is the command line to execute
                                      inside the container, the working
                                      directory for the command  is root ('/')
                                      in the container's filesystem. The command
                                      is simply exec'd, it is not run inside a
                                      shell, so traditional shell instructions
                                      ('|', etc) won't work. To use a shell, you
                                      need to explicitly call out to that shell.
                                      Exit status of 0 is treated as
                                      live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              tcpSocket:
                                description: >-
                                  TCPSocket specifies an action involving a TCP
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Optional: Host name to connect to,
                                      defaults to the pod IP.
                                    type: string
                                  port:
                                    description: >-
                                      Number or name of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                              grpc:
                                description: >-
                                  GRPC specifies an action involving a GRPC
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    description: >-
                                      Port number of the gRPC service. Number
                                      must be in the range 1 to 65535.
                                    type: integer
                                    format: int32
                                  service:
                                    description: >-
                                      Service is the name of the service to
                                      place in the gRPC HealthCheckRequest (see
                                      https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
                                       If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                              periodSeconds:
                                description: >-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                type: integer
                                format: int32
                              timeoutSeconds:
                                description: >-
                                  Number of seconds after which the probe times
                                  out. Defaults to 1 second. Minimum value is 1.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                          env:
                            description: >-
                              List of environment variables to set in the
                              container. Cannot be updated.
                            type: array
                            items:
                              description: >-
                                EnvVar represents an environment variable
                                present in a Container.
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  description: >-
                                    Name of the environment variable. Must be a
                                    C_IDENTIFIER.
                                  type: string
                                value:
                                  description: >-
                                    Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment
                                    variables in the container and any service
                                    environment variables. If a variable cannot
                                    be resolved, the reference in the input
                                    string will be unchanged. Double $$ are
                                    reduced to a single $, which allows for
                                    escaping the $(VAR_NAME) syntax: i.e.
                                    "$$(VAR_NAME)" will produce the string
                                    literal "$(VAR_NAME)". Escaped references
                                    will never be expanded, regardless of
                                    whether the variable exists or not. Defaults
                                    to "".
                                  type: string
                                valueFrom:
                                  description: >-
                                    Source for the environment variable's value.
                                    Cannot be used if value is not empty.
                                  type: object
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: >-
                                            Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields.
                                            apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: >-
                                            Specify whether the ConfigMap or its key
                                            must be defined
                                          type: boolean
                                    fieldRef:
                                      description: >-
                                        Selects a field of the pod: supports
                                        metadata.name, metadata.namespace,
                                        `metadata.labels['<KEY>']`,
                                        `metadata.annotations['<KEY>']`,
                                        spec.nodeName, spec.serviceAccountName,
                                        status.hostIP, status.podIP,
                                        status.podIPs.
                                      type: object
                                      required:
                                        - fieldPath
                                      properties:
                                        apiVersion:
                                          description: >-
                                            Version of the schema the FieldPath is
                                            written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: >-
                                            Path of the field to select in the
                                            specified API version.
                                          type: string
                                    resourceFieldRef:
                                      description: >-
                                        Selects a resource of the container:
                                        only resources limits and requests
                                        (limits.cpu, limits.memory,
                                        limits.ephemeral-storage, requests.cpu,
                                        requests.memory and
                                        requests.ephemeral-storage) are
                                        currently supported.
                                      type: object
                                      required:
                                        - resource
                                      properties:
                                        containerName:
                                          description: >-
                                            Container name: required for volumes,
                                            optional for env vars
                                          type: string
                                        divisor:
                                          description: >-
                                            Specifies the output format of the
                                            exposed resources, defaults to "1"
                                          pattern: >-
                                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                    secretKeyRef:
                                      description: >-
                                        Selects a key of a secret in the pod's
                                        namespace
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          description: >-
                                            The key of the secret to select from. 
                                            Must be a valid secret key.
                                          type: string
                                        name:
                                          description: >-
                                            Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields.
                                            apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: >-
                                            Specify whether the Secret or its key
                                            must be defined
                                          type: boolean
                          securityContext:
                            description: >-
                              SecurityContext defines the security options the
                              container should be run with. If set, the fields
                              of SecurityContext override the equivalent fields
                              of PodSecurityContext. More info:
                              https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                            type: object
                            properties:
                              runAsGroup:
                                description: >-
                                  The GID to run the entrypoint of the container
                                  process. Uses runtime default if unset. May
                                  also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is windows.
                                type: integer
                                format: int64
                              procMount:
                                description: >-
                                  procMount denotes the type of proc mount to
                                  use for the containers. The default is
                                  DefaultProcMount which uses the container
                                  runtime defaults for readonly paths and masked
                                  paths. This requires the ProcMountType feature
                                  flag to be enabled. Note that this field
                                  cannot be set when spec.os.name is windows.
                                type: string
                              runAsUser:
                                description: >-
                                  The UID to run the entrypoint of the container
                                  process. Defaults to user specified in image
                                  metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is windows.
                                type: integer
                                format: int64
                              seccompProfile:
                                description: >-
                                  The seccomp options to use by this container.
                                  If seccomp options are provided at both the
                                  pod & container level, the container options
                                  override the pod options. Note that this field
                                  cannot be set when spec.os.name is windows.
                                type: object
                                required:
                                  - type
                                properties:
                                  localhostProfile:
                                    description: >-
                                      localhostProfile indicates a profile
                                      defined in a file on the node should be
                                      used. The profile must be preconfigured on
                                      the node to work. Must be a descending
                                      path, relative to the kubelet's configured
                                      seccomp profile location. Must be set if
                                      type is "Localhost". Must NOT be set for
                                      any other type.
                                    type: string
                                  type:
                                    description: >-
                                      type indicates which kind of seccomp
                                      profile will be applied. Valid options
                                      are: 
                                       Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                                    type: string
                              readOnlyRootFilesystem:
                                description: >-
                                  Whether this container has a read-only root
                                  filesystem. Default is false. Note that this
                                  field cannot be set when spec.os.name is
                                  windows.
                                type: boolean
                              runAsNonRoot:
                                description: >-
                                  Indicates that the container must run as a
                                  non-root user. If true, the Kubelet will
                                  validate the image at runtime to ensure that
                                  it does not run as UID 0 (root) and fail to
                                  start the container if it does. If unset or
                                  false, no such validation will be performed.
                                  May also be set in PodSecurityContext.  If set
                                  in both SecurityContext and
                                  PodSecurityContext, the value specified in
                                  SecurityContext takes precedence.
                                type: boolean
                              privileged:
                                description: >-
                                  Run container in privileged mode. Processes in
                                  privileged containers are essentially
                                  equivalent to root on the host. Defaults to
                                  false. Note that this field cannot be set when
                                  spec.os.name is windows.
                                type: boolean
                              capabilities:
                                description: >-
                                  The capabilities to add/drop when running
                                  containers. Defaults to the default set of
                                  capabilities granted by the container runtime.
                                  Note that this field cannot be set when
                                  spec.os.name is windows.
                                type: object
                                properties:
                                  add:
                                    description: Added capabilities
                                    type: array
                                    items:
                                      description: >-
                                        Capability represent POSIX capabilities
                                        type
                                      type: string
                                  drop:
                                    description: Removed capabilities
                                    type: array
                                    items:
                                      description: >-
                                        Capability represent POSIX capabilities
                                        type
                                      type: string
                              windowsOptions:
                                description: >-
                                  The Windows specific settings applied to all
                                  containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in
                                  both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is linux.
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    description: >-
                                      GMSACredentialSpec is where the GMSA
                                      admission webhook
                                      (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA
                                      credential spec named by the
                                      GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: >-
                                      GMSACredentialSpecName is the name of the
                                      GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: >-
                                      HostProcess determines if a container
                                      should be run as a 'Host Process'
                                      container. All of a Pod's containers must
                                      have the same effective HostProcess value
                                      (it is not allowed to have a mix of
                                      HostProcess containers and non-HostProcess
                                      containers). In addition, if HostProcess
                                      is true then HostNetwork must also be set
                                      to true.
                                    type: boolean
                                  runAsUserName:
                                    description: >-
                                      The UserName in Windows to run the
                                      entrypoint of the container process.
                                      Defaults to the user specified in image
                                      metadata if unspecified. May also be set
                                      in PodSecurityContext. If set in both
                                      SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext
                                      takes precedence.
                                    type: string
                              seLinuxOptions:
                                description: >-
                                  The SELinux context to be applied to the
                                  container. If unspecified, the container
                                  runtime will allocate a random SELinux context
                                  for each container.  May also be set in
                                  PodSecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes
                                  precedence. Note that this field cannot be set
                                  when spec.os.name is windows.
                                type: object
                                properties:
                                  level:
                                    description: >-
                                      Level is SELinux level label that applies
                                      to the container.
                                    type: string
                                  role:
                                    description: >-
                                      Role is a SELinux role label that applies
                                      to the container.
                                    type: string
                                  type:
                                    description: >-
                                      Type is a SELinux type label that applies
                                      to the container.
                                    type: string
                                  user:
                                    description: >-
                                      User is a SELinux user label that applies
                                      to the container.
                                    type: string
                              allowPrivilegeEscalation:
                                description: >-
                                  AllowPrivilegeEscalation controls whether a
                                  process can gain more privileges than its
                                  parent process. This bool directly controls if
                                  the no_new_privs flag will be set on the
                                  container process. AllowPrivilegeEscalation is
                                  true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN Note that this
                                  field cannot be set when spec.os.name is
                                  windows.
                                type: boolean
                          ports:
                            description: >-
                              List of ports to expose from the container. Not
                              specifying a port here DOES NOT prevent that port
                              from being exposed. Any port which is listening on
                              the default "0.0.0.0" address inside a container
                              will be accessible from the network. Modifying
                              this array with strategic merge patch may corrupt
                              the data. For more information See
                              https://github.com/kubernetes/kubernetes/issues/108255.
                              Cannot be updated.
                            type: array
                            items:
                              description: >-
                                ContainerPort represents a network port in a
                                single container.
                              type: object
                              required:
                                - containerPort
                              properties:
                                containerPort:
                                  description: >-
                                    Number of port to expose on the pod's IP
                                    address. This must be a valid port number, 0
                                    < x < 65536.
                                  type: integer
                                  format: int32
                                hostIP:
                                  description: What host IP to bind the external port to.
                                  type: string
                                hostPort:
                                  description: >-
                                    Number of port to expose on the host. If
                                    specified, this must be a valid port number,
                                    0 < x < 65536. If HostNetwork is specified,
                                    this must match ContainerPort. Most
                                    containers do not need this.
                                  type: integer
                                  format: int32
                                name:
                                  description: >-
                                    If specified, this must be an IANA_SVC_NAME
                                    and unique within the pod. Each named port
                                    in a pod must have a unique name. Name for
                                    the port that can be referred to by
                                    services.
                                  type: string
                                protocol:
                                  description: >-
                                    Protocol for port. Must be UDP, TCP, or
                                    SCTP. Defaults to "TCP".
                                  type: string
                                  default: TCP
                            x-kubernetes-list-map-keys:
                              - containerPort
                              - protocol
                            x-kubernetes-list-type: map
                          imagePullPolicy:
                            description: >-
                              Image pull policy. One of Always, Never,
                              IfNotPresent. Defaults to Always if :latest tag is
                              specified, or IfNotPresent otherwise. Cannot be
                              updated. More info:
                              https://kubernetes.io/docs/concepts/containers/images#updating-images
                            type: string
                          startupProbe:
                            description: >-
                              StartupProbe indicates that the Pod has
                              successfully initialized. If specified, no other
                              probes are executed until this completes
                              successfully. If this probe fails, the Pod will be
                              restarted, just as if the livenessProbe failed.
                              This can be used to provide different probe
                              parameters at the beginning of a Pod's lifecycle,
                              when it might take a long time to load data or
                              warm a cache, than during steady-state operation.
                              This cannot be updated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            type: object
                            properties:
                              initialDelaySeconds:
                                description: >-
                                  Number of seconds after the container has
                                  started before liveness probes are initiated.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                              failureThreshold:
                                description: >-
                                  Minimum consecutive failures for the probe to
                                  be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                type: integer
                                format: int32
                              successThreshold:
                                description: >-
                                  Minimum consecutive successes for the probe to
                                  be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and
                                  startup. Minimum value is 1.
                                type: integer
                                format: int32
                              terminationGracePeriodSeconds:
                                description: >-
                                  Optional duration in seconds the pod needs to
                                  terminate gracefully upon probe failure. The
                                  grace period is the duration in seconds after
                                  the processes running in the pod are sent a
                                  termination signal and the time when the
                                  processes are forcibly halted with a kill
                                  signal. Set this value longer than the
                                  expected cleanup time for your process. If
                                  this value is nil, the pod's
                                  terminationGracePeriodSeconds will be used.
                                  Otherwise, this value overrides the value
                                  provided by the pod spec. Value must be
                                  non-negative integer. The value zero indicates
                                  stop immediately via the kill signal (no
                                  opportunity to shut down). This is a beta
                                  field and requires enabling
                                  ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1.
                                  spec.terminationGracePeriodSeconds is used if
                                  unset.
                                type: integer
                                format: int64
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Host name to connect to, defaults to the
                                      pod IP. You probably want to set "Host" in
                                      httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: >-
                                      Custom headers to set in the request. HTTP
                                      allows repeated headers.
                                    type: array
                                    items:
                                      description: >-
                                        HTTPHeader describes a custom header to
                                        be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: >-
                                            The header field name. This will be
                                            canonicalized upon output, so
                                            case-variant names will be understood as
                                            the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: >-
                                      Name or number of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: >-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: >-
                                      Command is the command line to execute
                                      inside the container, the working
                                      directory for the command  is root ('/')
                                      in the container's filesystem. The command
                                      is simply exec'd, it is not run inside a
                                      shell, so traditional shell instructions
                                      ('|', etc) won't work. To use a shell, you
                                      need to explicitly call out to that shell.
                                      Exit status of 0 is treated as
                                      live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              tcpSocket:
                                description: >-
                                  TCPSocket specifies an action involving a TCP
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: >-
                                      Optional: Host name to connect to,
                                      defaults to the pod IP.
                                    type: string
                                  port:
                                    description: >-
                                      Number or name of the port to access on
                                      the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                              grpc:
                                description: >-
                                  GRPC specifies an action involving a GRPC
                                  port.
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    description: >-
                                      Port number of the gRPC service. Number
                                      must be in the range 1 to 65535.
                                    type: integer
                                    format: int32
                                  service:
                                    description: >-
                                      Service is the name of the service to
                                      place in the gRPC HealthCheckRequest (see
                                      https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
                                       If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                              periodSeconds:
                                description: >-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                type: integer
                                format: int32
                              timeoutSeconds:
                                description: >-
                                  Number of seconds after which the probe times
                                  out. Defaults to 1 second. Minimum value is 1.
                                  More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                type: integer
                                format: int32
                          volumeMounts:
                            description: >-
                              Pod volumes to mount into the container's
                              filesystem. Cannot be updated.
                            type: array
                            items:
                              description: >-
                                VolumeMount describes a mounting of a Volume
                                within a container.
                              type: object
                              required:
                                - mountPath
                                - name
                              properties:
                                mountPath:
                                  description: >-
                                    Path within the container at which the
                                    volume should be mounted.  Must not contain
                                    ':'.
                                  type: string
                                mountPropagation:
                                  description: >-
                                    mountPropagation determines how mounts are
                                    propagated from the host to container and
                                    the other way around. When not set,
                                    MountPropagationNone is used. This field is
                                    beta in 1.10.
                                  type: string
                                name:
                                  description: This must match the Name of a Volume.
                                  type: string
                                readOnly:
                                  description: >-
                                    Mounted read-only if true, read-write
                                    otherwise (false or unspecified). Defaults
                                    to false.
                                  type: boolean
                                subPath:
                                  description: >-
                                    Path within the volume from which the
                                    container's volume should be mounted.
                                    Defaults to "" (volume's root).
                                  type: string
                                subPathExpr:
                                  description: >-
                                    Expanded path within the volume from which
                                    the container's volume should be mounted.
                                    Behaves similarly to SubPath but environment
                                    variable references $(VAR_NAME) are expanded
                                    using the container's environment. Defaults
                                    to "" (volume's root). SubPathExpr and
                                    SubPath are mutually exclusive.
                                  type: string
                          terminationMessagePolicy:
                            description: >-
                              Indicate how the termination message should be
                              populated. File will use the contents of
                              terminationMessagePath to populate the container
                              status message on both success and failure.
                              FallbackToLogsOnError will use the last chunk of
                              container log output if the termination message
                              file is empty and the container exited with an
                              error. The log output is limited to 2048 bytes or
                              80 lines, whichever is smaller. Defaults to File.
                              Cannot be updated.
                            type: string
                          envFrom:
                            description: >-
                              List of sources to populate environment variables
                              in the container. The keys defined within a source
                              must be a C_IDENTIFIER. All invalid keys will be
                              reported as an event when the container is
                              starting. When a key exists in multiple sources,
                              the value associated with the last source will
                              take precedence. Values defined by an Env with a
                              duplicate key will take precedence. Cannot be
                              updated.
                            type: array
                            items:
                              description: >-
                                EnvFromSource represents the source of a set of
                                ConfigMaps
                              type: object
                              properties:
                                configMapRef:
                                  description: The ConfigMap to select from
                                  type: object
                                  properties:
                                    name:
                                      description: >-
                                        Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields.
                                        apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: >-
                                        Specify whether the ConfigMap must be
                                        defined
                                      type: boolean
                                prefix:
                                  description: >-
                                    An optional identifier to prepend to each
                                    key in the ConfigMap. Must be a
                                    C_IDENTIFIER.
                                  type: string
                                secretRef:
                                  description: The Secret to select from
                                  type: object
                                  properties:
                                    name:
                                      description: >-
                                        Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields.
                                        apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: >-
                                        Specify whether the Secret must be
                                        defined
                                      type: boolean
                          tty:
                            description: >-
                              Whether this container should allocate a TTY for
                              itself, also requires 'stdin' to be true. Default
                              is false.
                            type: boolean
                          image:
                            description: >-
                              Container image name. More info:
                              https://kubernetes.io/docs/concepts/containers/images
                              This field is optional to allow higher level
                              config management to default or override container
                              images in workload controllers like Deployments
                              and StatefulSets.
                            type: string
                          workingDir:
                            description: >-
                              Container's working directory. If not specified,
                              the container runtime's default will be used,
                              which might be configured in the container image.
                              Cannot be updated.
                            type: string
                          args:
                            description: >-
                              Arguments to the entrypoint. The container image's
                              CMD is used if this is not provided. Variable
                              references $(VAR_NAME) are expanded using the
                              container's environment. If a variable cannot be
                              resolved, the reference in the input string will
                              be unchanged. Double $$ are reduced to a single $,
                              which allows for escaping the $(VAR_NAME) syntax:
                              i.e. "$$(VAR_NAME)" will produce the string
                              literal "$(VAR_NAME)". Escaped references will
                              never be expanded, regardless of whether the
                              variable exists or not. Cannot be updated. More
                              info:
                              https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                            type: array
                            items:
                              type: string
                    execTimeout:
                      description: >-
                        ExecTimeout specifies the timeout in seconds for tool
                        execution
                      type: integer
                    mountsatoken:
                      description: >-
                        MountSAToken describes whether you would like to have
                        the Repo server mount the service account token
                      type: boolean
                    volumeMounts:
                      description: >-
                        VolumeMounts adds volumeMounts to the repo server
                        container
                      type: array
                      items:
                        description: >-
                          VolumeMount describes a mounting of a Volume within a
                          container.
                        type: object
                        required:
                          - mountPath
                          - name
                        properties:
                          mountPath:
                            description: >-
                              Path within the container at which the volume
                              should be mounted.  Must not contain ':'.
                            type: string
                          mountPropagation:
                            description: >-
                              mountPropagation determines how mounts are
                              propagated from the host to container and the
                              other way around. When not set,
                              MountPropagationNone is used. This field is beta
                              in 1.10.
                            type: string
                          name:
                            description: This must match the Name of a Volume.
                            type: string
                          readOnly:
                            description: >-
                              Mounted read-only if true, read-write otherwise
                              (false or unspecified). Defaults to false.
                            type: boolean
                          subPath:
                            description: >-
                              Path within the volume from which the container's
                              volume should be mounted. Defaults to "" (volume's
                              root).
                            type: string
                          subPathExpr:
                            description: >-
                              Expanded path within the volume from which the
                              container's volume should be mounted. Behaves
                              similarly to SubPath but environment variable
                              references $(VAR_NAME) are expanded using the
                              container's environment. Defaults to "" (volume's
                              root). SubPathExpr and SubPath are mutually
                              exclusive.
                            type: string
                    version:
                      description: Version is the ArgoCD Repo Server container image tag.
                      type: string
                    serviceaccount:
                      description: >-
                        ServiceAccount defines the ServiceAccount user that you
                        would like the Repo server to use
                      type: string
                    volumes:
                      description: Volumes adds volumes to the repo server deployment
                      type: array
                      items:
                        description: >-
                          Volume represents a named volume in a pod that may be
                          accessed by any container in the pod.
                        type: object
                        required:
                          - name
                        properties:
                          emptyDir:
                            description: >-
                              emptyDir represents a temporary directory that
                              shares a pod's lifetime. More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            type: object
                            properties:
                              medium:
                                description: >-
                                  medium represents what type of storage medium
                                  should back this directory. The default is ""
                                  which means to use the node's default medium.
                                  Must be an empty string (default) or Memory.
                                  More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                type: string
                              sizeLimit:
                                description: >-
                                  sizeLimit is the total amount of local storage
                                  required for this EmptyDir volume. The size
                                  limit is also applicable for memory medium.
                                  The maximum usage on memory medium EmptyDir
                                  would be the minimum value between the
                                  SizeLimit specified here and the sum of memory
                                  limits of all containers in a pod. The default
                                  is nil which means that the limit is
                                  undefined. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                pattern: >-
                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                anyOf:
                                  - type: integer
                                  - type: string
                                x-kubernetes-int-or-string: true
                          gitRepo:
                            description: >-
                              gitRepo represents a git repository at a
                              particular revision. DEPRECATED: GitRepo is
                              deprecated. To provision a container with a git
                              repo, mount an EmptyDir into an InitContainer that
                              clones the repo using git, then mount the EmptyDir
                              into the Pod's container.
                            type: object
                            required:
                              - repository
                            properties:
                              directory:
                                description: >-
                                  directory is the target directory name. Must
                                  not contain or start with '..'.  If '.' is
                                  supplied, the volume directory will be the git
                                  repository.  Otherwise, if specified, the
                                  volume will contain the git repository in the
                                  subdirectory with the given name.
                                type: string
                              repository:
                                description: repository is the URL
                                type: string
                              revision:
                                description: >-
                                  revision is the commit hash for the specified
                                  revision.
                                type: string
                          cephfs:
                            description: >-
                              cephFS represents a Ceph FS mount on the host that
                              shares a pod's lifetime
                            type: object
                            required:
                              - monitors
                            properties:
                              monitors:
                                description: >-
                                  monitors is Required: Monitors is a collection
                                  of Ceph monitors More info:
                                  https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                type: array
                                items:
                                  type: string
                              path:
                                description: >-
                                  path is Optional: Used as the mounted root,
                                  rather than the full Ceph tree, default is /
                                type: string
                              readOnly:
                                description: >-
                                  readOnly is Optional: Defaults to false
                                  (read/write). ReadOnly here will force the
                                  ReadOnly setting in VolumeMounts. More info:
                                  https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                type: boolean
                              secretFile:
                                description: >-
                                  secretFile is Optional: SecretFile is the path
                                  to key ring for User, default is
                                  /etc/ceph/user.secret More info:
                                  https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                type: string
                              secretRef:
                                description: >-
                                  secretRef is Optional: SecretRef is reference
                                  to the authentication secret for User, default
                                  is empty. More info:
                                  https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              user:
                                description: >-
                                  user is optional: User is the rados user name,
                                  default is admin More info:
                                  https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                type: string
                          cinder:
                            description: >-
                              cinder represents a cinder volume attached and
                              mounted on kubelets host machine. More info:
                              https://examples.k8s.io/mysql-cinder-pd/README.md
                            type: object
                            required:
                              - volumeID
                            properties:
                              fsType:
                                description: >-
                                  fsType is the filesystem type to mount. Must
                                  be a filesystem type supported by the host
                                  operating system. Examples: "ext4", "xfs",
                                  "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified. More info:
                                  https://examples.k8s.io/mysql-cinder-pd/README.md
                                type: string
                              readOnly:
                                description: >-
                                  readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting
                                  in VolumeMounts. More info:
                                  https://examples.k8s.io/mysql-cinder-pd/README.md
                                type: boolean
                              secretRef:
                                description: >-
                                  secretRef is optional: points to a secret
                                  object containing parameters used to connect
                                  to OpenStack.
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              volumeID:
                                description: >-
                                  volumeID used to identify the volume in
                                  cinder. More info:
                                  https://examples.k8s.io/mysql-cinder-pd/README.md
                                type: string
                          glusterfs:
                            description: >-
                              glusterfs represents a Glusterfs mount on the host
                              that shares a pod's lifetime. More info:
                              https://examples.k8s.io/volumes/glusterfs/README.md
                            type: object
                            required:
                              - endpoints
                              - path
                            properties:
                              endpoints:
                                description: >-
                                  endpoints is the endpoint name that details
                                  Glusterfs topology. More info:
                                  https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                type: string
                              path:
                                description: >-
                                  path is the Glusterfs volume path. More info:
                                  https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                type: string
                              readOnly:
                                description: >-
                                  readOnly here will force the Glusterfs volume
                                  to be mounted with read-only permissions.
                                  Defaults to false. More info:
                                  https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                type: boolean
                          azureFile:
                            description: >-
                              azureFile represents an Azure File Service mount
                              on the host and bind mount to the pod.
                            type: object
                            required:
                              - secretName
                              - shareName
                            properties:
                              readOnly:
                                description: >-
                                  readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting
                                  in VolumeMounts.
                                type: boolean
                              secretName:
                                description: >-
                                  secretName is the  name of secret that
                                  contains Azure Storage Account Name and Key
                                type: string
                              shareName:
                                description: shareName is the azure share Name
                                type: string
                          persistentVolumeClaim:
                            description: >-
                              persistentVolumeClaimVolumeSource represents a
                              reference to a PersistentVolumeClaim in the same
                              namespace. More info:
                              https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                            type: object
                            required:
                              - claimName
                            properties:
                              claimName:
                                description: >-
                                  claimName is the name of a
                                  PersistentVolumeClaim in the same namespace as
                                  the pod using this volume. More info:
                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                type: string
                              readOnly:
                                description: >-
                                  readOnly Will force the ReadOnly setting in
                                  VolumeMounts. Default false.
                                type: boolean
                          name:
                            description: >-
                              name of the volume. Must be a DNS_LABEL and unique
                              within the pod. More info:
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          azureDisk:
                            description: >-
                              azureDisk represents an Azure Data Disk mount on
                              the host and bind mount to the pod.
                            type: object
                            required:
                              - diskName
                              - diskURI
                            properties:
                              cachingMode:
                                description: >-
                                  cachingMode is the Host Caching mode: None,
                                  Read Only, Read Write.
                                type: string
                              diskName:
                                description: >-
                                  diskName is the Name of the data disk in the
                                  blob storage
                                type: string
                              diskURI:
                                description: >-
                                  diskURI is the URI of data disk in the blob
                                  storage
                                type: string
                              fsType:
                                description: >-
                                  fsType is Filesystem type to mount. Must be a
                                  filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              kind:
                                description: >-
                                  kind expected values are Shared: multiple blob
                                  disks per storage account  Dedicated: single
                                  blob disk per storage account  Managed: azure
                                  managed data disk (only in managed
                                  availability set). defaults to shared
                                type: string
                              readOnly:
                                description: >-
                                  readOnly Defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting
                                  in VolumeMounts.
                                type: boolean
                          awsElasticBlockStore:
                            description: >-
                              awsElasticBlockStore represents an AWS Disk
                              resource that is attached to a kubelet's host
                              machine and then exposed to the pod. More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                            type: object
                            required:
                              - volumeID
                            properties:
                              fsType:
                                description: >-
                                  fsType is the filesystem type of the volume
                                  that you want to mount. Tip: Ensure that the
                                  filesystem type is supported by the host
                                  operating system. Examples: "ext4", "xfs",
                                  "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  TODO: how do we prevent errors in the
                                  filesystem from compromising the machine
                                type: string
                              partition:
                                description: >-
                                  partition is the partition in the volume that
                                  you want to mount. If omitted, the default is
                                  to mount by volume name. Examples: For volume
                                  /dev/sda1, you specify the partition as "1".
                                  Similarly, the volume partition for /dev/sda
                                  is "0" (or you can leave the property empty).
                                type: integer
                                format: int32
                              readOnly:
                                description: >-
                                  readOnly value true will force the readOnly
                                  setting in VolumeMounts. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                type: boolean
                              volumeID:
                                description: >-
                                  volumeID is unique ID of the persistent disk
                                  resource in AWS (Amazon EBS volume). More
                                  info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                type: string
                          hostPath:
                            description: >-
                              hostPath represents a pre-existing file or
                              directory on the host machine that is directly
                              exposed to the container. This is generally used
                              for system agents or other privileged things that
                              are allowed to see the host machine. Most
                              containers will NOT need this. More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              --- TODO(jonesdl) We need to restrict who can use
                              host directory mounts and who can/can not mount
                              host directories as read/write.
                            type: object
                            required:
                              - path
                            properties:
                              path:
                                description: >-
                                  path of the directory on the host. If the path
                                  is a symlink, it will follow the link to the
                                  real path. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                type: string
                              type:
                                description: >-
                                  type for HostPath Volume Defaults to "" More
                                  info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                type: string
                          iscsi:
                            description: >-
                              iscsi represents an ISCSI Disk resource that is
                              attached to a kubelet's host machine and then
                              exposed to the pod. More info:
                              https://examples.k8s.io/volumes/iscsi/README.md
                            type: object
                            required:
                              - iqn
                              - lun
                              - targetPortal
                            properties:
                              readOnly:
                                description: >-
                                  readOnly here will force the ReadOnly setting
                                  in VolumeMounts. Defaults to false.
                                type: boolean
                              secretRef:
                                description: >-
                                  secretRef is the CHAP Secret for iSCSI target
                                  and initiator authentication
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              lun:
                                description: lun represents iSCSI Target Lun number.
                                type: integer
                                format: int32
                              iqn:
                                description: iqn is the target iSCSI Qualified Name.
                                type: string
                              portals:
                                description: >-
                                  portals is the iSCSI Target Portal List. The
                                  portal is either an IP or ip_addr:port if the
                                  port is other than default (typically TCP
                                  ports 860 and 3260).
                                type: array
                                items:
                                  type: string
                              fsType:
                                description: >-
                                  fsType is the filesystem type of the volume
                                  that you want to mount. Tip: Ensure that the
                                  filesystem type is supported by the host
                                  operating system. Examples: "ext4", "xfs",
                                  "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                  TODO: how do we prevent errors in the
                                  filesystem from compromising the machine
                                type: string
                              iscsiInterface:
                                description: >-
                                  iscsiInterface is the interface Name that uses
                                  an iSCSI transport. Defaults to 'default'
                                  (tcp).
                                type: string
                              chapAuthDiscovery:
                                description: >-
                                  chapAuthDiscovery defines whether support
                                  iSCSI Discovery CHAP authentication
                                type: boolean
                              initiatorName:
                                description: >-
                                  initiatorName is the custom iSCSI Initiator
                                  Name. If initiatorName is specified with
                                  iscsiInterface simultaneously, new iSCSI
                                  interface <target portal>:<volume name> will
                                  be created for the connection.
                                type: string
                              chapAuthSession:
                                description: >-
                                  chapAuthSession defines whether support iSCSI
                                  Session CHAP authentication
                                type: boolean
                              targetPortal:
                                description: >-
                                  targetPortal is iSCSI Target Portal. The
                                  Portal is either an IP or ip_addr:port if the
                                  port is other than default (typically TCP
                                  ports 860 and 3260).
                                type: string
                          photonPersistentDisk:
                            description: >-
                              photonPersistentDisk represents a PhotonController
                              persistent disk attached and mounted on kubelets
                              host machine
                            type: object
                            required:
                              - pdID
                            properties:
                              fsType:
                                description: >-
                                  fsType is the filesystem type to mount. Must
                                  be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              pdID:
                                description: >-
                                  pdID is the ID that identifies Photon
                                  Controller persistent disk
                                type: string
                          secret:
                            description: >-
                              secret represents a secret that should populate
                              this volume. More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#secret
                            type: object
                            properties:
                              defaultMode:
                                description: >-
                                  defaultMode is Optional: mode bits used to set
                                  permissions on created files by default. Must
                                  be an octal value between 0000 and 0777 or a
                                  decimal value between 0 and 511. YAML accepts
                                  both octal and decimal values, JSON requires
                                  decimal values for mode bits. Defaults to
                                  0644. Directories within the path are not
                                  affected by this setting. This might be in
                                  conflict with other options that affect the
                                  file mode, like fsGroup, and the result can be
                                  other mode bits set.
                                type: integer
                                format: int32
                              items:
                                description: >-
                                  items If unspecified, each key-value pair in
                                  the Data field of the referenced Secret will
                                  be projected into the volume as a file whose
                                  name is the key and content is the value. If
                                  specified, the listed keys will be projected
                                  into the specified paths, and unlisted keys
                                  will not be present. If a key is specified
                                  which is not present in the Secret, the volume
                                  setup will error unless it is marked optional.
                                  Paths must be relative and may not contain the
                                  '..' path or start with '..'.
                                type: array
                                items:
                                  description: Maps a string key to a path within a volume.
                                  type: object
                                  required:
                                    - key
                                    - path
                                  properties:
                                    key:
                                      description: key is the key to project.
                                      type: string
                                    mode:
                                      description: >-
                                        mode is Optional: mode bits used to set
                                        permissions on this file. Must be an
                                        octal value between 0000 and 0777 or a
                                        decimal value between 0 and 511. YAML
                                        accepts both octal and decimal values,
                                        JSON requires decimal values for mode
                                        bits. If not specified, the volume
                                        defaultMode will be used. This might be
                                        in conflict with other options that
                                        affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      type: integer
                                      format: int32
                                    path:
                                      description: >-
                                        path is the relative path of the file to
                                        map the key to. May not be an absolute
                                        path. May not contain the path element
                                        '..'. May not start with the string
                                        '..'.
                                      type: string
                              optional:
                                description: >-
                                  optional field specify whether the Secret or
                                  its keys must be defined
                                type: boolean
                              secretName:
                                description: >-
                                  secretName is the name of the secret in the
                                  pod's namespace to use. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#secret
                                type: string
                          scaleIO:
                            description: >-
                              scaleIO represents a ScaleIO persistent volume
                              attached and mounted on Kubernetes nodes.
                            type: object
                            required:
                              - gateway
                              - secretRef
                              - system
                            properties:
                              readOnly:
                                description: >-
                                  readOnly Defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting
                                  in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: >-
                                  secretRef references to the secret for ScaleIO
                                  user and other sensitive information. If this
                                  is not provided, Login operation will fail.
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              gateway:
                                description: >-
                                  gateway is the host address of the ScaleIO API
                                  Gateway.
                                type: string
                              volumeName:
                                description: >-
                                  volumeName is the name of a volume already
                                  created in the ScaleIO system that is
                                  associated with this volume source.
                                type: string
                              fsType:
                                description: >-
                                  fsType is the filesystem type to mount. Must
                                  be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  Default is "xfs".
                                type: string
                              system:
                                description: >-
                                  system is the name of the storage system as
                                  configured in ScaleIO.
                                type: string
                              sslEnabled:
                                description: >-
                                  sslEnabled Flag enable/disable SSL
                                  communication with Gateway, default false
                                type: boolean
                              storagePool:
                                description: >-
                                  storagePool is the ScaleIO Storage Pool
                                  associated with the protection domain.
                                type: string
                              protectionDomain:
                                description: >-
                                  protectionDomain is the name of the ScaleIO
                                  Protection Domain for the configured storage.
                                type: string
                              storageMode:
                                description: >-
                                  storageMode indicates whether the storage for
                                  a volume should be ThickProvisioned or
                                  ThinProvisioned. Default is ThinProvisioned.
                                type: string
                          flexVolume:
                            description: >-
                              flexVolume represents a generic volume resource
                              that is provisioned/attached using an exec based
                              plugin.
                            type: object
                            required:
                              - driver
                            properties:
                              driver:
                                description: >-
                                  driver is the name of the driver to use for
                                  this volume.
                                type: string
                              fsType:
                                description: >-
                                  fsType is the filesystem type to mount. Must
                                  be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  The default filesystem depends on FlexVolume
                                  script.
                                type: string
                              options:
                                description: >-
                                  options is Optional: this field holds extra
                                  command options if any.
                                type: object
                                additionalProperties:
                                  type: string
                              readOnly:
                                description: >-
                                  readOnly is Optional: defaults to false
                                  (read/write). ReadOnly here will force the
                                  ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: >-
                                  secretRef is Optional: secretRef is reference
                                  to the secret object containing sensitive
                                  information to pass to the plugin scripts.
                                  This may be empty if no secret object is
                                  specified. If the secret object contains more
                                  than one secret, all secrets are passed to the
                                  plugin scripts.
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                          quobyte:
                            description: >-
                              quobyte represents a Quobyte mount on the host
                              that shares a pod's lifetime
                            type: object
                            required:
                              - registry
                              - volume
                            properties:
                              group:
                                description: >-
                                  group to map volume access to Default is no
                                  group
                                type: string
                              readOnly:
                                description: >-
                                  readOnly here will force the Quobyte volume to
                                  be mounted with read-only permissions.
                                  Defaults to false.
                                type: boolean
                              registry:
                                description: >-
                                  registry represents a single or multiple
                                  Quobyte Registry services specified as a
                                  string as host:port pair (multiple entries are
                                  separated with commas) which acts as the
                                  central registry for volumes
                                type: string
                              tenant:
                                description: >-
                                  tenant owning the given Quobyte volume in the
                                  Backend Used with dynamically provisioned
                                  Quobyte volumes, value is set by the plugin
                                type: string
                              user:
                                description: >-
                                  user to map volume access to Defaults to
                                  serivceaccount user
                                type: string
                              volume:
                                description: >-
                                  volume is a string that references an already
                                  created Quobyte volume by name.
                                type: string
                          rbd:
                            description: >-
                              rbd represents a Rados Block Device mount on the
                              host that shares a pod's lifetime. More info:
                              https://examples.k8s.io/volumes/rbd/README.md
                            type: object
                            required:
                              - image
                              - monitors
                            properties:
                              fsType:
                                description: >-
                                  fsType is the filesystem type of the volume
                                  that you want to mount. Tip: Ensure that the
                                  filesystem type is supported by the host
                                  operating system. Examples: "ext4", "xfs",
                                  "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                  TODO: how do we prevent errors in the
                                  filesystem from compromising the machine
                                type: string
                              image:
                                description: >-
                                  image is the rados image name. More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: string
                              keyring:
                                description: >-
                                  keyring is the path to key ring for RBDUser.
                                  Default is /etc/ceph/keyring. More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: string
                              monitors:
                                description: >-
                                  monitors is a collection of Ceph monitors.
                                  More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: array
                                items:
                                  type: string
                              pool:
                                description: >-
                                  pool is the rados pool name. Default is rbd.
                                  More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: string
                              readOnly:
                                description: >-
                                  readOnly here will force the ReadOnly setting
                                  in VolumeMounts. Defaults to false. More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: boolean
                              secretRef:
                                description: >-
                                  secretRef is name of the authentication secret
                                  for RBDUser. If provided overrides keyring.
                                  Default is nil. More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              user:
                                description: >-
                                  user is the rados user name. Default is admin.
                                  More info:
                                  https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                type: string
                          projected:
                            description: >-
                              projected items for all in one resources secrets,
                              configmaps, and downward API
                            type: object
                            properties:
                              defaultMode:
                                description: >-
                                  defaultMode are the mode bits used to set
                                  permissions on created files by default. Must
                                  be an octal value between 0000 and 0777 or a
                                  decimal value between 0 and 511. YAML accepts
                                  both octal and decimal values, JSON requires
                                  decimal values for mode bits. Directories
                                  within the path are not affected by this
                                  setting. This might be in conflict with other
                                  options that affect the file mode, like
                                  fsGroup, and the result can be other mode bits
                                  set.
                                type: integer
                                format: int32
                              sources:
                                description: sources is the list of volume projections
                                type: array
                                items:
                                  description: >-
                                    Projection that may be projected along with
                                    other supported volume types
                                  type: object
                                  properties:
                                    configMap:
                                      description: >-
                                        configMap information about the
                                        configMap data to project
                                      type: object
                                      properties:
                                        items:
                                          description: >-
                                            items if unspecified, each key-value
                                            pair in the Data field of the referenced
                                            ConfigMap will be projected into the
                                            volume as a file whose name is the key
                                            and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is
                                            specified which is not present in the
                                            ConfigMap, the volume setup will error
                                            unless it is marked optional. Paths must
                                            be relative and may not contain the '..'
                                            path or start with '..'.
                                          type: array
                                          items:
                                            description: >-
                                              Maps a string key to a path within a
                                              volume.
                                            type: object
                                            required:
                                              - key
                                              - path
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: >-
                                                  mode is Optional: mode bits used to set
                                                  permissions on this file. Must be an
                                                  octal value between 0000 and 0777 or a
                                                  decimal value between 0 and 511. YAML
                                                  accepts both octal and decimal values,
                                                  JSON requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might be
                                                  in conflict with other options that
                                                  affect the file mode, like fsGroup, and
                                                  the result can be other mode bits set.
                                                type: integer
                                                format: int32
                                              path:
                                                description: >-
                                                  path is the relative path of the file to
                                                  map the key to. May not be an absolute
                                                  path. May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                        name:
                                          description: >-
                                            Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields.
                                            apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: >-
                                            optional specify whether the ConfigMap
                                            or its keys must be defined
                                          type: boolean
                                    downwardAPI:
                                      description: >-
                                        downwardAPI information about the
                                        downwardAPI data to project
                                      type: object
                                      properties:
                                        items:
                                          description: >-
                                            Items is a list of DownwardAPIVolume
                                            file
                                          type: array
                                          items:
                                            description: >-
                                              DownwardAPIVolumeFile represents
                                              information to create the file
                                              containing the pod field
                                            type: object
                                            required:
                                              - path
                                            properties:
                                              fieldRef:
                                                description: >-
                                                  Required: Selects a field of the pod:
                                                  only annotations, labels, name and
                                                  namespace are supported.
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  apiVersion:
                                                    description: >-
                                                      Version of the schema the FieldPath is
                                                      written in terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: >-
                                                      Path of the field to select in the
                                                      specified API version.
                                                    type: string
                                              mode:
                                                description: >-
                                                  Optional: mode bits used to set
                                                  permissions on this file, must be an
                                                  octal value between 0000 and 0777 or a
                                                  decimal value between 0 and 511. YAML
                                                  accepts both octal and decimal values,
                                                  JSON requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might be
                                                  in conflict with other options that
                                                  affect the file mode, like fsGroup, and
                                                  the result can be other mode bits set.
                                                type: integer
                                                format: int32
                                              path:
                                                description: >-
                                                  Required: Path is  the relative path
                                                  name of the file to be created. Must not
                                                  be absolute or contain the '..' path.
                                                  Must be utf-8 encoded. The first item of
                                                  the relative path must not start with
                                                  '..'
                                                type: string
                                              resourceFieldRef:
                                                description: >-
                                                  Selects a resource of the container:
                                                  only resources limits and requests
                                                  (limits.cpu, limits.memory, requests.cpu
                                                  and requests.memory) are currently
                                                  supported.
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  containerName:
                                                    description: >-
                                                      Container name: required for volumes,
                                                      optional for env vars
                                                    type: string
                                                  divisor:
                                                    description: >-
                                                      Specifies the output format of the
                                                      exposed resources, defaults to "1"
                                                    pattern: >-
                                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource to select'
                                                    type: string
                                    secret:
                                      description: >-
                                        secret information about the secret data
                                        to project
                                      type: object
                                      properties:
                                        items:
                                          description: >-
                                            items if unspecified, each key-value
                                            pair in the Data field of the referenced
                                            Secret will be projected into the volume
                                            as a file whose name is the key and
                                            content is the value. If specified, the
                                            listed keys will be projected into the
                                            specified paths, and unlisted keys will
                                            not be present. If a key is specified
                                            which is not present in the Secret, the
                                            volume setup will error unless it is
                                            marked optional. Paths must be relative
                                            and may not contain the '..' path or
                                            start with '..'.
                                          type: array
                                          items:
                                            description: >-
                                              Maps a string key to a path within a
                                              volume.
                                            type: object
                                            required:
                                              - key
                                              - path
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: >-
                                                  mode is Optional: mode bits used to set
                                                  permissions on this file. Must be an
                                                  octal value between 0000 and 0777 or a
                                                  decimal value between 0 and 511. YAML
                                                  accepts both octal and decimal values,
                                                  JSON requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might be
                                                  in conflict with other options that
                                                  affect the file mode, like fsGroup, and
                                                  the result can be other mode bits set.
                                                type: integer
                                                format: int32
                                              path:
                                                description: >-
                                                  path is the relative path of the file to
                                                  map the key to. May not be an absolute
                                                  path. May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                        name:
                                          description: >-
                                            Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields.
                                            apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: >-
                                            optional field specify whether the
                                            Secret or its key must be defined
                                          type: boolean
                                    serviceAccountToken:
                                      description: >-
                                        serviceAccountToken is information about
                                        the serviceAccountToken data to project
                                      type: object
                                      required:
                                        - path
                                      properties:
                                        audience:
                                          description: >-
                                            audience is the intended audience of the
                                            token. A recipient of a token must
                                            identify itself with an identifier
                                            specified in the audience of the token,
                                            and otherwise should reject the token.
                                            The audience defaults to the identifier
                                            of the apiserver.
                                          type: string
                                        expirationSeconds:
                                          description: >-
                                            expirationSeconds is the requested
                                            duration of validity of the service
                                            account token. As the token approaches
                                            expiration, the kubelet volume plugin
                                            will proactively rotate the service
                                            account token. The kubelet will start
                                            trying to rotate the token if the token
                                            is older than 80 percent of its time to
                                            live or if the token is older than 24
                                            hours.Defaults to 1 hour and must be at
                                            least 10 minutes.
                                          type: integer
                                          format: int64
                                        path:
                                          description: >-
                                            path is the path relative to the mount
                                            point of the file to project the token
                                            into.
                                          type: string
                          csi:
                            description: >-
                              csi (Container Storage Interface) represents
                              ephemeral storage that is handled by certain
                              external CSI drivers (Beta feature).
                            type: object
                            required:
                              - driver
                            properties:
                              driver:
                                description: >-
                                  driver is the name of the CSI driver that
                                  handles this volume. Consult with your admin
                                  for the correct name as registered in the
                                  cluster.
                                type: string
                              fsType:
                                description: >-
                                  fsType to mount. Ex. "ext4", "xfs", "ntfs". If
                                  not provided, the empty value is passed to the
                                  associated CSI driver which will determine the
                                  default filesystem to apply.
                                type: string
                              nodePublishSecretRef:
                                description: >-
                                  nodePublishSecretRef is a reference to the
                                  secret object containing sensitive information
                                  to pass to the CSI driver to complete the CSI
                                  NodePublishVolume and NodeUnpublishVolume
                                  calls. This field is optional, and  may be
                                  empty if no secret is required. If the secret
                                  object contains more than one secret, all
                                  secret references are passed.
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              readOnly:
                                description: >-
                                  readOnly specifies a read-only configuration
                                  for the volume. Defaults to false
                                  (read/write).
                                type: boolean
                              volumeAttributes:
                                description: >-
                                  volumeAttributes stores driver-specific
                                  properties that are passed to the CSI driver.
                                  Consult your driver's documentation for
                                  supported values.
                                type: object
                                additionalProperties:
                                  type: string
                          portworxVolume:
                            description: >-
                              portworxVolume represents a portworx volume
                              attached and mounted on kubelets host machine
                            type: object
                            required:
                              - volumeID
                            properties:
                              fsType:
                                description: >-
                                  fSType represents the filesystem type to mount
                                  Must be a filesystem type supported by the
                                  host operating system. Ex. "ext4", "xfs".
                                  Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              readOnly:
                                description: >-
                                  readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting
                                  in VolumeMounts.
                                type: boolean
                              volumeID:
                                description: volumeID uniquely identifies a Portworx volume
                                type: string
                          configMap:
                            description: >-
                              configMap represents a configMap that should
                              populate this volume
                            type: object
                            properties:
                              defaultMode:
                                description: >-
                                  defaultMode is optional: mode bits used to set
                                  permissions on created files by default. Must
                                  be an octal value between 0000 and 0777 or a
                                  decimal value between 0 and 511. YAML accepts
                                  both octal and decimal values, JSON requires
                                  decimal values for mode bits. Defaults to
                                  0644. Directories within the path are not
                                  affected by this setting. This might be in
                                  conflict with other options that affect the
                                  file mode, like fsGroup, and the result can be
                                  other mode bits set.
                                type: integer
                                format: int32
                              items:
                                description: >-
                                  items if unspecified, each key-value pair in
                                  the Data field of the referenced ConfigMap
                                  will be projected into the volume as a file
                                  whose name is the key and content is the
                                  value. If specified, the listed keys will be
                                  projected into the specified paths, and
                                  unlisted keys will not be present. If a key is
                                  specified which is not present in the
                                  ConfigMap, the volume setup will error unless
                                  it is marked optional. Paths must be relative
                                  and may not contain the '..' path or start
                                  with '..'.
                                type: array
                                items:
                                  description: Maps a string key to a path within a volume.
                                  type: object
                                  required:
                                    - key
                                    - path
                                  properties:
                                    key:
                                      description: key is the key to project.
                                      type: string
                                    mode:
                                      description: >-
                                        mode is Optional: mode bits used to set
                                        permissions on this file. Must be an
                                        octal value between 0000 and 0777 or a
                                        decimal value between 0 and 511. YAML
                                        accepts both octal and decimal values,
                                        JSON requires decimal values for mode
                                        bits. If not specified, the volume
                                        defaultMode will be used. This might be
                                        in conflict with other options that
                                        affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      type: integer
                                      format: int32
                                    path:
                                      description: >-
                                        path is the relative path of the file to
                                        map the key to. May not be an absolute
                                        path. May not contain the path element
                                        '..'. May not start with the string
                                        '..'.
                                      type: string
                              name:
                                description: >-
                                  Name of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion,
                                  kind, uid?
                                type: string
                              optional:
                                description: >-
                                  optional specify whether the ConfigMap or its
                                  keys must be defined
                                type: boolean
                          nfs:
                            description: >-
                              nfs represents an NFS mount on the host that
                              shares a pod's lifetime More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#nfs
                            type: object
                            required:
                              - path
                              - server
                            properties:
                              path:
                                description: >-
                                  path that is exported by the NFS server. More
                                  info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                type: string
                              readOnly:
                                description: >-
                                  readOnly here will force the NFS export to be
                                  mounted with read-only permissions. Defaults
                                  to false. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                type: boolean
                              server:
                                description: >-
                                  server is the hostname or IP address of the
                                  NFS server. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                type: string
                          downwardAPI:
                            description: >-
                              downwardAPI represents downward API about the pod
                              that should populate this volume
                            type: object
                            properties:
                              defaultMode:
                                description: >-
                                  Optional: mode bits to use on created files by
                                  default. Must be a Optional: mode bits used to
                                  set permissions on created files by default.
                                  Must be an octal value between 0000 and 0777
                                  or a decimal value between 0 and 511. YAML
                                  accepts both octal and decimal values, JSON
                                  requires decimal values for mode bits.
                                  Defaults to 0644. Directories within the path
                                  are not affected by this setting. This might
                                  be in conflict with other options that affect
                                  the file mode, like fsGroup, and the result
                                  can be other mode bits set.
                                type: integer
                                format: int32
                              items:
                                description: Items is a list of downward API volume file
                                type: array
                                items:
                                  description: >-
                                    DownwardAPIVolumeFile represents information
                                    to create the file containing the pod field
                                  type: object
                                  required:
                                    - path
                                  properties:
                                    fieldRef:
                                      description: >-
                                        Required: Selects a field of the pod:
                                        only annotations, labels, name and
                                        namespace are supported.
                                      type: object
                                      required:
                                        - fieldPath
                                      properties:
                                        apiVersion:
                                          description: >-
                                            Version of the schema the FieldPath is
                                            written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: >-
                                            Path of the field to select in the
                                            specified API version.
                                          type: string
                                    mode:
                                      description: >-
                                        Optional: mode bits used to set
                                        permissions on this file, must be an
                                        octal value between 0000 and 0777 or a
                                        decimal value between 0 and 511. YAML
                                        accepts both octal and decimal values,
                                        JSON requires decimal values for mode
                                        bits. If not specified, the volume
                                        defaultMode will be used. This might be
                                        in conflict with other options that
                                        affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      type: integer
                                      format: int32
                                    path:
                                      description: >-
                                        Required: Path is  the relative path
                                        name of the file to be created. Must not
                                        be absolute or contain the '..' path.
                                        Must be utf-8 encoded. The first item of
                                        the relative path must not start with
                                        '..'
                                      type: string
                                    resourceFieldRef:
                                      description: >-
                                        Selects a resource of the container:
                                        only resources limits and requests
                                        (limits.cpu, limits.memory, requests.cpu
                                        and requests.memory) are currently
                                        supported.
                                      type: object
                                      required:
                                        - resource
                                      properties:
                                        containerName:
                                          description: >-
                                            Container name: required for volumes,
                                            optional for env vars
                                          type: string
                                        divisor:
                                          description: >-
                                            Specifies the output format of the
                                            exposed resources, defaults to "1"
                                          pattern: >-
                                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                          gcePersistentDisk:
                            description: >-
                              gcePersistentDisk represents a GCE Disk resource
                              that is attached to a kubelet's host machine and
                              then exposed to the pod. More info:
                              https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                            type: object
                            required:
                              - pdName
                            properties:
                              fsType:
                                description: >-
                                  fsType is filesystem type of the volume that
                                  you want to mount. Tip: Ensure that the
                                  filesystem type is supported by the host
                                  operating system. Examples: "ext4", "xfs",
                                  "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  TODO: how do we prevent errors in the
                                  filesystem from compromising the machine
                                type: string
                              partition:
                                description: >-
                                  partition is the partition in the volume that
                                  you want to mount. If omitted, the default is
                                  to mount by volume name. Examples: For volume
                                  /dev/sda1, you specify the partition as "1".
                                  Similarly, the volume partition for /dev/sda
                                  is "0" (or you can leave the property empty).
                                  More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                type: integer
                                format: int32
                              pdName:
                                description: >-
                                  pdName is unique name of the PD resource in
                                  GCE. Used to identify the disk in GCE. More
                                  info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                type: string
                              readOnly:
                                description: >-
                                  readOnly here will force the ReadOnly setting
                                  in VolumeMounts. Defaults to false. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                type: boolean
                          fc:
                            description: >-
                              fc represents a Fibre Channel resource that is
                              attached to a kubelet's host machine and then
                              exposed to the pod.
                            type: object
                            properties:
                              fsType:
                                description: >-
                                  fsType is the filesystem type to mount. Must
                                  be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  Implicitly inferred to be "ext4" if
                                  unspecified. TODO: how do we prevent errors in
                                  the filesystem from compromising the machine
                                type: string
                              lun:
                                description: 'lun is Optional: FC target lun number'
                                type: integer
                                format: int32
                              readOnly:
                                description: >-
                                  readOnly is Optional: Defaults to false
                                  (read/write). ReadOnly here will force the
                                  ReadOnly setting in VolumeMounts.
                                type: boolean
                              targetWWNs:
                                description: >-
                                  targetWWNs is Optional: FC target worldwide
                                  names (WWNs)
                                type: array
                                items:
                                  type: string
                              wwids:
                                description: >-
                                  wwids Optional: FC volume world wide
                                  identifiers (wwids) Either wwids or
                                  combination of targetWWNs and lun must be set,
                                  but not both simultaneously.
                                type: array
                                items:
                                  type: string
                          vsphereVolume:
                            description: >-
                              vsphereVolume represents a vSphere volume attached
                              and mounted on kubelets host machine
                            type: object
                            required:
                              - volumePath
                            properties:
                              fsType:
                                description: >-
                                  fsType is filesystem type to mount. Must be a
                                  filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              storagePolicyID:
                                description: >-
                                  storagePolicyID is the storage Policy Based
                                  Management (SPBM) profile ID associated with
                                  the StoragePolicyName.
                                type: string
                              storagePolicyName:
                                description: >-
                                  storagePolicyName is the storage Policy Based
                                  Management (SPBM) profile name.
                                type: string
                              volumePath:
                                description: >-
                                  volumePath is the path that identifies vSphere
                                  volume vmdk
                                type: string
                          ephemeral:
                            description: >-
                              ephemeral represents a volume that is handled by a
                              cluster storage driver. The volume's lifecycle is
                              tied to the pod that defines it - it will be
                              created before the pod starts, and deleted when
                              the pod is removed. 
                               Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim). 
                               Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. 
                               Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. 
                               A pod can use both types of ephemeral volumes and persistent volumes at the same time.
                            type: object
                            properties:
                              volumeClaimTemplate:
                                description: >-
                                  Will be used to create a stand-alone PVC to
                                  provision the volume. The pod in which this
                                  EphemeralVolumeSource is embedded will be the
                                  owner of the PVC, i.e. the PVC will be deleted
                                  together with the pod.  The name of the PVC
                                  will be `<pod name>-<volume name>` where
                                  `<volume name>` is the name from the
                                  `PodSpec.Volumes` array entry. Pod validation
                                  will reject the pod if the concatenated name
                                  is not valid for a PVC (for example, too
                                  long). 
                                   An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. 
                                   This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. 
                                   Required, must not be nil.
                                type: object
                                required:
                                  - spec
                                properties:
                                  metadata:
                                    description: >-
                                      May contain labels and annotations that
                                      will be copied into the PVC when creating
                                      it. No other fields are allowed and will
                                      be rejected during validation.
                                    type: object
                                  spec:
                                    description: >-
                                      The specification for the
                                      PersistentVolumeClaim. The entire content
                                      is copied unchanged into the PVC that gets
                                      created from this template. The same
                                      fields as in a PersistentVolumeClaim are
                                      also valid here.
                                    type: object
                                    properties:
                                      accessModes:
                                        description: >-
                                          accessModes contains the desired access
                                          modes the volume should have. More info:
                                          https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                        type: array
                                        items:
                                          type: string
                                      dataSource:
                                        description: >-
                                          dataSource field can be used to specify
                                          either: * An existing VolumeSnapshot
                                          object
                                          (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC
                                          (PersistentVolumeClaim) If the
                                          provisioner or an external controller
                                          can support the specified data source,
                                          it will create a new volume based on the
                                          contents of the specified data source.
                                          When the AnyVolumeDataSource feature
                                          gate is enabled, dataSource contents
                                          will be copied to dataSourceRef, and
                                          dataSourceRef contents will be copied to
                                          dataSource when dataSourceRef.namespace
                                          is not specified. If the namespace is
                                          specified, then dataSourceRef will not
                                          be copied to dataSource.
                                        type: object
                                        required:
                                          - kind
                                          - name
                                        properties:
                                          apiGroup:
                                            description: >-
                                              APIGroup is the group for the resource
                                              being referenced. If APIGroup is not
                                              specified, the specified Kind must be in
                                              the core API group. For any other
                                              third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: >-
                                              Kind is the type of resource being
                                              referenced
                                            type: string
                                          name:
                                            description: >-
                                              Name is the name of resource being
                                              referenced
                                            type: string
                                      dataSourceRef:
                                        description: >-
                                          dataSourceRef specifies the object from
                                          which to populate the volume with data,
                                          if a non-empty volume is desired. This
                                          may be any object from a non-empty API
                                          group (non core object) or a
                                          PersistentVolumeClaim object. When this
                                          field is specified, volume binding will
                                          only succeed if the type of the
                                          specified object matches some installed
                                          volume populator or dynamic provisioner.
                                          This field will replace the
                                          functionality of the dataSource field
                                          and as such if both fields are
                                          non-empty, they must have the same
                                          value. For backwards compatibility, when
                                          namespace isn't specified in
                                          dataSourceRef, both fields (dataSource
                                          and dataSourceRef) will be set to the
                                          same value automatically if one of them
                                          is empty and the other is non-empty.
                                          When namespace is specified in
                                          dataSourceRef, dataSource isn't set to
                                          the same value and must be empty. There
                                          are three important differences between
                                          dataSource and dataSourceRef: * While
                                          dataSource only allows two specific
                                          types of objects, dataSourceRef   allows
                                          any non-core object, as well as
                                          PersistentVolumeClaim objects. * While
                                          dataSource ignores disallowed values
                                          (dropping them), dataSourceRef  
                                          preserves all values, and generates an
                                          error if a disallowed value is  
                                          specified. * While dataSource only
                                          allows local objects, dataSourceRef
                                          allows objects   in any namespaces.
                                          (Beta) Using this field requires the
                                          AnyVolumeDataSource feature gate to be
                                          enabled. (Alpha) Using the namespace
                                          field of dataSourceRef requires the
                                          CrossNamespaceVolumeDataSource feature
                                          gate to be enabled.
                                        type: object
                                        required:
                                          - kind
                                          - name
                                        properties:
                                          apiGroup:
                                            description: >-
                                              APIGroup is the group for the resource
                                              being referenced. If APIGroup is not
                                              specified, the specified Kind must be in
                                              the core API group. For any other
                                              third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: >-
                                              Kind is the type of resource being
                                              referenced
                                            type: string
                                          name:
                                            description: >-
                                              Name is the name of resource being
                                              referenced
                                            type: string
                                          namespace:
                                            description: >-
                                              Namespace is the namespace of resource
                                              being referenced Note that when a
                                              namespace is specified, a
                                              gateway.networking.k8s.io/ReferenceGrant
                                              object is required in the referent
                                              namespace to allow that namespace's
                                              owner to accept the reference. See the
                                              ReferenceGrant documentation for
                                              details. (Alpha) This field requires the
                                              CrossNamespaceVolumeDataSource feature
                                              gate to be enabled.
                                            type: string
                                      resources:
                                        description: >-
                                          resources represents the minimum
                                          resources the volume should have. If
                                          RecoverVolumeExpansionFailure feature is
                                          enabled users are allowed to specify
                                          resource requirements that are lower
                                          than previous value but must still be
                                          higher than capacity recorded in the
                                          status field of the claim. More info:
                                          https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                        type: object
                                        properties:
                                          claims:
                                            description: >-
                                              Claims lists the names of resources,
                                              defined in spec.resourceClaims, that are
                                              used by this container. 
                                               This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                                               This field is immutable. It can only be set for containers.
                                            type: array
                                            items:
                                              description: >-
                                                ResourceClaim references one entry in
                                                PodSpec.ResourceClaims.
                                              type: object
                                              required:
                                                - name
                                              properties:
                                                name:
                                                  description: >-
                                                    Name must match the name of one entry in
                                                    pod.spec.resourceClaims of the Pod where
                                                    this field is used. It makes that
                                                    resource available inside a container.
                                                  type: string
                                            x-kubernetes-list-map-keys:
                                              - name
                                            x-kubernetes-list-type: map
                                          limits:
                                            description: >-
                                              Limits describes the maximum amount of
                                              compute resources allowed. More info:
                                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                            additionalProperties:
                                              pattern: >-
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              x-kubernetes-int-or-string: true
                                          requests:
                                            description: >-
                                              Requests describes the minimum amount of
                                              compute resources required. If Requests
                                              is omitted for a container, it defaults
                                              to Limits if that is explicitly
                                              specified, otherwise to an
                                              implementation-defined value. Requests
                                              cannot exceed Limits. More info:
                                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                            additionalProperties:
                                              pattern: >-
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              x-kubernetes-int-or-string: true
                                      selector:
                                        description: >-
                                          selector is a label query over volumes
                                          to consider for binding.
                                        type: object
                                        properties:
                                          matchExpressions:
                                            description: >-
                                              matchExpressions is a list of label
                                              selector requirements. The requirements
                                              are ANDed.
                                            type: array
                                            items:
                                              description: >-
                                                A label selector requirement is a
                                                selector that contains values, a key,
                                                and an operator that relates the key and
                                                values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: >-
                                                    key is the label key that the selector
                                                    applies to.
                                                  type: string
                                                operator:
                                                  description: >-
                                                    operator represents a key's relationship
                                                    to a set of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: >-
                                                    values is an array of string values. If
                                                    the operator is In or NotIn, the values
                                                    array must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the values
                                                    array must be empty. This array is
                                                    replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                          matchLabels:
                                            description: >-
                                              matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the
                                              matchLabels map is equivalent to an
                                              element of matchExpressions, whose key
                                              field is "key", the operator is "In",
                                              and the values array contains only
                                              "value". The requirements are ANDed.
                                            type: object
                                            additionalProperties:
                                              type: string
                                      storageClassName:
                                        description: >-
                                          storageClassName is the name of the
                                          StorageClass required by the claim. More
                                          info:
                                          https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                        type: string
                                      volumeMode:
                                        description: >-
                                          volumeMode defines what type of volume
                                          is required by the claim. Value of
                                          Filesystem is implied when not included
                                          in claim spec.
                                        type: string
                                      volumeName:
                                        description: >-
                                          volumeName is the binding reference to
                                          the PersistentVolume backing this claim.
                                        type: string
                          flocker:
                            description: >-
                              flocker represents a Flocker volume attached to a
                              kubelet's host machine. This depends on the
                              Flocker control service being running
                            type: object
                            properties:
                              datasetName:
                                description: >-
                                  datasetName is Name of the dataset stored as
                                  metadata -> name on the dataset for Flocker
                                  should be considered as deprecated
                                type: string
                              datasetUUID:
                                description: >-
                                  datasetUUID is the UUID of the dataset. This
                                  is unique identifier of a Flocker dataset
                                type: string
                          storageos:
                            description: >-
                              storageOS represents a StorageOS volume attached
                              and mounted on Kubernetes nodes.
                            type: object
                            properties:
                              fsType:
                                description: >-
                                  fsType is the filesystem type to mount. Must
                                  be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs", "ntfs".
                                  Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              readOnly:
                                description: >-
                                  readOnly defaults to false (read/write).
                                  ReadOnly here will force the ReadOnly setting
                                  in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: >-
                                  secretRef specifies the secret to use for
                                  obtaining the StorageOS API credentials.  If
                                  not specified, default values will be
                                  attempted.
                                type: object
                                properties:
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                              volumeName:
                                description: >-
                                  volumeName is the human-readable name of the
                                  StorageOS volume.  Volume names are only
                                  unique within a namespace.
                                type: string
                              volumeNamespace:
                                description: >-
                                  volumeNamespace specifies the scope of the
                                  volume within StorageOS.  If no namespace is
                                  specified then the Pod's namespace will be
                                  used.  This allows the Kubernetes name scoping
                                  to be mirrored within StorageOS for tighter
                                  integration. Set VolumeName to any name to
                                  override the default behaviour. Set to
                                  "default" if you are not using namespaces
                                  within StorageOS. Namespaces that do not
                                  pre-exist within StorageOS will be created.
                                type: string
                    logFormat:
                      description: >-
                        LogFormat describes the log format that should be used
                        by the Repo Server. Defaults to ArgoCDDefaultLogFormat
                        if not configured. Valid options are text or json.
                      type: string
                    image:
                      description: Image is the ArgoCD Repo Server container image.
                      type: string
                    replicas:
                      description: >-
                        Replicas defines the number of replicas for
                        argocd-repo-server. Value should be greater than or
                        equal to 0. Default is nil.
                      type: integer
                      format: int32
                sourceNamespaces:
                  description: >-
                    SourceNamespaces defines the namespaces application
                    resources are allowed to be created in
                  type: array
                  items:
                    type: string
                resourceExclusions:
                  description: >-
                    ResourceExclusions is used to completely ignore entire
                    classes of resource group/kinds.
                  type: string
                resourceHealthChecks:
                  description: >-
                    ResourceHealthChecks customizes resource health check
                    behavior.
                  type: array
                  items:
                    description: Resource Customization for custom health check
                    type: object
                    properties:
                      check:
                        type: string
                      group:
                        type: string
                      kind:
                        type: string
                helpChatURL:
                  description: >-
                    HelpChatURL is the URL for getting chat help, this will
                    typically be your Slack channel for support.
                  type: string
                resourceIgnoreDifferences:
                  description: >-
                    ResourceIgnoreDifferences customizes resource ignore
                    difference behavior.
                  type: object
                  properties:
                    all:
                      type: object
                      properties:
                        jqPathExpressions:
                          type: array
                          items:
                            type: string
                        jsonPointers:
                          type: array
                          items:
                            type: string
                        managedFieldsManagers:
                          type: array
                          items:
                            type: string
                    resourceIdentifiers:
                      type: array
                      items:
                        description: Resource Customization fields for ignore difference
                        type: object
                        properties:
                          customization:
                            type: object
                            properties:
                              jqPathExpressions:
                                type: array
                                items:
                                  type: string
                              jsonPointers:
                                type: array
                                items:
                                  type: string
                              managedFieldsManagers:
                                type: array
                                items:
                                  type: string
                          group:
                            type: string
                          kind:
                            type: string
                version:
                  description: >-
                    Version is the tag to use with the ArgoCD container image
                    for all ArgoCD components.
                  type: string
                ha:
                  description: >-
                    HA options for High Availability support for the Redis
                    component.
                  type: object
                  required:
                    - enabled
                  properties:
                    enabled:
                      description: Enabled will toggle HA support globally for Argo CD.
                      type: boolean
                    redisProxyImage:
                      description: RedisProxyImage is the Redis HAProxy container image.
                      type: string
                    redisProxyVersion:
                      description: >-
                        RedisProxyVersion is the Redis HAProxy container image
                        tag.
                      type: string
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for HA.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                kustomizeBuildOptions:
                  description: >-
                    KustomizeBuildOptions is used to specify build
                    options/parameters to use with `kustomize build`.
                  type: string
                oidcConfig:
                  description: >-
                    OIDCConfig is the OIDC configuration as an alternative to
                    dex.
                  type: string
                tls:
                  description: TLS defines the TLS options for ArgoCD.
                  type: object
                  properties:
                    ca:
                      description: CA defines the CA options.
                      type: object
                      properties:
                        configMapName:
                          description: >-
                            ConfigMapName is the name of the ConfigMap
                            containing the CA Certificate.
                          type: string
                        secretName:
                          description: >-
                            SecretName is the name of the Secret containing the
                            CA Certificate and Key.
                          type: string
                    initialCerts:
                      description: >-
                        InitialCerts defines custom TLS certificates upon
                        creation of the cluster for connecting Git repositories
                        via HTTPS.
                      type: object
                      additionalProperties:
                        type: string
                image:
                  description: >-
                    Image is the ArgoCD container image for all ArgoCD
                    components.
                  type: string
                redis:
                  description: Redis defines the Redis server options for ArgoCD.
                  type: object
                  properties:
                    autotls:
                      description: >-
                        AutoTLS specifies the method to use for automatic TLS
                        configuration for the redis server The value specified
                        here can currently be: - openshift - Use the OpenShift
                        service CA to request TLS config
                      type: string
                    disableTLSVerification:
                      description: >-
                        DisableTLSVerification defines whether redis server API
                        should be accessed using strict TLS validation
                      type: boolean
                    enabled:
                      description: >-
                        Enabled is the flag to enable Redis during ArgoCD
                        installation. (optional, default `true`)
                      type: boolean
                    image:
                      description: Image is the Redis container image.
                      type: string
                    remote:
                      description: >-
                        Remote specifies the remote URL of the Redis container.
                        (optional, by default, a local instance managed by the
                        operator is used.)
                      type: string
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for Redis.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    version:
                      description: Version is the Redis container image tag.
                      type: string
                configManagementPlugins:
                  description: >-
                    ConfigManagementPlugins is used to specify additional config
                    management plugins.
                  type: string
                usersAnonymousEnabled:
                  description: >-
                    UsersAnonymousEnabled toggles anonymous user access. The
                    anonymous users get default role permissions specified
                    argocd-rbac-cm.
                  type: boolean
                controller:
                  description: >-
                    Controller defines the Application Controller options for
                    ArgoCD.
                  type: object
                  properties:
                    logLevel:
                      description: >-
                        LogLevel refers to the log level used by the Application
                        Controller component. Defaults to ArgoCDDefaultLogLevel
                        if not configured. Valid options are debug, info, error,
                        and warn.
                      type: string
                    processors:
                      description: >-
                        Processors contains the options for the Application
                        Controller processors.
                      type: object
                      properties:
                        operation:
                          description: >-
                            Operation is the number of application operation
                            processors.
                          type: integer
                          format: int32
                        status:
                          description: >-
                            Status is the number of application status
                            processors.
                          type: integer
                          format: int32
                    enabled:
                      description: >-
                        Enabled is the flag to enable the Application Controller
                        during ArgoCD installation. (optional, default `true`)
                      type: boolean
                    sharding:
                      description: >-
                        Sharding contains the options for the Application
                        Controller sharding configuration.
                      type: object
                      properties:
                        clustersPerShard:
                          description: >-
                            ClustersPerShard defines the maximum number of
                            clusters managed by each argocd shard
                          type: integer
                          format: int32
                          minimum: 1
                        dynamicScalingEnabled:
                          description: >-
                            DynamicScalingEnabled defines whether dynamic
                            scaling should be enabled for Application Controller
                            component
                          type: boolean
                        enabled:
                          description: >-
                            Enabled defines whether sharding should be enabled
                            on the Application Controller component.
                          type: boolean
                        maxShards:
                          description: >-
                            MaxShards defines the maximum number of shards at
                            any given point
                          type: integer
                          format: int32
                        minShards:
                          description: >-
                            MinShards defines the minimum number of shards at
                            any given point
                          type: integer
                          format: int32
                          minimum: 1
                        replicas:
                          description: >-
                            Replicas defines the number of replicas to run in
                            the Application controller shard.
                          type: integer
                          format: int32
                    resources:
                      description: >-
                        Resources defines the Compute Resources required by the
                        container for the Application Controller.
                      type: object
                      properties:
                        claims:
                          description: >-
                            Claims lists the names of resources, defined in
                            spec.resourceClaims, that are used by this
                            container. 
                             This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
                             This field is immutable. It can only be set for containers.
                          type: array
                          items:
                            description: >-
                              ResourceClaim references one entry in
                              PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name must match the name of one entry in
                                  pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource
                                  available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. Requests cannot exceed
                            Limits. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                    env:
                      description: >-
                        Env lets you specify environment for application
                        controller pods
                      type: array
                      items:
                        description: >-
                          EnvVar represents an environment variable present in a
                          Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: >-
                              Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: >-
                              Variable references $(VAR_NAME) are expanded using
                              the previously defined environment variables in
                              the container and any service environment
                              variables. If a variable cannot be resolved, the
                              reference in the input string will be unchanged.
                              Double $$ are reduced to a single $, which allows
                              for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal
                              "$(VAR_NAME)". Escaped references will never be
                              expanded, regardless of whether the variable
                              exists or not. Defaults to "".
                            type: string
                          valueFrom:
                            description: >-
                              Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the ConfigMap or its key
                                      must be defined
                                    type: boolean
                              fieldRef:
                                description: >-
                                  Selects a field of the pod: supports
                                  metadata.name, metadata.namespace,
                                  `metadata.labels['<KEY>']`,
                                  `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP, status.podIPs.
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: >-
                                      Version of the schema the FieldPath is
                                      written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: >-
                                      Path of the field to select in the
                                      specified API version.
                                    type: string
                              resourceFieldRef:
                                description: >-
                                  Selects a resource of the container: only
                                  resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage,
                                  requests.cpu, requests.memory and
                                  requests.ephemeral-storage) are currently
                                  supported.
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: >-
                                      Container name: required for volumes,
                                      optional for env vars
                                    type: string
                                  divisor:
                                    description: >-
                                      Specifies the output format of the exposed
                                      resources, defaults to "1"
                                    pattern: >-
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: >-
                                  Selects a key of a secret in the pod's
                                  namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: >-
                                      The key of the secret to select from. 
                                      Must be a valid secret key.
                                    type: string
                                  name:
                                    description: >-
                                      Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion,
                                      kind, uid?
                                    type: string
                                  optional:
                                    description: >-
                                      Specify whether the Secret or its key must
                                      be defined
                                    type: boolean
                    logFormat:
                      description: >-
                        LogFormat refers to the log format used by the
                        Application Controller component. Defaults to
                        ArgoCDDefaultLogFormat if not configured. Valid options
                        are text or json.
                      type: string
                    appSync:
                      description: >-
                        AppSync is used to control the sync frequency, by
                        default the ArgoCD controller polls Git every 3m. 
                         Set this to a duration, e.g. 10m or 600s to control the synchronisation frequency.
                      type: string
                    parallelismLimit:
                      description: >-
                        ParallelismLimit defines the limit for parallel kubectl
                        operations
                      type: integer
                      format: int32
            status:
              description: ArgoCDStatus defines the observed state of ArgoCD
              type: object
              properties:
                redisTLSChecksum:
                  description: >-
                    RedisTLSChecksum contains the SHA256 checksum of the latest
                    known state of tls.crt and tls.key in the
                    argocd-operator-redis-tls secret.
                  type: string
                server:
                  description: >-
                    Server is a simple, high-level summary of where the Argo CD
                    server component is in its lifecycle. There are four
                    possible server values: Pending: The Argo CD server
                    component has been accepted by the Kubernetes system, but
                    one or more of the required resources have not been created.
                    Running: All of the required Pods for the Argo CD server
                    component are in a Ready state. Failed: At least one of the 
                    Argo CD server component Pods had a failure. Unknown: The
                    state of the Argo CD server component could not be obtained.
                  type: string
                notificationsController:
                  description: >-
                    NotificationsController is a simple, high-level summary of
                    where the Argo CD notifications controller component is in
                    its lifecycle. There are four possible
                    NotificationsController values: Pending: The Argo CD
                    notifications controller component has been accepted by the
                    Kubernetes system, but one or more of the required resources
                    have not been created. Running: All of the required Pods for
                    the Argo CD notifications controller component are in a
                    Ready state. Failed: At least one of the  Argo CD
                    notifications controller component Pods had a failure.
                    Unknown: The state of the Argo CD notifications controller
                    component could not be obtained.
                  type: string
                host:
                  description: Host is the hostname of the Ingress.
                  type: string
                applicationController:
                  description: >-
                    ApplicationController is a simple, high-level summary of
                    where the Argo CD application controller component is in its
                    lifecycle. There are four possible ApplicationController
                    values: Pending: The Argo CD application controller
                    component has been accepted by the Kubernetes system, but
                    one or more of the required resources have not been created.
                    Running: All of the required Pods for the Argo CD
                    application controller component are in a Ready state.
                    Failed: At least one of the  Argo CD application controller
                    component Pods had a failure. Unknown: The state of the Argo
                    CD application controller component could not be obtained.
                  type: string
                repoTLSChecksum:
                  description: >-
                    RepoTLSChecksum contains the SHA256 checksum of the latest
                    known state of tls.crt and tls.key in the
                    argocd-repo-server-tls secret.
                  type: string
                applicationSetController:
                  description: >-
                    ApplicationSetController is a simple, high-level summary of
                    where the Argo CD applicationSet controller component is in
                    its lifecycle. There are four possible
                    ApplicationSetController values: Pending: The Argo CD
                    applicationSet controller component has been accepted by the
                    Kubernetes system, but one or more of the required resources
                    have not been created. Running: All of the required Pods for
                    the Argo CD applicationSet controller component are in a
                    Ready state. Failed: At least one of the  Argo CD
                    applicationSet controller component Pods had a failure.
                    Unknown: The state of the Argo CD applicationSet controller
                    component could not be obtained.
                  type: string
                sso:
                  description: >-
                    SSO is a simple, high-level summary of where the Argo CD
                    SSO(Dex/Keycloak) component is in its lifecycle. There are
                    four possible sso values: Pending: The Argo CD SSO component
                    has been accepted by the Kubernetes system, but one or more
                    of the required resources have not been created. Running:
                    All of the required Pods for the Argo CD SSO component are
                    in a Ready state. Failed: At least one of the  Argo CD SSO
                    component Pods had a failure. Unknown: The state of the Argo
                    CD SSO component could not be obtained.
                  type: string
                repo:
                  description: >-
                    Repo is a simple, high-level summary of where the Argo CD
                    Repo component is in its lifecycle. There are four possible
                    repo values: Pending: The Argo CD Repo component has been
                    accepted by the Kubernetes system, but one or more of the
                    required resources have not been created. Running: All of
                    the required Pods for the Argo CD Repo component are in a
                    Ready state. Failed: At least one of the  Argo CD Repo
                    component Pods had a failure. Unknown: The state of the Argo
                    CD Repo component could not be obtained.
                  type: string
                phase:
                  description: >-
                    Phase is a simple, high-level summary of where the ArgoCD is
                    in its lifecycle. There are four possible phase values:
                    Pending: The ArgoCD has been accepted by the Kubernetes
                    system, but one or more of the required resources have not
                    been created. Available: All of the resources for the ArgoCD
                    are ready. Failed: At least one resource has experienced a
                    failure. Unknown: The state of the ArgoCD phase could not be
                    obtained.
                  type: string
                redis:
                  description: >-
                    Redis is a simple, high-level summary of where the Argo CD
                    Redis component is in its lifecycle. There are four possible
                    redis values: Pending: The Argo CD Redis component has been
                    accepted by the Kubernetes system, but one or more of the
                    required resources have not been created. Running: All of
                    the required Pods for the Argo CD Redis component are in a
                    Ready state. Failed: At least one of the  Argo CD Redis
                    component Pods had a failure. Unknown: The state of the Argo
                    CD Redis component could not be obtained.
                  type: string
      subresources:
        status: {}
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          namespace: openshift-operators
          name: openshift-gitops-operator-controller-manager-service
          path: /convert
          port: 443
        caBundle: >-
          LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ2RENDQVdLZ0F3SUJBZ0lJVEJvOXBDcnJmaEF3Q2dZSUtvWkl6ajBFQXdJd1FqRVdNQlFHQTFVRUNoTU4KVW1Wa0lFaGhkQ3dnU1c1akxqRW9NQ1lHQTFVRUF4TWZiMnh0TFhObGJHWnphV2R1WldRdE5HTXhZVE5rWVRReQpZV1ZpTjJVeE1EQWVGdzB5TkRBeU1Ea3dPVEk0TURCYUZ3MHlOakF5TURnd09USTRNREJhTUVJeEZqQVVCZ05WCkJBb1REVkpsWkNCSVlYUXNJRWx1WXk0eEtEQW1CZ05WQkFNVEgyOXNiUzF6Wld4bWMybG5ibVZrTFRSak1XRXoKWkdFME1tRmxZamRsTVRBd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTa3JHcGFoN3lVMGtZSApUcXZycXo3Vlp6b0Jqb0hWUGh0SGRUazRERmZvVDdUeEJqYWhtM3FjSys1WXE1ZE13Nkh1VkdwNndwQ2FlRkJBCnFWbjZCUFlJbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQWdRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlYKSFE0RUZnUVVOTjlWc2dZRTh1eTdyNldkYzVubDFiSWdiQUl3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQU12TgowWWRNNzdpcU5FNUVYRGxPcXFrWmVhTEx5bHVlMFRQL0phQlNLQ2R6QWlBQWozeDgwb0ovQzMxYXN5WDgwVnZ1ClZzYXJYc0JQUmdMUDBzRFB0elR4Y1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      conversionReviewVersions:
        - v1alpha1
        - v1beta1
status:
  conditions:
    - type: NamesAccepted
      status: 'True'
      lastTransitionTime: '2020-04-03T21:05:28Z'
      reason: NoConflicts
      message: no conflicts found
    - type: Established
      status: 'True'
      lastTransitionTime: '2020-04-03T21:05:28Z'
      reason: InitialNamesAccepted
      message: the initial names have been accepted
  acceptedNames:
    plural: argocds
    singular: argocd
    kind: ArgoCD
    listKind: ArgoCDList
  storedVersions:
    - v1alpha1
    - v1beta1
