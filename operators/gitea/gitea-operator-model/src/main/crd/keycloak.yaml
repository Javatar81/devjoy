kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1
metadata:
  name: keycloaks.keycloak.org
spec:
  group: keycloak.org
  names:
    plural: keycloaks
    singular: keycloak
    kind: Keycloak
    listKind: KeycloakList
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: Keycloak is the Schema for the keycloaks API.
          type: object
          properties:
            apiVersion:
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: KeycloakSpec defines the desired state of Keycloak.
              type: object
              properties:
                disableReplicasSyncing:
                  description: >-
                    Specify whether disabling the syncing of instances from the
                    Keycloak CR to the statefulset replicas should be enabled or
                    disabled. This option could be used when enabling
                    HPA(horizontal pod autoscaler). Defaults to false.
                  type: boolean
                externalDatabase:
                  description: >-
                    Controls external database settings. Using an external
                    database requires providing a secret containing credentials
                    as well as connection details. Here's an example of such
                    secret: 
                         apiVersion: v1     kind: Secret     metadata:         name: keycloak-db-secret         namespace: keycloak     stringData:         POSTGRES_DATABASE: <Database Name>         POSTGRES_EXTERNAL_ADDRESS: <External Database IP or URL (resolvable by K8s)>         POSTGRES_EXTERNAL_PORT: <External Database Port>         # Strongly recommended to use <'Keycloak CR Name'-postgresql>         POSTGRES_HOST: <Database Service Name>         POSTGRES_PASSWORD: <Database Password>         # Required for AWS Backup functionality         POSTGRES_SUPERUSER: true         POSTGRES_USERNAME: <Database Username>      type: Opaque 
                     Both POSTGRES_EXTERNAL_ADDRESS and POSTGRES_EXTERNAL_PORT are specifically required for creating connection to the external database. The secret name is created using the following convention:       <Custom Resource Name>-db-secret 
                     For more information, please refer to the Operator documentation.
                  type: object
                  properties:
                    enabled:
                      description: >-
                        If set to true, the Operator will use an external
                        database pointing to Keycloak. The embedded database
                        (externalDatabase.enabled = false) is deprecated.
                      type: boolean
                unmanaged:
                  description: >-
                    When set to true, this Keycloak will be marked as unmanaged
                    and will not be managed by this operator. It can then be
                    used for targeting purposes.
                  type: boolean
                storageClassName:
                  description: >-
                    Name of the StorageClass for Postgresql Persistent Volume
                    Claim
                  type: string
                profile:
                  description: >-
                    Profile used for controlling Operator behavior. Default is
                    empty.
                  type: string
                external:
                  description: >-
                    Contains configuration for external Keycloak instances.
                    Unmanaged needs to be set to true to use this.
                  type: object
                  properties:
                    enabled:
                      description: >-
                        If set to true, this Keycloak will be treated as an
                        external instance. The unmanaged field also needs to be
                        set to true if this field is true.
                      type: boolean
                    url:
                      description: >-
                        The URL to use for the keycloak admin API. Needs to be
                        set if external is true.
                      type: string
                multiAvailablityZones:
                  description: >-
                    Specify PodAntiAffinity settings for Keycloak deployment in
                    Multi AZ
                  type: object
                  properties:
                    enabled:
                      description: >-
                        If set to true, the operator will create a
                        podAntiAffinity settings for the Keycloak deployment.
                      type: boolean
                migration:
                  description: Specify Migration configuration
                  type: object
                  properties:
                    backups:
                      description: Set it to config backup policy for migration
                      type: object
                      properties:
                        enabled:
                          description: >-
                            If set to true, the operator will do database backup
                            before doing migration
                          type: boolean
                    strategy:
                      description: Specify migration strategy
                      type: string
                externalAccess:
                  description: Controls external Ingress/Route settings.
                  type: object
                  properties:
                    enabled:
                      description: >-
                        If set to true, the Operator will create an Ingress or a
                        Route pointing to Keycloak.
                      type: boolean
                    host:
                      description: >-
                        If set, the Operator will use value of host for Ingress
                        host instead of default value keycloak.local. Using this
                        setting in OpenShift environment will result an error.
                        Only users with special permissions are allowed to
                        modify the hostname.
                      type: string
                    tlsTermination:
                      description: >-
                        TLS Termination type for the external access. Setting
                        this field to "reencrypt" will terminate TLS on the
                        Ingress/Route level. Setting this field to "passthrough"
                        will send encrypted traffic to the Pod. If unspecified,
                        defaults to "reencrypt". Note, that this setting has no
                        effect on Ingress as Ingress TLS settings are not
                        reconciled by this operator. In other words, Ingress TLS
                        configuration is the same in both cases and it is up to
                        the user to configure TLS section of the Ingress.
                      type: string
                keycloakDeploymentSpec:
                  description: >-
                    Resources (Requests and Limits) and ImagePullPolicy for
                    KeycloakDeployment.
                  type: object
                  properties:
                    experimental:
                      description: Experimental section
                      type: object
                      properties:
                        affinity:
                          description: Affinity settings
                          type: object
                          properties:
                            nodeAffinity:
                              description: >-
                                Describes node affinity scheduling rules for the
                                pod.
                              type: object
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  description: >-
                                    The scheduler will prefer to schedule pods
                                    to nodes that satisfy the affinity
                                    expressions specified by this field, but it
                                    may choose a node that violates one or more
                                    of the expressions. The node that is most
                                    preferred is the one with the greatest sum
                                    of weights, i.e. for each node that meets
                                    all of the scheduling requirements (resource
                                    request, requiredDuringScheduling affinity
                                    expressions, etc.), compute a sum by
                                    iterating through the elements of this field
                                    and adding "weight" to the sum if the node
                                    matches the corresponding matchExpressions;
                                    the node(s) with the highest sum are the
                                    most preferred.
                                  type: array
                                  items:
                                    description: >-
                                      An empty preferred scheduling term matches
                                      all objects with implicit weight 0 (i.e.
                                      it's a no-op). A null preferred scheduling
                                      term matches no objects (i.e. is also a
                                      no-op).
                                    type: object
                                    required:
                                      - preference
                                      - weight
                                    properties:
                                      preference:
                                        description: >-
                                          A node selector term, associated with
                                          the corresponding weight.
                                        type: object
                                        properties:
                                          matchExpressions:
                                            description: >-
                                              A list of node selector requirements by
                                              node's labels.
                                            type: array
                                            items:
                                              description: >-
                                                A node selector requirement is a
                                                selector that contains values, a key,
                                                and an operator that relates the key and
                                                values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: >-
                                                    The label key that the selector applies
                                                    to.
                                                  type: string
                                                operator:
                                                  description: >-
                                                    Represents a key's relationship to a set
                                                    of values. Valid operators are In,
                                                    NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: >-
                                                    An array of string values. If the
                                                    operator is In or NotIn, the values
                                                    array must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the values
                                                    array must be empty. If the operator is
                                                    Gt or Lt, the values array must have a
                                                    single element, which will be
                                                    interpreted as an integer. This array is
                                                    replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                          matchFields:
                                            description: >-
                                              A list of node selector requirements by
                                              node's fields.
                                            type: array
                                            items:
                                              description: >-
                                                A node selector requirement is a
                                                selector that contains values, a key,
                                                and an operator that relates the key and
                                                values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: >-
                                                    The label key that the selector applies
                                                    to.
                                                  type: string
                                                operator:
                                                  description: >-
                                                    Represents a key's relationship to a set
                                                    of values. Valid operators are In,
                                                    NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: >-
                                                    An array of string values. If the
                                                    operator is In or NotIn, the values
                                                    array must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the values
                                                    array must be empty. If the operator is
                                                    Gt or Lt, the values array must have a
                                                    single element, which will be
                                                    interpreted as an integer. This array is
                                                    replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                      weight:
                                        description: >-
                                          Weight associated with matching the
                                          corresponding nodeSelectorTerm, in the
                                          range 1-100.
                                        type: integer
                                        format: int32
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  description: >-
                                    If the affinity requirements specified by
                                    this field are not met at scheduling time,
                                    the pod will not be scheduled onto the node.
                                    If the affinity requirements specified by
                                    this field cease to be met at some point
                                    during pod execution (e.g. due to an
                                    update), the system may or may not try to
                                    eventually evict the pod from its node.
                                  type: object
                                  required:
                                    - nodeSelectorTerms
                                  properties:
                                    nodeSelectorTerms:
                                      description: >-
                                        Required. A list of node selector terms.
                                        The terms are ORed.
                                      type: array
                                      items:
                                        description: >-
                                          A null or empty node selector term
                                          matches no objects. The requirements of
                                          them are ANDed. The TopologySelectorTerm
                                          type implements a subset of the
                                          NodeSelectorTerm.
                                        type: object
                                        properties:
                                          matchExpressions:
                                            description: >-
                                              A list of node selector requirements by
                                              node's labels.
                                            type: array
                                            items:
                                              description: >-
                                                A node selector requirement is a
                                                selector that contains values, a key,
                                                and an operator that relates the key and
                                                values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: >-
                                                    The label key that the selector applies
                                                    to.
                                                  type: string
                                                operator:
                                                  description: >-
                                                    Represents a key's relationship to a set
                                                    of values. Valid operators are In,
                                                    NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: >-
                                                    An array of string values. If the
                                                    operator is In or NotIn, the values
                                                    array must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the values
                                                    array must be empty. If the operator is
                                                    Gt or Lt, the values array must have a
                                                    single element, which will be
                                                    interpreted as an integer. This array is
                                                    replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                          matchFields:
                                            description: >-
                                              A list of node selector requirements by
                                              node's fields.
                                            type: array
                                            items:
                                              description: >-
                                                A node selector requirement is a
                                                selector that contains values, a key,
                                                and an operator that relates the key and
                                                values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: >-
                                                    The label key that the selector applies
                                                    to.
                                                  type: string
                                                operator:
                                                  description: >-
                                                    Represents a key's relationship to a set
                                                    of values. Valid operators are In,
                                                    NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: >-
                                                    An array of string values. If the
                                                    operator is In or NotIn, the values
                                                    array must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the values
                                                    array must be empty. If the operator is
                                                    Gt or Lt, the values array must have a
                                                    single element, which will be
                                                    interpreted as an integer. This array is
                                                    replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                            podAffinity:
                              description: >-
                                Describes pod affinity scheduling rules (e.g.
                                co-locate this pod in the same node, zone, etc.
                                as some other pod(s)).
                              type: object
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  description: >-
                                    The scheduler will prefer to schedule pods
                                    to nodes that satisfy the affinity
                                    expressions specified by this field, but it
                                    may choose a node that violates one or more
                                    of the expressions. The node that is most
                                    preferred is the one with the greatest sum
                                    of weights, i.e. for each node that meets
                                    all of the scheduling requirements (resource
                                    request, requiredDuringScheduling affinity
                                    expressions, etc.), compute a sum by
                                    iterating through the elements of this field
                                    and adding "weight" to the sum if the node
                                    has pods which matches the corresponding
                                    podAffinityTerm; the node(s) with the
                                    highest sum are the most preferred.
                                  type: array
                                  items:
                                    description: >-
                                      The weights of all of the matched
                                      WeightedPodAffinityTerm fields are added
                                      per-node to find the most preferred
                                      node(s)
                                    type: object
                                    required:
                                      - podAffinityTerm
                                      - weight
                                    properties:
                                      podAffinityTerm:
                                        description: >-
                                          Required. A pod affinity term,
                                          associated with the corresponding
                                          weight.
                                        type: object
                                        required:
                                          - topologyKey
                                        properties:
                                          labelSelector:
                                            description: >-
                                              A label query over a set of resources,
                                              in this case pods.
                                            type: object
                                            properties:
                                              matchExpressions:
                                                description: >-
                                                  matchExpressions is a list of label
                                                  selector requirements. The requirements
                                                  are ANDed.
                                                type: array
                                                items:
                                                  description: >-
                                                    A label selector requirement is a
                                                    selector that contains values, a key,
                                                    and an operator that relates the key and
                                                    values.
                                                  type: object
                                                  required:
                                                    - key
                                                    - operator
                                                  properties:
                                                    key:
                                                      description: >-
                                                        key is the label key that the selector
                                                        applies to.
                                                      type: string
                                                    operator:
                                                      description: >-
                                                        operator represents a key's relationship
                                                        to a set of values. Valid operators are
                                                        In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: >-
                                                        values is an array of string values. If
                                                        the operator is In or NotIn, the values
                                                        array must be non-empty. If the operator
                                                        is Exists or DoesNotExist, the values
                                                        array must be empty. This array is
                                                        replaced during a strategic merge patch.
                                                      type: array
                                                      items:
                                                        type: string
                                              matchLabels:
                                                description: >-
                                                  matchLabels is a map of {key,value}
                                                  pairs. A single {key,value} in the
                                                  matchLabels map is equivalent to an
                                                  element of matchExpressions, whose key
                                                  field is "key", the operator is "In",
                                                  and the values array contains only
                                                  "value". The requirements are ANDed.
                                                type: object
                                                additionalProperties:
                                                  type: string
                                          namespaces:
                                            description: >-
                                              namespaces specifies which namespaces
                                              the labelSelector applies to (matches
                                              against); null or empty list means "this
                                              pod's namespace"
                                            type: array
                                            items:
                                              type: string
                                          topologyKey:
                                            description: >-
                                              This pod should be co-located (affinity)
                                              or not co-located (anti-affinity) with
                                              the pods matching the labelSelector in
                                              the specified namespaces, where
                                              co-located is defined as running on a
                                              node whose value of the label with key
                                              topologyKey matches that of any node on
                                              which any of the selected pods is
                                              running. Empty topologyKey is not
                                              allowed.
                                            type: string
                                      weight:
                                        description: >-
                                          weight associated with matching the
                                          corresponding podAffinityTerm, in the
                                          range 1-100.
                                        type: integer
                                        format: int32
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  description: >-
                                    If the affinity requirements specified by
                                    this field are not met at scheduling time,
                                    the pod will not be scheduled onto the node.
                                    If the affinity requirements specified by
                                    this field cease to be met at some point
                                    during pod execution (e.g. due to a pod
                                    label update), the system may or may not try
                                    to eventually evict the pod from its node.
                                    When there are multiple elements, the lists
                                    of nodes corresponding to each
                                    podAffinityTerm are intersected, i.e. all
                                    terms must be satisfied.
                                  type: array
                                  items:
                                    description: >-
                                      Defines a set of pods (namely those
                                      matching the labelSelector relative to the
                                      given namespace(s)) that this pod should
                                      be co-located (affinity) or not co-located
                                      (anti-affinity) with, where co-located is
                                      defined as running on a node whose value
                                      of the label with key <topologyKey>
                                      matches that of any node on which a pod of
                                      the set of pods is running
                                    type: object
                                    required:
                                      - topologyKey
                                    properties:
                                      labelSelector:
                                        description: >-
                                          A label query over a set of resources,
                                          in this case pods.
                                        type: object
                                        properties:
                                          matchExpressions:
                                            description: >-
                                              matchExpressions is a list of label
                                              selector requirements. The requirements
                                              are ANDed.
                                            type: array
                                            items:
                                              description: >-
                                                A label selector requirement is a
                                                selector that contains values, a key,
                                                and an operator that relates the key and
                                                values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: >-
                                                    key is the label key that the selector
                                                    applies to.
                                                  type: string
                                                operator:
                                                  description: >-
                                                    operator represents a key's relationship
                                                    to a set of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: >-
                                                    values is an array of string values. If
                                                    the operator is In or NotIn, the values
                                                    array must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the values
                                                    array must be empty. This array is
                                                    replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                          matchLabels:
                                            description: >-
                                              matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the
                                              matchLabels map is equivalent to an
                                              element of matchExpressions, whose key
                                              field is "key", the operator is "In",
                                              and the values array contains only
                                              "value". The requirements are ANDed.
                                            type: object
                                            additionalProperties:
                                              type: string
                                      namespaces:
                                        description: >-
                                          namespaces specifies which namespaces
                                          the labelSelector applies to (matches
                                          against); null or empty list means "this
                                          pod's namespace"
                                        type: array
                                        items:
                                          type: string
                                      topologyKey:
                                        description: >-
                                          This pod should be co-located (affinity)
                                          or not co-located (anti-affinity) with
                                          the pods matching the labelSelector in
                                          the specified namespaces, where
                                          co-located is defined as running on a
                                          node whose value of the label with key
                                          topologyKey matches that of any node on
                                          which any of the selected pods is
                                          running. Empty topologyKey is not
                                          allowed.
                                        type: string
                            podAntiAffinity:
                              description: >-
                                Describes pod anti-affinity scheduling rules
                                (e.g. avoid putting this pod in the same node,
                                zone, etc. as some other pod(s)).
                              type: object
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  description: >-
                                    The scheduler will prefer to schedule pods
                                    to nodes that satisfy the anti-affinity
                                    expressions specified by this field, but it
                                    may choose a node that violates one or more
                                    of the expressions. The node that is most
                                    preferred is the one with the greatest sum
                                    of weights, i.e. for each node that meets
                                    all of the scheduling requirements (resource
                                    request, requiredDuringScheduling
                                    anti-affinity expressions, etc.), compute a
                                    sum by iterating through the elements of
                                    this field and adding "weight" to the sum if
                                    the node has pods which matches the
                                    corresponding podAffinityTerm; the node(s)
                                    with the highest sum are the most preferred.
                                  type: array
                                  items:
                                    description: >-
                                      The weights of all of the matched
                                      WeightedPodAffinityTerm fields are added
                                      per-node to find the most preferred
                                      node(s)
                                    type: object
                                    required:
                                      - podAffinityTerm
                                      - weight
                                    properties:
                                      podAffinityTerm:
                                        description: >-
                                          Required. A pod affinity term,
                                          associated with the corresponding
                                          weight.
                                        type: object
                                        required:
                                          - topologyKey
                                        properties:
                                          labelSelector:
                                            description: >-
                                              A label query over a set of resources,
                                              in this case pods.
                                            type: object
                                            properties:
                                              matchExpressions:
                                                description: >-
                                                  matchExpressions is a list of label
                                                  selector requirements. The requirements
                                                  are ANDed.
                                                type: array
                                                items:
                                                  description: >-
                                                    A label selector requirement is a
                                                    selector that contains values, a key,
                                                    and an operator that relates the key and
                                                    values.
                                                  type: object
                                                  required:
                                                    - key
                                                    - operator
                                                  properties:
                                                    key:
                                                      description: >-
                                                        key is the label key that the selector
                                                        applies to.
                                                      type: string
                                                    operator:
                                                      description: >-
                                                        operator represents a key's relationship
                                                        to a set of values. Valid operators are
                                                        In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: >-
                                                        values is an array of string values. If
                                                        the operator is In or NotIn, the values
                                                        array must be non-empty. If the operator
                                                        is Exists or DoesNotExist, the values
                                                        array must be empty. This array is
                                                        replaced during a strategic merge patch.
                                                      type: array
                                                      items:
                                                        type: string
                                              matchLabels:
                                                description: >-
                                                  matchLabels is a map of {key,value}
                                                  pairs. A single {key,value} in the
                                                  matchLabels map is equivalent to an
                                                  element of matchExpressions, whose key
                                                  field is "key", the operator is "In",
                                                  and the values array contains only
                                                  "value". The requirements are ANDed.
                                                type: object
                                                additionalProperties:
                                                  type: string
                                          namespaces:
                                            description: >-
                                              namespaces specifies which namespaces
                                              the labelSelector applies to (matches
                                              against); null or empty list means "this
                                              pod's namespace"
                                            type: array
                                            items:
                                              type: string
                                          topologyKey:
                                            description: >-
                                              This pod should be co-located (affinity)
                                              or not co-located (anti-affinity) with
                                              the pods matching the labelSelector in
                                              the specified namespaces, where
                                              co-located is defined as running on a
                                              node whose value of the label with key
                                              topologyKey matches that of any node on
                                              which any of the selected pods is
                                              running. Empty topologyKey is not
                                              allowed.
                                            type: string
                                      weight:
                                        description: >-
                                          weight associated with matching the
                                          corresponding podAffinityTerm, in the
                                          range 1-100.
                                        type: integer
                                        format: int32
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  description: >-
                                    If the anti-affinity requirements specified
                                    by this field are not met at scheduling
                                    time, the pod will not be scheduled onto the
                                    node. If the anti-affinity requirements
                                    specified by this field cease to be met at
                                    some point during pod execution (e.g. due to
                                    a pod label update), the system may or may
                                    not try to eventually evict the pod from its
                                    node. When there are multiple elements, the
                                    lists of nodes corresponding to each
                                    podAffinityTerm are intersected, i.e. all
                                    terms must be satisfied.
                                  type: array
                                  items:
                                    description: >-
                                      Defines a set of pods (namely those
                                      matching the labelSelector relative to the
                                      given namespace(s)) that this pod should
                                      be co-located (affinity) or not co-located
                                      (anti-affinity) with, where co-located is
                                      defined as running on a node whose value
                                      of the label with key <topologyKey>
                                      matches that of any node on which a pod of
                                      the set of pods is running
                                    type: object
                                    required:
                                      - topologyKey
                                    properties:
                                      labelSelector:
                                        description: >-
                                          A label query over a set of resources,
                                          in this case pods.
                                        type: object
                                        properties:
                                          matchExpressions:
                                            description: >-
                                              matchExpressions is a list of label
                                              selector requirements. The requirements
                                              are ANDed.
                                            type: array
                                            items:
                                              description: >-
                                                A label selector requirement is a
                                                selector that contains values, a key,
                                                and an operator that relates the key and
                                                values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: >-
                                                    key is the label key that the selector
                                                    applies to.
                                                  type: string
                                                operator:
                                                  description: >-
                                                    operator represents a key's relationship
                                                    to a set of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: >-
                                                    values is an array of string values. If
                                                    the operator is In or NotIn, the values
                                                    array must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the values
                                                    array must be empty. This array is
                                                    replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                          matchLabels:
                                            description: >-
                                              matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the
                                              matchLabels map is equivalent to an
                                              element of matchExpressions, whose key
                                              field is "key", the operator is "In",
                                              and the values array contains only
                                              "value". The requirements are ANDed.
                                            type: object
                                            additionalProperties:
                                              type: string
                                      namespaces:
                                        description: >-
                                          namespaces specifies which namespaces
                                          the labelSelector applies to (matches
                                          against); null or empty list means "this
                                          pod's namespace"
                                        type: array
                                        items:
                                          type: string
                                      topologyKey:
                                        description: >-
                                          This pod should be co-located (affinity)
                                          or not co-located (anti-affinity) with
                                          the pods matching the labelSelector in
                                          the specified namespaces, where
                                          co-located is defined as running on a
                                          node whose value of the label with key
                                          topologyKey matches that of any node on
                                          which any of the selected pods is
                                          running. Empty topologyKey is not
                                          allowed.
                                        type: string
                        args:
                          description: >-
                            Arguments to the entrypoint. Translates into
                            Container CMD.
                          type: array
                          items:
                            type: string
                        command:
                          description: >-
                            Container command. Translates into Container
                            ENTRYPOINT.
                          type: array
                          items:
                            type: string
                        env:
                          description: >-
                            List of environment variables to set in the
                            container.
                          type: array
                          items:
                            description: >-
                              EnvVar represents an environment variable present
                              in a Container.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: >-
                                  Name of the environment variable. Must be a
                                  C_IDENTIFIER.
                                type: string
                              value:
                                description: >-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previous defined environment
                                  variables in the container and any service
                                  environment variables. If a variable cannot be
                                  resolved, the reference in the input string
                                  will be unchanged. The $(VAR_NAME) syntax can
                                  be escaped with a double $$, ie: $$(VAR_NAME).
                                  Escaped references will never be expanded,
                                  regardless of whether the variable exists or
                                  not. Defaults to "".
                                type: string
                              valueFrom:
                                description: >-
                                  Source for the environment variable's value.
                                  Cannot be used if value is not empty.
                                type: object
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    type: object
                                    required:
                                      - key
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: >-
                                          Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields.
                                          apiVersion, kind, uid?
                                        type: string
                                      optional:
                                        description: >-
                                          Specify whether the ConfigMap or its key
                                          must be defined
                                        type: boolean
                                  fieldRef:
                                    description: >-
                                      Selects a field of the pod: supports
                                      metadata.name, metadata.namespace,
                                      `metadata.labels['<KEY>']`,
                                      `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName,
                                      status.hostIP, status.podIP,
                                      status.podIPs.
                                    type: object
                                    required:
                                      - fieldPath
                                    properties:
                                      apiVersion:
                                        description: >-
                                          Version of the schema the FieldPath is
                                          written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: >-
                                          Path of the field to select in the
                                          specified API version.
                                        type: string
                                  resourceFieldRef:
                                    description: >-
                                      Selects a resource of the container: only
                                      resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage,
                                      requests.cpu, requests.memory and
                                      requests.ephemeral-storage) are currently
                                      supported.
                                    type: object
                                    required:
                                      - resource
                                    properties:
                                      containerName:
                                        description: >-
                                          Container name: required for volumes,
                                          optional for env vars
                                        type: string
                                      divisor:
                                        description: >-
                                          Specifies the output format of the
                                          exposed resources, defaults to "1"
                                        pattern: >-
                                          ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                  secretKeyRef:
                                    description: >-
                                      Selects a key of a secret in the pod's
                                      namespace
                                    type: object
                                    required:
                                      - key
                                    properties:
                                      key:
                                        description: >-
                                          The key of the secret to select from. 
                                          Must be a valid secret key.
                                        type: string
                                      name:
                                        description: >-
                                          Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields.
                                          apiVersion, kind, uid?
                                        type: string
                                      optional:
                                        description: >-
                                          Specify whether the Secret or its key
                                          must be defined
                                        type: boolean
                        serviceAccountName:
                          description: ServiceAccountName settings
                          type: string
                        volumes:
                          description: Additional volume mounts
                          type: object
                          properties:
                            defaultMode:
                              description: Permissions mode.
                              type: integer
                              format: int32
                            items:
                              type: array
                              items:
                                type: object
                                required:
                                  - mountPath
                                properties:
                                  configMaps:
                                    description: >-
                                      Allow multiple configmaps to mount to the
                                      same directory
                                    type: array
                                    items:
                                      type: string
                                  items:
                                    description: Mount details
                                    type: array
                                    items:
                                      description: >-
                                        Maps a string key to a path within a
                                        volume.
                                      type: object
                                      required:
                                        - key
                                        - path
                                      properties:
                                        key:
                                          description: The key to project.
                                          type: string
                                        mode:
                                          description: >-
                                            Optional: mode bits used to set
                                            permissions on this file. Must be an
                                            octal value between 0000 and 0777 or a
                                            decimal value between 0 and 511. YAML
                                            accepts both octal and decimal values,
                                            JSON requires decimal values for mode
                                            bits. If not specified, the volume
                                            defaultMode will be used. This might be
                                            in conflict with other options that
                                            affect the file mode, like fsGroup, and
                                            the result can be other mode bits set.
                                          type: integer
                                          format: int32
                                        path:
                                          description: >-
                                            The relative path of the file to map the
                                            key to. May not be an absolute path. May
                                            not contain the path element '..'. May
                                            not start with the string '..'.
                                          type: string
                                  mountPath:
                                    description: An absolute path where to mount it
                                    type: string
                                  name:
                                    description: Volume name
                                    type: string
                                  secrets:
                                    description: Secret mount
                                    type: array
                                    items:
                                      type: string
                    imagePullPolicy:
                      description: ImagePullPolicy for the Containers.
                      type: string
                      default: Always
                      enum:
                        - Always
                        - Never
                        - IfNotPresent
                    podannotations:
                      description: List of annotations to set in the keycloak pods
                      type: object
                      additionalProperties:
                        type: string
                    podlabels:
                      description: List of labels to set in the keycloak pods
                      type: object
                      additionalProperties:
                        type: string
                    resources:
                      description: Resources (Requests and Limits) for the Pods.
                      type: object
                      properties:
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                extensions:
                  description: >-
                    A list of extensions, where each one is a URL to a JAR files
                    that will be deployed in Keycloak.
                  type: array
                  items:
                    type: string
                  x-kubernetes-list-type: set
                postgresDeploymentSpec:
                  description: >-
                    Resources (Requests and Limits) and ImagePullPolicy for
                    PostgresDeployment.
                  type: object
                  properties:
                    imagePullPolicy:
                      description: ImagePullPolicy for the Containers.
                      type: string
                      default: Always
                      enum:
                        - Always
                        - Never
                        - IfNotPresent
                    resources:
                      description: Resources (Requests and Limits) for the Pods.
                      type: object
                      properties:
                        limits:
                          description: >-
                            Limits describes the maximum amount of compute
                            resources allowed. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        requests:
                          description: >-
                            Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a
                            container, it defaults to Limits if that is
                            explicitly specified, otherwise to an
                            implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                          type: object
                          additionalProperties:
                            pattern: >-
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                podDisruptionBudget:
                  description: >-
                    Specify PodDisruptionBudget configuration. This field is
                    deprecated and will be ignored on K8s >=1.25
                  type: object
                  properties:
                    enabled:
                      description: >-
                        If set to true, the operator will create a
                        PodDistruptionBudget for the Keycloak deployment and set
                        its `maxUnavailable` value to 1.
                      type: boolean
                instances:
                  description: Number of Keycloak instances in HA mode. Default is 1.
                  type: integer
                DisableDefaultServiceMonitor:
                  description: >-
                    Disables the integration with Application Monitoring
                    Operator. When set to true, the operator doesn't create
                    default PrometheusRule, ServiceMonitor and GrafanaDashboard
                    objects and users will have to create them manually, if
                    needed.
                  type: boolean
            status:
              description: KeycloakStatus defines the observed state of Keycloak.
              type: object
              required:
                - credentialSecret
                - internalURL
                - message
                - phase
                - ready
                - version
              properties:
                credentialSecret:
                  description: The secret where the admin credentials are to be found.
                  type: string
                externalURL:
                  description: >-
                    External URL for accessing Keycloak instance from outside
                    the cluster. Is identical to external.URL if it's specified,
                    otherwise is computed (e.g. from Ingress).
                  type: string
                internalURL:
                  description: >-
                    An internal URL (service name) to be used by the admin
                    client.
                  type: string
                message:
                  description: >-
                    Human-readable message indicating details about current
                    operator phase or error.
                  type: string
                phase:
                  description: Current phase of the operator.
                  type: string
                ready:
                  description: >-
                    True if all resources are in a ready state and all work is
                    done.
                  type: boolean
                secondaryResources:
                  description: >-
                    A map of all the secondary resources types and names created
                    for this CR. e.g "Deployment": [ "DeploymentName1",
                    "DeploymentName2" ].
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      type: string
                version:
                  description: Version of Keycloak or RHSSO running on the cluster.
                  type: string
      subresources:
        status: {}
  conversion:
    strategy: None
status:
  conditions:
    - type: NamesAccepted
      status: 'True'
      lastTransitionTime: '2020-04-14T07:36:29Z'
      reason: NoConflicts
      message: no conflicts found
    - type: Established
      status: 'True'
      lastTransitionTime: '2020-04-14T07:36:29Z'
      reason: InitialNamesAccepted
      message: the initial names have been accepted
  acceptedNames:
    plural: keycloaks
    singular: keycloak
    kind: Keycloak
    listKind: KeycloakList
  storedVersions:
    - v1alpha1
